
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Массив = Новый Массив;
	МассивИсключений = Новый Массив;
	
	//ТекущийЭлементПодразделения = ПараметрыСеанса.ТекущийПользователь.Подразделение;
	МассивПодразделений = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
			МассивПодразделений.Добавить(Строка.Подразделение);	
	КонецЦикла;
	
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
		Если НЕ ЯвляетсяВложенным(Строка.Подразделение,МассивПодразделений ) Тогда
			МассивИсключений.Добавить(Строка.Подразделение.Родитель);
		КонецЕсли;
	КонецЦикла;



	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПодразделений",МассивПодразделений); 
	Запрос.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Родитель КАК Родитель,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Родитель,
	                    |	Подразделения.Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных";
	Результат = Запрос.Выполнить().Выгрузить();//.Выгрузить();
	Дерево = ДеревоТест.ПолучитьЭлементы();
	Дерево.Очистить();

	Для Каждого Строка из Результат Цикл
		РезультатИсключения = МассивИсключений.Найти(Строка.Родитель);
		Если РезультатИсключения<>Неопределено Тогда
			Строка.Родитель = Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	ЗаполнениеДерева(Дерево, Результат, Справочники.Подразделения.ПустаяСсылка());



КонецПроцедуры

Процедура ЗаполнениеДерева(Дерево, ТЗ, Родитель)
	//Если Первый Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Родитель", Родитель);
		РезультатМассив = ТЗ.НайтиСтроки(Отбор);
		Если РезультатМассив.Количество()>0 Тогда
			Для Каждого Строка из РезультатМассив Цикл
				СтрокаДерево = Дерево.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДерево, Строка); 
				ЭлементыДереваНовый = СтрокаДерево.ПолучитьЭлементы();	
				ЗаполнениеДерева(ЭлементыДереваНовый,ТЗ,Строка.Ссылка);         
			КонецЦикла;
		КонецЕсли;

	
КонецПРоцедуры

Функция ЯвляетсяВложенным(Подразделение, МассивПодразделений)
	Если Подразделение.Родитель<>Справочники.Подразделения.ПустаяСсылка() И МассивПодразделений.Найти(Подразделение.Родитель)<>Неопределено Тогда
		Возврат Истина;
	ИначеЕсли Подразделение.Родитель.Родитель<>Справочники.Подразделения.ПустаяСсылка() И МассивПодразделений.Найти(Подразделение.Родитель.Родитель)<>Неопределено Тогда
        Возврат Истина;
	ИначеЕсли Подразделение.Родитель.Родитель.Родитель<>Справочники.Подразделения.ПустаяСсылка() И МассивПодразделений.Найти(Подразделение.Родитель.Родитель.Родитель)<>Неопределено Тогда
        Возврат Истина;
	ИначеЕсли Подразделение.Родитель.Родитель.Родитель.Родитель<>Справочники.Подразделения.ПустаяСсылка() И МассивПодразделений.Найти(Подразделение.Родитель.Родитель.Родитель.Родитель)<>Неопределено Тогда
        Возврат Истина;
	ИначеЕсли Подразделение.Родитель.Родитель.Родитель.Родитель.Родитель<>Справочники.Подразделения.ПустаяСсылка() И МассивПодразделений.Найти(Подразделение.Родитель.Родитель.Родитель.Родитель.Родитель)<>Неопределено Тогда
        Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Процедура выводит дерево значений на форму.
//
Процедура РекурсивныйВыводДереваЗначений(ЭлементыДерева, ЭлементыДереваСтроки, ЭлементИсключение)

	Для каждого СтрокаДеревоЗначений Из ЭлементыДереваСтроки.Строки Цикл
			СтрокаДерево = ЭлементыДерева.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДерево, СтрокаДеревоЗначений);            
			ЭлементыДереваНовый = СтрокаДерево.ПолучитьЭлементы();
			РекурсивныйВыводДереваЗначений(ЭлементыДереваНовый, СтрокаДеревоЗначений, ЭлементИсключение);
	КонецЦикла;    

КонецПроцедуры // РекурсивныйВыводДереваЗначений()


&НаКлиенте
Процедура ДеревоТестОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура ДеревоТестВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ДеревоТестВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

