

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Отбор.Количество() тогда
		РежимПросмотра=ОтображениеТаблицы.ИерархическийСписок;
	Иначе
		РежимПросмотра=ОтображениеТаблицы.ИерархическийСписок;
	КонецЕсли;
	//Если Параметры.Свойство("ВыборБД") тогда
	////Если Параметры.ВыборБД тогда
	////	Список.Отбор.Элементы.Очистить();
	////	//ЭтаФорма.Элементы.Список.Отображение=ОтображениеТаблицы.ИерархическийСписок;
	////	РежимПросмотра=ОтображениеТаблицы.ИерархическийСписок;
	////КонецЕсли;
	//Иначе
	//	Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) И Параметры.ТекущаяСтрока.ЭтоГруппа тогда
	//		Список.Отбор.Элементы.Очистить();
	//		текГруппа=Список.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	//		текГруппа.ВидСравнения=ПредопределенноеЗначение("ВидСравненияКомпоновкиДанных.ВИерархии");
	//		текГруппа.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Родитель");
	//		текГруппа.Представление="Группа статей";
	//		текГруппа.ПравоеЗначение=Параметры.ТекущаяСтрока;
	//		текГруппа.Использование=Истина;
	//		//ЭтаФорма.Элементы.Список.Отображение=ОтображениеТаблицы.Список;
	//		РежимПросмотра=ОтображениеТаблицы.Список;
	//	Иначе
	//		Список.Отбор.Элементы.Очистить();
	//		//ЭтаФорма.Элементы.Список.Отображение=ОтображениеТаблицы.ИерархическийСписок;
	//		РежимПросмотра=ОтображениеТаблицы.ИерархическийСписок;
	//	КонецЕсли;
	//КонецЕсли;
	Если Параметры.Свойство("НашиСтатьи") Тогда
		Если Параметры.НашиСтатьи Тогда	
			Массив = Новый Массив;	
			//ТекущийЭлементПодразделения = ПараметрыСеанса.ТекущийПользователь.Подразделение;
			МассивПодразделений = Новый Массив;
			Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
				МассивПодразделений.Добавить(Строка.Подразделение);	
			КонецЦикла;
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("МассивПодразделений", МассивПодразделений);
			Запрос.Текст =      "ВЫБРАТЬ
			|	Подразделения.Ссылка КАК Подразделение
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
			|
			|СГРУППИРОВАТЬ ПО
			|	Подразделения.Ссылка";
			Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");//.Выгрузить();
			//Список.Параметры.УстановитьЗначениеПараметра("Подразделения", Результат);
			
			МассивСтатей = Новый Массив;
			Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокСтатей Цикл
				МассивСтатей.Добавить(Строка.СтатьяДвижения);		
			КонецЦикла;
			Если МассивСтатей.Количество()>0 Тогда
				Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСтатьям", Истина);	
			Иначе
				Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСтатьям", Ложь);
			КонецЕсли;
			СтатьиДвижения = ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей);
			Список.Параметры.УстановитьЗначениеПараметра("МассивСтатей", СтатьиДвижения);
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСтатьям", Ложь);
			Список.Параметры.УстановитьЗначениеПараметра("МассивСтатей", "");
		КонецЕсли;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСтатьям", Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("МассивСтатей", "");
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	СтатьиДвижения.Ссылка,
	|	СтатьиДвижения.Подразделение
	|ИЗ
	|	Справочник.СтатьиДвижения КАК СтатьиДвижения
	|ГДЕ
	|	СтатьиДвижения.Ссылка В ИЕРАРХИИ(&МассивСтатей)";
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	РезультатСтатей = Запрос.Выполнить().Выгрузить();     
	
	ЗапросПодразделений = Новый Запрос;
	
	ЗапросПодразделений.Текст =      "ВЫБРАТЬ
	|	Подразделения.Ссылка КАК Подразделение
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
	|
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.Ссылка";
	МассивПодразделенийСПустымиСтатьями = Новый Массив;
	Для Каждого Строка из МассивПодразделений Цикл
		Совпадений = Ложь;
		
		ЗапросПодразделений.УстановитьПараметр("МассивПодразделений", Строка);
		РезультатПодразделений = ЗапросПодразделений.Выполнить().Выгрузить();
		
		//поиск совпадений
		Для Каждого Подразделение из РезультатПодразделений Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Подразделение", Подразделение.Подразделение);
			РезультатПоиска = РезультатСтатей.НайтиСтроки(Отбор);
			Если РезультатПоиска.Количество()>0 Тогда
				Совпадений = Истина;
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
		Если Совпадений = Ложь Тогда 
			МассивПодразделенийСПустымиСтатьями.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	//Запрос по пустым подразделениям по всем статьям
	//добавляем в массив
	ЗапросПоСтатьям = Новый Запрос;
	ЗапросПоСтатьям.УстановитьПараметр("МассивПодразделенийСПустымиСтатьями", МассивПодразделенийСПустымиСтатьями);
	ЗапросПоСтатьям.Текст = "ВЫБРАТЬ
	|	СтатьиДвижения.Ссылка
	|ИЗ
	|	Справочник.СтатьиДвижения КАК СтатьиДвижения
	|ГДЕ
	|	СтатьиДвижения.Подразделение В ИЕРАРХИИ(&МассивПодразделенийСПустымиСтатьями)";
	РезультатПоСтатьям = ЗапросПОСтатьям.Выполнить().Выгрузить();
	Для Каждого Строка из РезультатПоСтатьям Цикл
		МассивСтатей.Добавить(Строка.Ссылка);	
	КонецЦикла;
	
	Возврат МассивСтатей;
	
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ РежимПросмотра=Неопределено тогда
		Элементы.Список.Отображение=РежимПросмотра;
	КонецЕсли;
	////Если Список.Отбор.Элементы.Количество() тогда
	////	Для Каждого текОтбор из Список.Отбор.Элементы Цикл
	////		Если НЕ ТипЗнч(текОтбор)=Тип("ГруппаЭлементовОтбораКомпоновкиДанных") тогда
	////			Если текОтбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Родитель") тогда
	////				Элементы.Список.ОтображатьКорень=Ложь;
	////				текОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.ВИерархии;
	////				Элементы.Список.ТекущийРодитель=текОтбор.ПравоеЗначение;
	////			КонецЕсли;
	////			Если текОтбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Подразделение") тогда
	////				текОтбор.Использование=НЕ текОтбор.ПравоеЗначение.Пустая();
	////			КонецЕсли;
	////		КонецЕсли;
	////	КонецЦикла;
	////	//Элементы.Список.Развернуть(Элементы.Список.ТекущаяСтрока,Истина);
	////КонецЕсли;
КонецПроцедуры

