&НаКлиенте
перем ПризнакПереноса;


&НаКлиенте
Процедура Подразделение1ПриИзменении(Элемент)
	ОбновитьОтбор();	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтбор()
	Если ЗначениеЗаполнено(ОтборПодразделение) тогда
	//	Список.Отбор.Элементы.Очистить();
	//	Список.УсловноеОформление.Элементы.Очистить();

	//	ГруппаКонструктора = Подразделение;
	//	
	//	ОтборПоГруппе = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	//	ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ОтборПоГруппе.ПравоеЗначение = ГруппаКонструктора;
	//	
	//	ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	//	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	//	
	//	//ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	//	//ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина );
	//	//ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Отображать",Истина );
	//	//
	//	//ОтборПоГруппе = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	//ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	//	//ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	//ОтборПоГруппе.ПравоеЗначение = ГруппаКонструктора;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Подразделение",ОтборПодразделение,ВидСравненияКомпоновкиДанных.Равно,,Истина)
	иначе
		Список.Отбор.Элементы.Очистить();
		Список.УсловноеОформление.Элементы.Очистить();
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПустоеПодразделение()
	Возврат Справочники.Подразделения.ПустаяСсылка();
КонецФункции

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	//Если ПризнакПереноса <> Истина Тогда
	//	Если РазныеЗначения(Элемент.ТекущаяСтрока) Тогда
	//		Режим = РежимДиалогаВопрос.ДаНет;
	//		Ответ = Вопрос("Заполнить аналитику статьи по родителю",Режим,0);
	//		Если Ответ = КодВозвратаДиалога.Нет Тогда
	//		ЭтаФорма.ОбновитьОтображениеДанных();
	//			Возврат;
	//		КонецЕсли;	
	//		ИзменитьРеквизитыСтатьиПриПренестиВГруппу(Элемент.ТекущаяСтрока);
	//	КонецЕсли;
	//КонецЕсли;
	//ПризнакПереноса = Ложь;
	//ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ИзменитьРеквизитыСтатьи(ТекущаяСтрока,ТекущийРодитель)
	ОбъектСтатья = ТекущаяСтрока.ПолучитьОбъект();
	ОбъектСтатья.РазделОПиУДоход = ТекущийРодитель.РазделОПиУДоход;
	ОбъектСтатья.РазделОПиУРасход = ТекущийРодитель.РазделОПиУРасход;
	ОбъектСтатья.РазделДДС = ТекущийРодитель.РазделДДС;
	ОбъектСтатья.СчетУчетаДт = ТекущийРодитель.СчетУчетаДт;
	ОбъектСтатья.СчетУчетаКт  = ТекущийРодитель.СчетУчетаКт;
	ОбъектСтатья.Записать();
КонецПроцедуры

&НаСервере
Процедура ИзменитьРеквизитыСтатьиПриПренестиВГруппу(ТекущаяСтрока)
	ОбъектСтатья = ТекущаяСтрока.ПолучитьОбъект();
	ОбъектСтатья.РазделОПиУДоход = ТекущаяСтрока.Родитель.РазделОПиУДоход;
	ОбъектСтатья.РазделОПиУРасход = ТекущаяСтрока.Родитель.РазделОПиУРасход;
	ОбъектСтатья.РазделДДС = ТекущаяСтрока.Родитель.РазделДДС;
	ОбъектСтатья.СчетУчетаДт = ТекущаяСтрока.Родитель.СчетУчетаДт;
	ОбъектСтатья.СчетУчетаКт  = ТекущаяСтрока.Родитель.СчетУчетаКт;
	ОбъектСтатья.Записать();
КонецПроцедуры

&НаСервере
Функция РазныеРодители(Текущий,НовыйРодитель)
	Если Текущий.Родитель = НовыйРодитель Тогда
		Возврат Ложь;
	Иначе
	    Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервере
Функция РазныеЗначения(Элемент)
	Если Элемент.РазделДДС = Элемент.Родитель.РазделДДС и Элемент.РазделОПиУДоход = Элемент.Родитель.РазделОПиУДоход и Элемент.РазделОПиУРасход = Элемент.Родитель.РазделОПиУРасход Тогда
		Возврат Ложь;
	Иначе
	    Возврат Истина;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	//Если РазныеРодители(Элемент.ТекущаяСтрока,Строка) Тогда
	//	Режим = РежимДиалогаВопрос.ДаНет;
	//	Ответ = Вопрос("Заполнить аналитику статьи по родителю",Режим,0);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//	ЭтаФорма.ОбновитьОтображениеДанных();
	//		Возврат;
	//	КонецЕсли;	
	//	ИзменитьРеквизитыСтатьи(Элемент.ТекущаяСтрока,Строка);
	//	ЭтаФорма.ОбновитьОтображениеДанных();
	//КонецЕсли;
	//ПризнакПереноса = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзШаблона(Команда)
	ОткрытьФормуМодально("Справочник.СтатьиДвижения.Форма.ШаблоныГрупп");
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Массив = Новый Массив;	
	//ТекущийЭлементПодразделения = ПараметрыСеанса.ТекущийПользователь.Подразделение;
	МассивПодразделений = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
		МассивПодразделений.Добавить(Строка.Подразделение);	
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПодразделений", МассивПодразделений);
	Запрос.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Подразделение
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Ссылка";
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");//.Выгрузить();
	Список.Параметры.УстановитьЗначениеПараметра("Подразделения", Результат);
	
	МассивСтатей = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокСтатей Цикл
		МассивСтатей.Добавить(Строка.СтатьяДвижения);		
	КонецЦикла;
	Если МассивСтатей.Количество()>0 Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСтатьям", Истина);	
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ФильтрПоСтатьям", Ложь);
	КонецЕсли;
	СтатьиДвижения = ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей);
	Список.Параметры.УстановитьЗначениеПараметра("МассивСтатей", СтатьиДвижения);
	
КонецПроцедуры

Функция ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СтатьиДвижения.Ссылка,
	                |	СтатьиДвижения.Подразделение
	                |ИЗ
	                |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                |ГДЕ
	                |	СтатьиДвижения.Ссылка В ИЕРАРХИИ(&МассивСтатей)";
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	РезультатСтатей = Запрос.Выполнить().Выгрузить();     
	
	ЗапросПодразделений = Новый Запрос;
	
	ЗапросПодразделений.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Подразделение
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Ссылка";
	МассивПодразделенийСПустымиСтатьями = Новый Массив;
	Для Каждого Строка из МассивПодразделений Цикл
		Совпадений = Ложь;
		
		ЗапросПодразделений.УстановитьПараметр("МассивПодразделений", Строка);
		РезультатПодразделений = ЗапросПодразделений.Выполнить().Выгрузить();
		
		//поиск совпадений
		Для Каждого Подразделение из РезультатПодразделений Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Подразделение", Подразделение.Подразделение);
			РезультатПоиска = РезультатСтатей.НайтиСтроки(Отбор);
			Если РезультатПоиска.Количество()>0 Тогда
				Совпадений = Истина;
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
		Если Совпадений = Ложь Тогда 
			МассивПодразделенийСПустымиСтатьями.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	//Запрос по пустым подразделениям по всем статьям
	//добавляем в массив
	ЗапросПоСтатьям = Новый Запрос;
	ЗапросПоСтатьям.УстановитьПараметр("МассивПодразделенийСПустымиСтатьями", МассивПодразделенийСПустымиСтатьями);
	ЗапросПоСтатьям.Текст = "ВЫБРАТЬ
	                        |	СтатьиДвижения.Ссылка
	                        |ИЗ
	                        |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                        |ГДЕ
	                        |	СтатьиДвижения.Подразделение В ИЕРАРХИИ(&МассивПодразделенийСПустымиСтатьями)";
	РезультатПоСтатьям = ЗапросПОСтатьям.Выполнить().Выгрузить();
	Для Каждого Строка из РезультатПоСтатьям Цикл
		МассивСтатей.Добавить(Строка.Ссылка);	
	КонецЦикла;
	
	Возврат МассивСтатей;
	
КонецФункции



