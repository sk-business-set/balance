
&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	Если Параметры.Ключ.Пустая() Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Заполнить аналитику статьи по родителю",Режим,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
		ЭтаФорма.ОбновитьОтображениеДанных();
			Возврат;
		КонецЕсли;	
		Объект.РазделОПиУДоход = Объект.Родитель.РазделОПиУДоход;
		Объект.РазделОПиУРасход = Объект.Родитель.РазделОПиУРасход;
		Объект.РазделДДС = Объект.Родитель.РазделДДС;
		Объект.СчетУчетаДт = Объект.Родитель.СчетУчетаДт;
		Объект.СчетУчетаКт  = Объект.Родитель.СчетУчетаКт;
		Объект.Подразделение = Объект.Родитель.Подразделение; 
	Иначе
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Заполнить аналитику статьи по родителю",Режим,0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
		ЭтаФорма.ОбновитьОтображениеДанных();
			Возврат;
		КонецЕсли;	
		ИзменитьРеквизитыСтатьи(Объект.Ссылка,Объект.Родитель);
		ЭтотОбъект.Прочитать();	
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменитьРеквизитыСтатьи(СтатьяСсылка,СтатьяРодитель)
	ОбъектСтатья = СтатьяСсылка.ПолучитьОбъект();
	ОбъектСтатья.Родитель = СтатьяРодитель;
	ОбъектСтатья.РазделОПиУДоход = СтатьяРодитель.РазделОПиУДоход;
	ОбъектСтатья.РазделОПиУРасход = СтатьяРодитель.РазделОПиУРасход;
	ОбъектСтатья.РазделДДС = СтатьяРодитель.РазделДДС;
	ОбъектСтатья.СчетУчетаДт = СтатьяРодитель.СчетУчетаДт;
	ОбъектСтатья.СчетУчетаКт  = СтатьяРодитель.СчетУчетаКт;
	ОбъектСтатья.Подразделение  = СтатьяРодитель.Подразделение;
	ОбъектСтатья.Записать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.РазделОПиУДоход = Объект.Родитель.РазделОПиУДоход;
		Объект.РазделОПиУРасход = Объект.Родитель.РазделОПиУРасход;
		Объект.РазделДДС = Объект.Родитель.РазделДДС;
		Объект.СчетУчетаДт = Объект.Родитель.СчетУчетаДт;
		Объект.СчетУчетаКт  = Объект.Родитель.СчетУчетаКт;
		Если Объект.Родитель=Справочники.СтатьиДвижения.ПустаяСсылка() тогда
			Объект.Подразделение=ПараметрыСеанса.ПодразделениеПользователя;
		Иначе
			Объект.Подразделение = Объект.Родитель.Подразделение; 
		КонецЕсли;
		Если Объект.Родитель.Валюта.Пустая() тогда
			Объект.Валюта=Константы.ОсновнаяВалюта.Получить();
		Иначе
			Объект.Валюта=Объект.Родитель.Валюта;
		КонецЕсли;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//НовыйПараметр = Новый ПараметрВыбора("Отбор.Вид", ВидСчета.Активный);
	//НовыйМассив = Новый Массив();
	//НовыйМассив.Добавить(НовыйПараметр);
	//НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	//Элементы.СчетУчетаДт.ПараметрыВыбора = НовыеПараметры;
	//
	//НовыйПараметр = Новый ПараметрВыбора("Отбор.Вид", ВидСчета.Пассивный);
	//НовыйМассив = Новый Массив();
	//НовыйМассив.Добавить(НовыйПараметр);
	//НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	//Элементы.СчетУчетаКт.ПараметрыВыбора = НовыеПараметры;

	ТекущаяВалюта=Объект.Валюта;
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаДтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = ПолучитьФорму("ПланСчетов.Внутренний.ФормаВыбора",,Элемент);
	ГруппаОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
	ГруппаОтбора.Использование = Истина; 
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
	ГруппаОтбора.Представление = "Отбор по виду";

    ОтборПоГруппе = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вид");
    ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ОтборПоГруппе.ПравоеЗначение = ВидСчета.Активный;
    ОтборПоГруппе = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вид");
    ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ОтборПоГруппе.ПравоеЗначение = ВидСчета.АктивноПассивный;
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаКтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = ПолучитьФорму("ПланСчетов.Внутренний.ФормаВыбора",,Элемент);
	ГруппаОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
	ГруппаОтбора.Использование = Истина; 
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
	ГруппаОтбора.Представление = "Отбор по виду";

    ОтборПоГруппе = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вид");
    ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ОтборПоГруппе.ПравоеЗначение = ВидСчета.Пассивный;
    ОтборПоГруппе = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вид");
    ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ОтборПоГруппе.ПравоеЗначение = ВидСчета.АктивноПассивный;
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	ДвиженияСтатьи=ЕстьДвижения(Объект.Ссылка);
	Если ДвиженияСтатьи.Количество() тогда
		ЗавершениеПредупреждения=Новый ОписаниеОповещения("ОбработатьПредупреждение",ЭтаФорма,ДвиженияСтатьи);
		ПоказатьВопрос(ЗавершениеПредупреждения,"Существуют движения по данной статье. Изменение валюты приведет к пересчету. Продолжить?",РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПредупреждение(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Отмена Тогда
        Объект.Валюта=ТекущаяВалюта;
    Иначе
		ВалютаПриИзмененииНаСервере(Параметры,Объект.Валюта,ТекущаяВалюта);
		ТекущаяВалюта=Объект.Валюта;
		Оповестить("ДобавленоДвижение",ТекущаяДата());
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьДвижения(текСтатья)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	             |	Движения.Регистратор
	             |ИЗ
	             |	РегистрНакопления.Движения КАК Движения
	             |ГДЕ
	             |	Движения.СтатьяДвижения = &Статья
	             |	И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)";
	Запрос.УстановитьПараметр("Статья",текСтатья);
	ДвиженияСписок=Запрос.Выполнить().Выгрузить();
	Возврат ДвиженияСписок.ВыгрузитьКолонку("Регистратор");
КонецФункции

&НаСервереБезКонтекста
Процедура ВалютаПриИзмененииНаСервере(СписокДвижений,текВалюта,предВалюта)
	Для Каждого текДвижение из СписокДвижений Цикл
		текДок=текДвижение.ПолучитьОбъект();
		текДок.ПересчитатьВВалюту(текВалюта,предВалюта);
		текДок.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры
