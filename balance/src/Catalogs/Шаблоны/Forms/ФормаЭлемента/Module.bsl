

&НаКлиенте
Процедура ДвиженияСтатьяДвиженияКудаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ФормаВыбораНужныхСтатей = ФормаВыбораСтатей(Элемент, ДанныеВыбора, СтандартнаяОбработка,Элементы.Движения.ТекущиеДанные.ПодразделениеКуда,Истина);
	ФормаВыбораНужныхСтатей.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияСтатьяДвиженияОткудаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ФормаВыбораНужныхСтатей = ФормаВыбораСтатей(Элемент, ДанныеВыбора, СтандартнаяОбработка,Элементы.Движения.ТекущиеДанные.ПодразделениеОткуда, Истина);
	ФормаВыбораНужныхСтатей.Открыть();
КонецПроцедуры


&НаКлиенте
Функция ФормаВыбораСтатей(Элемент, ДанныеВыбора, СтандартнаяОбработка,НужноеПодразделение,ВыборГрупп=Ложь)
	СписокСтатей = Новый СписокЗначений;
	СтандартнаяОбработка = Ложь;
	Если ВыборГрупп тогда
		//ФормаВыбора = ПолучитьФорму("Справочник.СтатьиДвижения.ФормаВыбора",Новый Структура("ВыборГрупп",ВыборГрупп),Элемент);
		ФормаВыбора = ПолучитьФорму("Справочник.СтатьиДвижения.ФормаВыбора",Новый Структура("ВыборГруппИЭлементов",ИспользованиеГруппИЭлементов.ГруппыИЭлементы),Элемент);
	Иначе
		ФормаВыбора = ПолучитьФорму("Справочник.СтатьиДвижения.ФормаВыбора",,Элемент);
	КонецЕсли;
	Если ЗначениеЗаполнено(НужноеПодразделение) Тогда
		ГруппаКонструктора = НужноеПодразделение;
		Список = ФормаВыбора.Список;
	    ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	    ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	    ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	    ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина );
	    ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Отображать",Истина );
	    
		ГруппаОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
		ГруппаОтбора.Использование = Истина; 
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
		ГруппаОтбора.Представление = "Отбор по подразделению";

	    ОтборПоГруппе = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	    ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	    ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	    ОтборПоГруппе.ПравоеЗначение = ГруппаКонструктора;
	    ОтборПоГруппе = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	    ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	    ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	    ОтборПоГруппе.ПравоеЗначение = РаботаСДаннымиСервер.ПустаяСсылкаСправочника("Подразделения");
		
		//ОтборПоГруппе = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ОтборПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
		//ОтборПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
		//ОтборПоГруппе.ПравоеЗначение = ГруппаКонструктора;
	КонецЕсли;
	Возврат ФормаВыбора;
КонецФункции	

&НаКлиенте
Процедура ДвиженияСтатьяДвиженияКудаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если СтрДлина(Текст)>0 Тогда
		ПолучитьСписокСтатей(Элементы.Движения.ТекущиеДанные.ПодразделениеКуда,Текст,СтрДлина(Текст));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияСтатьяДвиженияОткудаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если СтрДлина(Текст)>0 Тогда
		ПолучитьСписокСтатей(Элементы.Движения.ТекущиеДанные.ПодразделениеОткуда,Текст,СтрДлина(Текст));
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСписокСтатей(ПодразделениеЭтойСтроки,НашТекст,ДлинаТекста)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СтатьиДвижения.Ссылка
	               |ИЗ
	               |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	               |ГДЕ
	               |	СтатьиДвижения.Подразделение = &Подразделение
	               |	И ПОДСТРОКА(СтатьиДвижения.Наименование, 1, &Длина) = &Текст";
	Запрос.УстановитьПараметр("Подразделение",ПодразделениеЭтойСтроки);
	Запрос.УстановитьПараметр("Длина",ДлинаТекста);
	Запрос.УстановитьПараметр("Текст",НашТекст);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса[0] = Неопределено ТОгда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;		
КонецФункции

&НаКлиенте
Процедура ДвиженияСтатьяДвиженияКудаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    знТекст    =    ?(ПустаяСтрока(Текст), Элементы.Движения.ТекущиеДанные.СтатьяДвиженияКуда, Текст);
	ДанныеВыбора    =   ПолучитьДанныеВыбораПоПодразделению(знТекст,Элементы.Движения.ТекущиеДанные.ПодразделениеКуда);	
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияСтатьяДвиженияОткудаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    знТекст    =    ?(ПустаяСтрока(Текст), Элементы.Движения.ТекущиеДанные.СтатьяДвиженияОткуда, Текст);
	ДанныеВыбора    =   ПолучитьДанныеВыбораПоПодразделению(знТекст,Элементы.Движения.ТекущиеДанные.ПодразделениеОткуда);	
КонецПроцедуры

&НаСервере 
Функция ПолучитьДанныеВыбораПоПодразделению (знТекст,ПодразделениеКуда)
	спВыбора    =    Новый СписокЗначений;
    Если НЕ ЗначениеЗаполнено(СокрЛП(знТекст)) Тогда
        Возврат Неопределено;    
    Иначе
        знТекст    =    СокрЛП(знТекст);
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СтатьиДвижения.Ссылка,
	               |	СтатьиДвижения.Наименование
	               |ИЗ
	               |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	               |ГДЕ
	               |	СтатьиДвижения.Подразделение = &Подразделение
	               |	И ПОДСТРОКА(СтатьиДвижения.Наименование, 1, &Длина) = &Текст
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтатьиДвижения.Ссылка,
	               |	СтатьиДвижения.Наименование";
	Запрос.УстановитьПараметр("Подразделение",ПодразделениеКуда);
	Запрос.УстановитьПараметр("Длина",СтрДлина(знТекст));
	Запрос.УстановитьПараметр("Текст",знТекст);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Если ЗначениеЗаполнено(РезультатЗапроса.Ссылка) Тогда
			спВыбора.Добавить(РезультатЗапроса.Ссылка,РезультатЗапроса.Наименование);    
		КонецЕсли;	
	КонецЦикла;
	Если спВыбора.Количество() = 0 Тогда
		Возврат Неопределено;		
	Иначе	
		Возврат спВыбора;
	КонецЕсли;
КонецФункции	

&НаКлиенте
Процедура ДвиженияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока тогда
		текСтрока=Элементы.Движения.ТекущиеДанные;
		текПодразделение=ПараметрыСеансаПодразделениеПользователя();
		текСтрока.ПодразделениеОткуда=текПодразделение;
		текСтрока.ПодразделениеКуда=текПодразделение;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыСеансаПодразделениеПользователя()
	Возврат ПараметрыСеанса.ПодразделениеПользователя;
КонецФункции




