Функция ПоследнийНомерБыстрогоДвижения(текБД) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	МАКСИМУМ(СозданныеБыстрыеДвижения.НомерБыстрогоДвижения) КАК Номер
	             |ИЗ
	             |	РегистрСведений.СозданныеБыстрыеДвижения КАК СозданныеБыстрыеДвижения
	             |ГДЕ
	             |	СозданныеБыстрыеДвижения.БыстроеДвижение = &БыстроеДвижение";
	Запрос.УстановитьПараметр("БыстроеДвижение",текБД);
	ДвиженияСписок=Запрос.Выполнить().Выбрать();
	Пока ДвиженияСписок.Следующий() Цикл
		Результат=ДвиженияСписок.Номер;
	КонецЦикла;
	Возврат ?(Результат=NULL,0,Результат);
КонецФункции

Функция СуществуетНомерБыстрогоДвижения(текБД,текНом) Экспорт
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	СозданныеБыстрыеДвижения.Движение
	             |ИЗ
	             |	РегистрСведений.СозданныеБыстрыеДвижения КАК СозданныеБыстрыеДвижения
	             |ГДЕ
	             |	СозданныеБыстрыеДвижения.БыстроеДвижение = &БыстроеДвижение
	             |	И СозданныеБыстрыеДвижения.НомерБыстрогоДвижения = &Номер";
	Запрос.УстановитьПараметр("БыстроеДвижение",текБД);
	Запрос.УстановитьПараметр("Номер",текНом);
	ДвиженияСписок=Запрос.Выполнить().Выгрузить();
	Возврат (ДвиженияСписок.Количество()>0);
КонецФункции

Функция СтрокаИзНомера(текНом,текКолво)
	текНомерБДстрока=Строка(текНом);
	Пока СтрДлина(текНомерБДстрока)<текКолво Цикл
		текНомерБДстрока="0"+текНомерБДСтрока;
	КонецЦикла;
	Возврат текНомерБДстрока;
КонецФункции

Процедура ЗарегистрироватьБыстроеДвижение(текБД,текДок,текНом,текНомСтрока) Экспорт
	текРегистрация=РегистрыСведений.СозданныеБыстрыеДвижения.СоздатьМенеджерЗаписи();
	текРегистрация.БыстроеДвижение=текБД;
	текРегистрация.Движение=текДок;
	текРегистрация.Прочитать();
	Если НЕ текРегистрация.Выбран() тогда
		Если текНом=0 тогда
			НачатьТранзакцию();
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить();
			ЭлементБлокировки.Область="РегистрСведений.СозданныеБыстрыеДвижения";
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("БыстроеДвижение",текБД);
			Блокировка.Заблокировать();			
			текНом=ПоследнийНомерБыстрогоДвижения(текБД)+1;
			Пока СуществуетНомерБыстрогоДвижения(текБД,текНом) Цикл
				текНом=текНом+1;
			КонецЦикла;
			текНомСтрока=СтрокаИзНомера(текНом,9);
			текРегистрация.БыстроеДвижение=текБД;
			текРегистрация.Движение=текДок;
			текРегистрация.НомерБыстрогоДвижения=текНом;
			текРегистрация.ПредставлениеНомера=текНомСтрока;
			текРегистрация.Записать();
		    ЗафиксироватьТранзакцию();
		Иначе
			текРегистрация.БыстроеДвижение=текБД;
			текРегистрация.Движение=текДок;
			текРегистрация.НомерБыстрогоДвижения=текНом;
			текРегистрация.ПредставлениеНомера=текНомСтрока;
			текРегистрация.Записать();
		КонецЕсли;
	Иначе
		текНом=текРегистрация.НомерБыстрогоДвижения;
		текНомСтрока=текРегистрация.ПредставлениеНомера;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьГруппуБДвижений(текИмя) Экспорт
	Результат=Справочники.Шаблоны.ПустаяСсылка();
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	Шаблоны.Ссылка КАК Ссылка
	              |ИЗ
	              |	Справочник.Шаблоны КАК Шаблоны
	              |ГДЕ
	              |	Шаблоны.Наименование = &Наименование
	              |	И Шаблоны.ЭтоГруппа = ИСТИНА";
	Запрос.УстановитьПараметр("Наименование",текИмя);
	Движения=Запрос.Выполнить().Выбрать();
	Пока Движения.Следующий() Цикл
		Результат=Движения.Ссылка;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПолучитьЭлементБДвижений(текИмя) Экспорт
	Результат=Справочники.Шаблоны.ПустаяСсылка();
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	Шаблоны.Ссылка КАК Ссылка
	              |ИЗ
	              |	Справочник.Шаблоны КАК Шаблоны
	              |ГДЕ
	              |	Шаблоны.Наименование = &Наименование
	              |	И Шаблоны.ЭтоГруппа = Ложь";
	Запрос.УстановитьПараметр("Наименование",текИмя);
	Движения=Запрос.Выполнить().Выбрать();
	Пока Движения.Следующий() Цикл
		Результат=Движения.Ссылка;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПолучитьДокументыПоИмениБДвижения(текИД) Экспорт
	текИмяПозиция=СтрНайти(текИД,",");
	Если текИмяПозиция>0 тогда
		текИмяБД=Лев(текИД,текИмяПозиция-1);
		текБДСсылка=ПолучитьЭлементБДвижений(текИмяБД);
		Если НЕ текБДСсылка=Справочники.Шаблоны.ПустаяСсылка() тогда
			текНом=Сред(текИД,текИмяПозиция);
			текНомСтрока=СтрЗаменить(СтрЗаменить(текНом,",","")," ","");
			текНомерБД=Число(текНомСтрока);
			БД=Новый Структура("БД,НомерБД,НомерБДСтрока",текБДСсылка,текНомерБД,текНомСтрока);
			Если текНомерБД>0 тогда
				ДокСписок=Новый Массив;
				Запрос=Новый Запрос;
				Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
				             |	СозданныеБыстрыеДвижения.Движение.Ссылка КАК Документ
				             |ИЗ
				             |	РегистрСведений.СозданныеБыстрыеДвижения КАК СозданныеБыстрыеДвижения
				             |ГДЕ
				             |	СозданныеБыстрыеДвижения.БыстроеДвижение = &БыстроеДвижение
				             |	И СозданныеБыстрыеДвижения.НомерБыстрогоДвижения = &НомерБыстрогоДвижения
				             |	И СозданныеБыстрыеДвижения.Движение.ПометкаУдаления = ЛОЖЬ";
				Запрос.УстановитьПараметр("БыстроеДвижение",текБДСсылка);
				Запрос.УстановитьПараметр("НомерБыстрогоДвижения",текНомерБД);
				ДокументыБД=Запрос.Выполнить().Выбрать();
				Пока ДокументыБД.Следующий() Цикл
					ДокСписок.Добавить(ДокументыБД.Документ);
				КонецЦикла;
				Возврат Новый Структура("БД,ДокСписок",БД,ДокСписок);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьДокументыПоДвижению(текДок) Экспорт
	текБДСсылка=Неопределено;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СозданныеБыстрыеДвижения.БыстроеДвижение КАК БД,
	             |	СозданныеБыстрыеДвижения.НомерБыстрогоДвижения КАК НомерБД,
	             |	СозданныеБыстрыеДвижения.ПредставлениеНомера КАК НомерБДСтрока
	             |ИЗ
	             |	РегистрСведений.СозданныеБыстрыеДвижения КАК СозданныеБыстрыеДвижения
	             |ГДЕ
	             |	СозданныеБыстрыеДвижения.Движение = &Движение";
	Запрос.УстановитьПараметр("Движение",текДок);
	списокБД=Запрос.Выполнить().Выбрать();
	Пока СписокБД.Следующий() Цикл
		текБДСсылка=СписокБД.БД;
		текНомСтрока=СписокБД.НомерБДСтрока;
		текНомерБД=СписокБД.НомерБД;
	КонецЦикла;
	Если НЕ текБДСсылка=Неопределено тогда
		БД=Новый Структура("БД,НомерБД,НомерБДСтрока",текБДСсылка,текНомерБД,текНомСтрока);
		Если текНомерБД>0 тогда
			ДокСписок=Новый Массив;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			             |	СозданныеБыстрыеДвижения.Движение.Ссылка КАК Документ
			             |ИЗ
			             |	РегистрСведений.СозданныеБыстрыеДвижения КАК СозданныеБыстрыеДвижения
			             |ГДЕ
			             |	СозданныеБыстрыеДвижения.БыстроеДвижение = &БыстроеДвижение
			             |	И СозданныеБыстрыеДвижения.НомерБыстрогоДвижения = &НомерБыстрогоДвижения
			             |	И СозданныеБыстрыеДвижения.Движение.ПометкаУдаления = ЛОЖЬ";
			Запрос.УстановитьПараметр("БыстроеДвижение",текБДСсылка);
			Запрос.УстановитьПараметр("НомерБыстрогоДвижения",текНомерБД);
			ДокументыБД=Запрос.Выполнить().Выбрать();
			Пока ДокументыБД.Следующий() Цикл
				ДокСписок.Добавить(ДокументыБД.Документ);
			КонецЦикла;
			Возврат Новый Структура("БД,ДокСписок",БД,ДокСписок);
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция СоставНастройкиПользователя() Экспорт
	Результат=Новый Массив;
	Запрос=Новый Запрос;
	табНастройки=РегистрыСведений.НастройкиПользователя.СоздатьНаборЗаписей().Метаданные();
	Для Каждого текКол из табНастройки.Ресурсы Цикл
		текРез=Новый Структура("Имя,Заголовок,Тип,Значение");
		текРез.Имя=текКол.Имя;
		текРез.Заголовок=текКол.Синоним;
		текРез.Тип=текКол.Тип;
		Результат.Добавить(текРез);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Процедура ПолныйПутьСсылки(текСсылка,текПуть) Экспорт
	текПуть=?(текПуть="",текСсылка.Наименование,текСсылка.Наименование+" / "+текПуть);
	Если НЕ текСсылка.Родитель.Пустая() тогда
		ПолныйПутьСсылки(текСсылка.Родитель,текПуть);
	КонецЕсли;
КонецПроцедуры

Функция ПустаяСсылкаСправочника(Имя) Экспорт
	Возврат Справочники[Имя].ПустаяСсылка();
КонецФункции

