Функция СоставГруппыДО(текГруппа) Экспорт
	Результат=Новый СписокЗначений;
	Запрос=Новый Запрос;
	Если текГруппа.ГруппаОформления тогда
		Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		              |	СоставГруппыОформления.БыстроеДвижение КАК ЭлГруппы
		              |ИЗ
		              |	РегистрСведений.СоставГруппыОформления КАК СоставГруппыОформления
		              |ГДЕ
		              |	СоставГруппыОформления.ГруппаДО = &ГруппаДО";
	Иначе
		Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		              |	СоставГруппыДоступа.Подразделение КАК ЭлГруппы
		              |ИЗ
		              |	РегистрСведений.СоставГруппыДоступа КАК СоставГруппыДоступа
		              |ГДЕ
		              |	СоставГруппыДоступа.ГруппаДО = &ГруппаДО";
	КонецЕсли;
	Запрос.УстановитьПараметр("ГруппаДО",текГруппа);
	табСостав=Запрос.Выполнить().Выбрать();
	Пока табСостав.Следующий() цикл
		Результат.Добавить(табСостав.ЭлГруппы,Строка(табСостав.ЭлГруппы.Родитель));
	КонецЦикла;
	Возврат Результат;
КонецФункции

Процедура СохранитьСоставГруппыДО(текГруппа,текСписок) Экспорт
	тзСписок=Новый ТаблицаЗначений;
	тзСписок.Колонки.Добавить("ГруппаДО");
	Если текГруппа.ГруппаОформления тогда
		тзСписок.Колонки.Добавить("БыстроеДвижение");
		Для Каждого текЭлем из ТекСписок Цикл
			НовСтрока=тзСписок.Добавить();
			НовСтрока.ГруппаДО=текГруппа;
			НовСтрока.БыстроеДвижение=текЭлем;
		КонецЦикла;
		//тзСписок.ЗагрузитьКолонку(текСписок,"БыстроеДвижение");
		текНабор=РегистрыСведений.СоставГруппыОформления.СоздатьНаборЗаписей();
	Иначе
		тзСписок.Колонки.Добавить("Подразделение");
		Для Каждого текЭлем из ТекСписок Цикл
			НовСтрока=тзСписок.Добавить();
			НовСтрока.ГруппаДО=текГруппа;
			НовСтрока.Подразделение=текЭлем;
		КонецЦикла;
		//тзСписок.ЗагрузитьКолонку(текСписок,"Подразделение");
		текНабор=РегистрыСведений.СоставГруппыДоступа.СоздатьНаборЗаписей();
	КонецЕсли;
	//тзСписок.ЗаполнитьЗначения(текГруппа,"ГруппаДО");
	текНабор.Отбор.ГруппаДО.Установить(текГруппа);
	текНабор.Загрузить(тзСписок);
	текНабор.Записать(Истина);	
КонецПроцедуры

Функция РазрешенныеПодразделенияПользователя(текПользователь) Экспорт
//bs_admin ++ обернем все в попытку если не получится вернем предопределенное значение справочника
	Попытка	
	Результат=Новый Массив;
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	СоставГруппыДоступа.Подразделение
	              |ИЗ
	              |	РегистрСведений.ПользователиГруппыДО КАК ПользователиГруппыДО
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставГруппыДоступа КАК СоставГруппыДоступа
	              |		ПО ПользователиГруппыДО.ГруппаДО = СоставГруппыДоступа.ГруппаДО
	              |ГДЕ
	              |	ПользователиГруппыДО.Пользователь = &Пользователь
	              |	И ПользователиГруппыДО.ГруппаДО.ГруппаОформления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Пользователь",текПользователь);
	табСписок=Запрос.Выполнить().Выбрать();
	Пока табСписок.Следующий() цикл
		Результат.Добавить(табСписок.Подразделение);
	КонецЦикла;
	Если Результат.Количество()=0 тогда
		Результат.Добавить(ПараметрыСеанса.ПодразделениеПользователя);
	КонецЕсли;
Исключение
		Результат.Добавить(ПараметрыСеанса.ПодразделениеПользователя);
	КонецПопытки;
//bs_admin ++ 
	Возврат Результат;
КонецФункции

Функция РазрешенныеСтатьиДвиженияПользователя(текПользователь) Экспорт
//bs_admin ++ обернем все в попытку если не получится вернем предопределенное значение справочника
	Попытка	
	Результат=Новый Массив;
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	СоставГруппыДоступаКПапкам.СтатьяДвижения
	              |ИЗ
	              |	РегистрСведений.ПользователиГруппыДО КАК ПользователиГруппыДО
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставГруппыДоступаКПапкам КАК СоставГруппыДоступаКПапкам
	              |		ПО ПользователиГруппыДО.ГруппаДО = СоставГруппыДоступаКПапкам.ГруппаДО
	              |ГДЕ
	              |	ПользователиГруппыДО.Пользователь = &Пользователь
	              |	И ПользователиГруппыДО.ГруппаДО.ГруппаОформления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Пользователь",текПользователь);
	табСписок=Запрос.Выполнить().Выбрать();
	Пока табСписок.Следующий() цикл
		Результат.Добавить(табСписок.СтатьяДвижения);
	КонецЦикла;
	Если Результат.Количество()=0 тогда
		Результат.Добавить(ПредопределенноеЗначение("Справочник.СтатьиДвижения.ДенежныеСредства"));
	КонецЕсли;
Исключение
		Результат.Добавить(ПредопределенноеЗначение("Справочник.СтатьиДвижения.ДенежныеСредства"));
	КонецПопытки;
//bs_admin ++ 
	Возврат Результат;
КонецФункции



Функция РазрешенныеБДвиженияПользователя(текПользователь) Экспорт
	Результат=Новый Массив;
//bs_admin ++ обернем в попытку если нет инициализированных параметров вернем пустой массив
Попытка
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	СоставГруппыОформления.БыстроеДвижение
	              |ИЗ
	              |	РегистрСведений.ПользователиГруппыДО КАК ПользователиГруппыДО
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставГруппыОформления КАК СоставГруппыОформления
	              |		ПО ПользователиГруппыДО.ГруппаДО = СоставГруппыОформления.ГруппаДО
	              |ГДЕ
	              |	ПользователиГруппыДО.Пользователь = &Пользователь
	              |	И ПользователиГруппыДО.ГруппаДО.ГруппаОформления = ИСТИНА";
	Запрос.УстановитьПараметр("Пользователь",текПользователь);
	табСписок=Запрос.Выполнить().Выбрать();
	Пока табСписок.Следующий() цикл
		Результат.Добавить(табСписок.БыстроеДвижение);
	КонецЦикла;
Исключение
	КонецПопытки;
	Возврат Результат;
КонецФункции

Функция ГруппыДОПользователя(текПользователь) Экспорт
	Результат=Новый СписокЗначений;
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	              |	ПользователиГруппыДО.ГруппаДО
	              |ИЗ
	              |	РегистрСведений.ПользователиГруппыДО КАК ПользователиГруппыДО
	              |ГДЕ
	              |	ПользователиГруппыДО.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь",текПользователь);
	табСостав=Запрос.Выполнить().Выбрать();
	Пока табСостав.Следующий() цикл
		Результат.Добавить(табСостав.ГруппаДО,,табСостав.ГруппаДО.ГруппаОформления);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Процедура СохранитьГруппыДОПользователя(текПользователь,текСписок) Экспорт
	тзСписок=Новый ТаблицаЗначений;
	тзСписок.Колонки.Добавить("Пользователь");
	тзСписок.Колонки.Добавить("ГруппаДО");
	Для Каждого текЭлем из ТекСписок Цикл
		НовСтрока=тзСписок.Добавить();
		НовСтрока.ГруппаДО=текЭлем;
		НовСтрока.Пользователь=текПользователь;
	КонецЦикла;
	текНабор=РегистрыСведений.ПользователиГруппыДО.СоздатьНаборЗаписей();
	текНабор.Отбор.Пользователь.Установить(текПользователь);
	текНабор.Загрузить(тзСписок);
	текНабор.Записать(Истина);	
КонецПроцедуры

Функция ОсновноеПодразделениеПользователя(текПользователь) Экспорт
Попытка	
	Результат=Справочники.Подразделения.ПустаяСсылка();
	Запрос=Новый Запрос;
	Запрос.Текст= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	НастройкиПользователя.ОсновноеПодразделение
	              |ИЗ
	              |	РегистрСведений.НастройкиПользователя КАК НастройкиПользователя
	              |ГДЕ
	              |	НастройкиПользователя.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь",текПользователь);
	табНастройки=Запрос.Выполнить().Выбрать();
	

	Пока табНастройки.Следующий() цикл
		Результат=табНастройки.ОсновноеПодразделение;
	КонецЦикла;
	
Исключение
//bs_kem ++ добавим проверку если нет подразделений то вернем предопределенное значение 20.08.2017
		Результат = ПредопределенноеЗначение("Справочник.Подразделения.ОсновноеПодразделение");
//bs_kem ++
КонецПопытки;

Возврат Результат;
КонецФункции

Функция ДоступнаГруппаБД(текСсылка,текПодразделение=Неопределено) Экспорт
	колБД=0;
	Если ТипЗнч(текСсылка)=Тип("СправочникСсылка.Шаблоны") И текСсылка.ЭтоГруппа тогда
		Запрос=Новый Запрос;
		Если текПодразделение=Неопределено ИЛИ текПодразделение=Справочники.Подразделения.ПустаяСсылка() тогда
			Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			             |	Шаблоны.Ссылка
			             |ИЗ
			             |	Справочник.Шаблоны КАК Шаблоны
			             |ГДЕ
			             |	Шаблоны.Ссылка В ИЕРАРХИИ(&Ссылка)
			             |	И Шаблоны.ПометкаУдаления = ЛОЖЬ
			             |	И Шаблоны.ЭтоГруппа = ЛОЖЬ";
		Иначе
			Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			             |	БыстрыеДвиженияДвижения.Ссылка
			             |ИЗ
			             |	Справочник.Шаблоны.Движения КАК БыстрыеДвиженияДвижения
			             |ГДЕ
			             |	(БыстрыеДвиженияДвижения.ПодразделениеОткуда В ИЕРАРХИИ (&Подразделение)
			             |			ИЛИ БыстрыеДвиженияДвижения.ПодразделениеКуда В ИЕРАРХИИ (&Подразделение)
			             |			ИЛИ БыстрыеДвиженияДвижения.ПодразделениеОткуда = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
			             |	И БыстрыеДвиженияДвижения.Ссылка В ИЕРАРХИИ(&Ссылка)
			             |	И БыстрыеДвиженияДвижения.Ссылка.ПометкаУдаления = ЛОЖЬ";
			Запрос.УстановитьПараметр("Подразделение",текПодразделение);
		КонецЕсли;				 
		Запрос.УстановитьПараметр("Ссылка",текСсылка);
		табСписок=Запрос.Выполнить().Выбрать();
		Пока табСписок.Следующий() Цикл
			Если НЕ табСписок.Ссылка.ЭтоГруппа тогда
				колБД=колБД+1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат (колБД>0);
КонецФункции

Функция ДоступнаКнопкаБД(текСсылка,текПодразделение) Экспорт
	Если текПодразделение=Справочники.Подразделения.ПустаяСсылка() тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(текСсылка)=Тип("СправочникСсылка.Шаблоны") И НЕ текСсылка.ЭтоГруппа тогда
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		             |	БыстрыеДвиженияДвижения.Ссылка
		             |ИЗ
		             |	Справочник.Шаблоны.Движения КАК БыстрыеДвиженияДвижения
		             |ГДЕ
		             |	(БыстрыеДвиженияДвижения.ПодразделениеОткуда В ИЕРАРХИИ (&Подразделение)
		             |			ИЛИ БыстрыеДвиженияДвижения.ПодразделениеКуда В ИЕРАРХИИ (&Подразделение)
		             |			ИЛИ БыстрыеДвиженияДвижения.ПодразделениеОткуда = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
		             |	И БыстрыеДвиженияДвижения.Ссылка = &Ссылка
		             |	И БыстрыеДвиженияДвижения.Ссылка.ПометкаУдаления = ЛОЖЬ
		             |	И НЕ БыстрыеДвиженияДвижения.Ссылка В
		             |				(ВЫБРАТЬ
		             |					БыстрыеДвиженияДвижения.Ссылка КАК Ссылка
		             |				ИЗ
		             |					Справочник.Шаблоны.Движения КАК БыстрыеДвиженияДвижения
		             |				ГДЕ
		             |					НЕ(БыстрыеДвиженияДвижения.ПодразделениеКуда В
		             |								(ВЫБРАТЬ
		             |									Справочник.Подразделения.Ссылка
		             |								ИЗ
		             |									Справочник.Подразделения)
		             |							ИЛИ БыстрыеДвиженияДвижения.ПодразделениеКуда = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)))
		             |	И НЕ БыстрыеДвиженияДвижения.Ссылка В
		             |				(ВЫБРАТЬ
		             |					БыстрыеДвиженияДвижения.Ссылка КАК Ссылка
		             |				ИЗ
		             |					Справочник.Шаблоны.Движения КАК БыстрыеДвиженияДвижения
		             |				ГДЕ
		             |					НЕ(БыстрыеДвиженияДвижения.ПодразделениеОткуда В
		             |								(ВЫБРАТЬ
		             |									Справочник.Подразделения.Ссылка
		             |								ИЗ
		             |									Справочник.Подразделения)
		             |							ИЛИ БыстрыеДвиженияДвижения.ПодразделениеОткуда = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)))";
		Запрос.УстановитьПараметр("Подразделение",текПодразделение);
		Запрос.УстановитьПараметр("Ссылка",текСсылка);
		табСписок=Запрос.Выполнить().Выбрать();
		Возврат (табСписок.Количество()>0);
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция НастройкиПользователя(текПользователь) Экспорт
	Результат=Новый Массив;
	Запрос=Новый Запрос;
	табНастройки=РегистрыСведений.НастройкиПользователя.СоздатьНаборЗаписей().Метаданные();
	Для Каждого текКол из табНастройки.Ресурсы Цикл
		текРез=Новый Структура("Имя,Заголовок,Тип,Значение");
		текРез.Имя=текКол.Имя;
		текРез.Заголовок=текКол.Синоним;
		текРез.Тип=текКол.Тип;
		Результат.Добавить(текРез);
	КонецЦикла;
	Запрос.Текст= "ВЫБРАТЬ *
	              |ИЗ
	              |	РегистрСведений.НастройкиПользователя КАК НастройкиПользователя
	              |ГДЕ
	              |	НастройкиПользователя.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь",текПользователь);
	табНастройки=Запрос.Выполнить().Выгрузить();
	Если табНастройки.Количество() тогда
		текСтрока=табНастройки[0];
		Для Каждого текРез из Результат Цикл
			текРез.Значение=текСтрока[текРез.Имя];
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Процедура СохранитьНастройкиПользователя(текПользователь,МассивНастроек) Экспорт
	Если МассивНастроек.Количество() тогда
		табНастройки=РегистрыСведений.НастройкиПользователя.СоздатьНаборЗаписей();
		табНастройки.Отбор.Пользователь.Установить(текПользователь);
		текНастр=табНастройки.Добавить();
		текНастр.Пользователь=текПользователь;
		Для Каждого текПоле из МассивНастроек Цикл
			текНастр[текПоле.Имя]=текПоле.Значение;
		КонецЦикла;
		табНастройки.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

Функция ПодразделениеПользователя() Экспорт
	Возврат ПараметрыСеанса.ПодразделениеПользователя;
КонецФункции