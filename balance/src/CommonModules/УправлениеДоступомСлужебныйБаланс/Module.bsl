
// Создает профиль с ролью "ИнтерактивноеОткрытиеВнешнихОтчетовИОбработок" в случае его отсутствия.
Процедура СоздатьПрофильОператор() Экспорт
	// В модели сервиса право открытия внешних отчетов и обработок не используется для пользователей областей данных.
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		Возврат;
	КонецЕсли;
	
	// Создание профиля.
	СвойстваПрофиля = СвойстваПрофиляОператор();
	
	// Создание группы доступа.
	УпрощенныйИнтерфейс = УпрощенныйИнтерфейсНастройкиПравДоступа();
	Если Не УпрощенныйИнтерфейс Тогда
		ГруппаДоступаОператоры(СвойстваПрофиля);
	КонецЕсли;
	
КонецПроцедуры

Функция СвойстваПрофиляОператор()
	Результат = Новый Структура("Ссылка, УникальныйИдентификатор, Наименование, Комментарий, РольБаланс, РольБазовыеПрава");
	Результат.Наименование = НСтр("ru = 'Оператор Баланс с ограничением доступа'", Метаданные.ОсновнойЯзык.КодЯзыка);
	Результат.Комментарий  = НСтр(
		"ru = 'Предоставляет возможность создавать пользователей с ограничением доступных подразделений
		| и отображаемых кнопок быстрых движений.'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	Результат.УникальныйИдентификатор = Новый УникальныйИдентификатор("e130dc01-3cb1-4c74-832b-dd99554ea8b9");
	Результат.Ссылка = Справочники.ПрофилиГруппДоступа.ПолучитьСсылку(Результат.УникальныйИдентификатор);
	Результат.РольБаланс = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Роли.Баланс);
	Результат.РольБазовыеПрава = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Роли.БазовыеПрава);
	ПрофильСуществует = (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Результат.Ссылка, "Ссылка") <> Неопределено);
	Если Не ПрофильСуществует Тогда
		// Профиль создается в случае отсутствия.
		ПрофильОбъект = Справочники.ПрофилиГруппДоступа.СоздатьЭлемент();
		ПрофильОбъект.УстановитьСсылкуНового(Результат.Ссылка);
		ПрофильОбъект.Наименование         = Результат.Наименование;
		ПрофильОбъект.Комментарий          = Результат.Комментарий;
		ПрофильОбъект.Назначение.Добавить().ТипПользователей = Справочники.Пользователи.ПустаяСсылка();
		ПрофильОбъект.Роли.Добавить().Роль = Результат.РольБаланс;
		ПрофильОбъект.Роли.Добавить().Роль = Результат.РольБазовыеПрава;
		// При обновлении ИБ важно, чтобы изменения уехали в подчиненный узел.
		ПрофильОбъект.Записать();
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ГруппаДоступаОператоры(СвойстваПрофиля)
	УникальныйИдентификатор = Новый УникальныйИдентификатор("153d5a27-55d1-47e1-92ec-2c1715700a4b");
	Ссылка = Справочники.ГруппыДоступа.ПолучитьСсылку(УникальныйИдентификатор);
	СсылкаСуществует = (ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Ссылка") <> Неопределено);
	Если СсылкаСуществует Тогда
		Возврат Ссылка;
	КонецЕсли;
	
	// Поиск по профилю.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ГруппыДоступа.Ссылка
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|ГДЕ
	|	ГруппыДоступа.Профиль = &Профиль
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппыДоступа.ПометкаУдаления";
	Запрос.УстановитьПараметр("Профиль", СвойстваПрофиля.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	// Создание новой группы.
	ГруппаДоступаОбъект = Справочники.ГруппыДоступа.СоздатьЭлемент();
	ГруппаДоступаОбъект.УстановитьСсылкуНового(Ссылка);
	ГруппаДоступаОбъект.Наименование = "Операторы подсистемы Баланс";
	ГруппаДоступаОбъект.Описание     = СвойстваПрофиля.Комментарий;
	ГруппаДоступаОбъект.Профиль      = СвойстваПрофиля.Ссылка;
	// При обновлении ИБ важно, чтобы изменения уехали в подчиненный узел.
	ГруппаДоступаОбъект.Записать();
	Возврат ГруппаДоступаОбъект.Ссылка;
КонецФункции

// Возвращает вид интерфейса пользователя для настройки доступа.
Функция УпрощенныйИнтерфейсНастройкиПравДоступа() Экспорт
	
	УпрощенныйИнтерфейс = Ложь;
	УправлениеДоступомПереопределяемый.ПриОпределенииИнтерфейсаНастройкиДоступа(УпрощенныйИнтерфейс);
	
	Возврат УпрощенныйИнтерфейс = Истина;
	
КонецФункции

