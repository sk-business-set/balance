
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Ложь;
	Объект.ПодразделениеВводОстатков = Константы.ПодразделениеВводОстатков.Получить();
	Если Объект.ПодразделениеВводОстатков.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не выбран бизнес для ввода остатков (Администрирование -> Общие настройки)";;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	Объект.СтатьяДвиженияВводОстатков = Константы.СтатьяДвиженияВводОстатков.Получить();
	Если Объект.СтатьяДвиженияВводОстатков.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заполнена статья движения для ввода остатков (Администрирование -> Общие настройки)";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Объект.ДатаВводаОстатков = НачалоМесяца(ТекущаяДата());
		
		Активы.Параметры.УстановитьЗначениеПараметра("ПодразделениеОстатков", Объект.ПодразделениеВводОстатков);
		Активы.Параметры.УстановитьЗначениеПараметра("СтатьяДвиженияОстатков", Объект.СтатьяДвиженияВводОстатков);
		
		Пассивы.Параметры.УстановитьЗначениеПараметра("ПодразделениеОстатков", Объект.ПодразделениеВводОстатков);
		Пассивы.Параметры.УстановитьЗначениеПараметра("СтатьяДвиженияОстатков", Объект.СтатьяДвиженияВводОстатков);
		
		СуммаАктивы = ПолучитьИтогиПоСпискам("Активы");
		СуммаПассивы = ПолучитьИтогиПоСпискам("Пассивы");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьАктивНаСервере()
	Движение = Документы.Движения.СоздатьДокумент();
	Движение.Дата = Объект.ДатаВводаОстатков;
	Движение.Ответственный = Объект.Ответственный;
	Движение.ПодразделениеКуда = Объект.ПодразделениеАктив;
	Движение.СтатьяДвиженияКуда = Объект.СтатьяДвиженияАктив;
	Движение.ПодразделениеОткуда = Объект.ПодразделениеВводОстатков;
	Движение.СтатьяДвиженияОткуда = Объект.СтатьяДвиженияВводОстатков;
	Движение.Сумма = Объект.СуммаАктив;
	Движение.Комментарий = Объект.КомментарийАктив;
	Движение.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАктив(Команда)
	ЗаполнитьРеквизитыДляПроверки("Актив");
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	СоздатьАктивНаСервере();
	Элементы.Активы.Обновить();
	ОчиститьРеквизиты("Актив");
	СуммаАктивы = ПолучитьИтогиПоСпискам("Активы");
КонецПроцедуры

&НаСервере
Процедура СоздатьПассивНаСервере()
	Движение = Документы.Движения.СоздатьДокумент();
	Движение.Дата = Объект.ДатаВводаОстатков;
	Движение.Ответственный = Объект.Ответственный;
	Движение.ПодразделениеОткуда = Объект.ПодразделениеПассив;
	Движение.СтатьяДвиженияОткуда = Объект.СтатьяДвиженияПассив;
	Движение.ПодразделениеКуда = Объект.ПодразделениеВводОстатков;
	Движение.СтатьяДвиженияКуда = Объект.СтатьяДвиженияВводОстатков;
	Движение.Сумма = Объект.СуммаПассив;
	Движение.Комментарий = Объект.КомментарийПассив;
	Движение.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПассив(Команда)
	ЗаполнитьРеквизитыДляПроверки("Пассив");
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	СоздатьПассивНаСервере();
	Элементы.Пассивы.Обновить();
	ОчиститьРеквизиты("Пассив");
	СуммаПассивы = ПолучитьИтогиПоСпискам("Пассивы");
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДвиженияАктивПриИзменении(Элемент)
	СтатьяДвиженияАктивПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СтатьяДвиженияАктивПриИзмененииНаСервере()
	Если Объект.ПодразделениеАктив.Пустая() Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ПодразделениеАктив = Объект.СтатьяДвиженияАктив.Подразделение;
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДвиженияПассивПриИзменении(Элемент)
	СтатьяДвиженияПассивПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СтатьяДвиженияПассивПриИзмененииНаСервере()
	Если Объект.ПодразделениеПассив.Пустая() Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ПодразделениеПассив = Объект.СтатьяДвиженияПассив.Подразделение;
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРеквизиты(ИмяРаздела)
	Объект["Подразделение" + ИмяРаздела] = ПредопределенноеЗначение("Справочник.Подразделения.ПустаяСсылка");
	Объект["СтатьяДвижения" + ИмяРаздела] = ПредопределенноеЗначение("Справочник.СтатьиДвижения.ПустаяСсылка");
	Объект["Сумма" + ИмяРаздела] = 0;
	Объект["Комментарий" + ИмяРаздела] = "";
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыДляПроверки(ИмяРаздела)
	Объект.РеквизитыДляПроверки.Очистить();
	Объект.РеквизитыДляПроверки.Добавить("ДатаВводаОстатков");
	Объект.РеквизитыДляПроверки.Добавить("Подразделение" + ИмяРаздела);
	Объект.РеквизитыДляПроверки.Добавить("СтатьяДвижения" + ИмяРаздела);
	Объект.РеквизитыДляПроверки.Добавить("Сумма" + ИмяРаздела);
КонецПроцедуры

&НаСервере
Функция ПолучитьИтогиПоСпискам(ИмяРаздела)
	СхемаКомпоновки = Элементы[ИмяРаздела].ПолучитьИсполняемуюСхемуКомпоновкиДанных();	
	НастройкиКомпоновки = Элементы[ИмяРаздела].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	Компоновщик = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетДанных = Компоновщик.Выполнить(СхемаКомпоновки, НастройкиКомпоновки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	Процессор = Новый ПроцессорКомпоновкиДанных();
	Процессор.Инициализировать(МакетДанных);
	ТаблицаИтог = Новый ТаблицаЗначений();
	Вывод = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	Вывод.УстановитьОбъект(ТаблицаИтог);
	Вывод.Вывести(Процессор, Ложь);
	Возврат ТаблицаИтог.Итог("Сумма");
КонецФункции

&НаКлиенте
Процедура ОбновитьАктивы(Команда)
	Элементы.Активы.Обновить();
	СуммаАктивы = ПолучитьИтогиПоСпискам("Активы");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПассивы(Команда)
	Элементы.Пассивы.Обновить();
	СуммаПассивы = ПолучитьИтогиПоСпискам("Пассивы");
КонецПроцедуры
