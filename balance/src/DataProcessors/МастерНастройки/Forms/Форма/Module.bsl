
&НаКлиенте
Процедура СпособыРасчетаИмяПриИзменении(Элемент)
	//Элементы.СпособРасчетаСписок.ТекущийЭлемент=Элементы.СпособРасчетаСписокИмя;
	//ДобавитьВСписок(СпособРасчетаИмя,СпособРасчетаСписок,СпособРасчетаОстаток);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСпособРасчета(Команда)
	Если СпособРасчетаОстаток>0 тогда
		Элементы.СпособРасчетаСписок.ТекущийЭлемент=Элементы.СпособРасчетаСписокИмя;
		ДобавитьВСписок(СпособРасчетаИмя,СпособРасчетаСписок,СпособРасчетаОстаток);
		ОбновитьКнопки();
	Иначе
		Оповещение=Новый ОписаниеОповещения("ВопросЗавершение",ЭтаФорма);
		ПоказатьВопрос(Оповещение,"Для корректной работы программы необходимо указать сумму остатка в кассе на текущий момент."+Символы.ПС+"Сохранить с нулевым остатком?",РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗавершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда	
		Элементы.СпособРасчетаСписок.ТекущийЭлемент=Элементы.СпособРасчетаСписокИмя;
		ДобавитьВСписок(СпособРасчетаИмя,СпособРасчетаСписок,СпособРасчетаОстаток);
		ОбновитьКнопки();
	Иначе
		ЭтаФорма.ТекущийЭлемент=Элементы.СпособРасчетаОстаток;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	текШирина=ЭтаФорма.Ширина;
	Если Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаИнвестор тогда
		СледующаяСтраница=Элементы.ГруппаПодразделения;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаПодразделения И Валюты тогда
		СледующаяСтраница=Элементы.ГруппаВалюты;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСпособРасчета тогда
		СледующаяСтраница=Элементы.ГруппаИнвестор;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаРасходы тогда
		СледующаяСтраница=Элементы.ГруппаСпособРасчета;
	Иначе
		СледующаяСтраница=Неопределено;
	КонецЕсли;
	Если СледующаяСтраница=Неопределено тогда
		//Закрыть();
	Иначе
		Элементы.ГруппаМастер.ТекущаяСтраница=СледующаяСтраница;
	КонецЕсли;
	ОбновитьКнопки();
	ЭтаФорма.Ширина=текШирина;
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	текШирина=ЭтаФорма.Ширина;
	ОбработатьСтраницу(Ложь);
	ОбновитьКнопки();
	ЭтаФорма.Ширина=текШирина;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтраницу(флагЭтап=Неопределено)
	Если Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаПодразделения тогда
		Если ЗначениеЗаполнено(ПодразделениеИмя) И (СтрДлина(СокрЛП(ТелефонИмя))=11)тогда
			СледующаяСтраница=Элементы.ГруппаИнвестор;
			//УстановитьТелПользователя(ТелефонИмя);
		Иначе
			СледующаяСтраница=Элементы.ГруппаПодразделения;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаИнвестор тогда
		Если (флагЭтап И ИнвесторСписок.Количество()=0) ИЛИ (НЕ флагЭтап И ИнвесторСписок.Количество()) тогда
			СледующаяСтраница=Элементы.ГруппаСпособРасчета;
		Иначе
			СледующаяСтраница=Элементы.ГруппаИнвестор;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСпособРасчета тогда
		Если СпособРасчетаСписок.Количество() тогда
			//НетОстатка=Ложь;
			//Для каждого текСпособ Из СпособРасчетаСписок Цикл
			//	Если НЕ ЗначениеЗаполнено(текСпособ.Остаток) тогда
			//		НетОстатка=Истина;
			//	КонецЕсли;
			//КонецЦикла;
			//Если НЕ НетОстатка тогда
				СледующаяСтраница=Элементы.ГруппаРасходы;
			//КонецЕсли;
		Иначе
			СледующаяСтраница=Элементы.ГруппаСпособРасчета;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаРасходы тогда
		Если флагЭтап ИЛИ (ОперационныеСписок.Количество() ИЛИ АдминистративныеСписок.Количество() ИЛИ КоммерческиеСписок.Количество()) тогда
			СледующаяСтраница=Элементы.ГруппаСуммарная;
		Иначе
			СледующаяСтраница=Элементы.ГруппаРасходы;
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаВалюты тогда
		Если ВалютаСписок.Количество() И НЕ ПолучитьОсновнаяВалюта()="" тогда
			СледующаяСтраница=Элементы.ГруппаПодразделения;
			Элементы.СпособРасчетаСписокВалюта.СписокВыбора.Очистить();
			Элементы.СпособРасчетаСписокВалюта.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокВалют());
		Иначе
			СледующаяСтраница=Элементы.ГруппаВалюты;
		КонецЕсли;
	Иначе
		СледующаяСтраница=Неопределено;
	КонецЕсли;
	НадоОбновитьКнопки=НЕ (Элементы.ГруппаМастер.ТекущаяСтраница=СледующаяСтраница);
	Если СледующаяСтраница=Неопределено тогда
		//Закрыть();
	Иначе
		СледующаяСтраница.Доступность=Истина;
		Элементы.ГруппаМастер.ТекущаяСтраница=СледующаяСтраница;
	КонецЕсли;
	Если Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСуммарная тогда
		ЗаполнитьСуммари();
	КонецЕсли;
	Если НадоОбновитьКнопки тогда
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСписок(текИмя,текСписок,текСумма=Неопределено)
	Если ЗначениеЗаполнено(текИмя) тогда
		ЕстьЭлемент=текСписок.НайтиСтроки(Новый Структура("Имя",текИмя));
		Если ЕстьЭлемент.Количество()=0 тогда
			НовСтрока=текСписок.Добавить();
			Если НЕ текСумма=Неопределено тогда
				НовСтрока.Остаток=текСумма;
				НовСтрока.Валюта=ПолучитьОсновнаяВалюта();
				текСумма=0;
			КонецЕсли;
			НовСтрока.Удалить=Истина;
			НовСтрока.Имя=текИмя;
			текИмя="";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Валюты тогда
		Элементы.ГруппаВалюты.Видимость=Истина;
		Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаВалюты;
		Элементы.ГруппаПодразделения.Доступность=Ложь;
	Иначе
		Элементы.ГруппаВалюты.Видимость=Ложь;
		Элементы.ГруппаПодразделения.Доступность=Истина;
		Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаПодразделения;
	КонецЕсли;
	//ЭтаФорма.Ширина=60;
	//ЭтаФорма.ОбновитьОтображениеДанных();
	ОбновитьКнопки();
	//ОбновитьКнопкиРасходы();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИнвестор(Команда)
	Элементы.ИнвесторСписок.ТекущийЭлемент=Элементы.ИнвесторСписокИмя;
	ДобавитьВСписок(ИнвесторИмя,ИнвесторСписок);
	ОбновитьКнопки();
КонецПроцедуры


&НаКлиенте
Процедура ИнвесторСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя="ИнвесторСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.ИнвесторСписокИмя;
		ИнвесторСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ИнвесторИмяПриИзменении(Элемент)
	//Элементы.ИнвесторСписок.ТекущийЭлемент=Элементы.ИнвесторСписокИмя;
	//ДобавитьВСписок(ИнвесторИмя,ИнвесторСписок);
КонецПроцедуры


&НаКлиенте
Процедура Пропустить(Команда)
	текШирина=ЭтаФорма.Ширина;
	ОбработатьСтраницу(Истина);
	ОбновитьКнопки();
	ЭтаФорма.Ширина=текШирина;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКнопки()
	Если Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаИнвестор Тогда
		Элементы.Назад.Доступность=Истина;
		Элементы.Пропустить.Доступность=(ИнвесторСписок.Количество()=0);
		Элементы.Далее.Доступность=(ИнвесторСписок.Количество()>0);
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаРасходы тогда
		Элементы.Назад.Доступность=Истина;
		Элементы.Пропустить.Доступность=((АдминистративныеСписок.Количество()=0) И (ОперационныеСписок.Количество()=0) И (КоммерческиеСписок.Количество()=0));
		Элементы.Далее.Доступность=(АдминистративныеСписок.Количество() ИЛИ ОперационныеСписок.Количество() ИЛИ КоммерческиеСписок.Количество());
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаВалюты тогда
		Элементы.Назад.Доступность=Ложь;
		Элементы.Пропустить.Доступность=Ложь;
		Элементы.Далее.Доступность=ВалютаСписок.Количество()>0;
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаПодразделения тогда
		Элементы.Назад.Доступность=Валюты;
		Элементы.Пропустить.Доступность=Ложь;
		Элементы.Далее.Доступность=(ЗначениеЗаполнено(ПодразделениеИмя) И СтрДлина(СокрЛП(ТелефонИмя))=11);
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСпособРасчета тогда
		Элементы.Назад.Доступность=Истина;
		Элементы.Пропустить.Доступность=Ложь;
		Элементы.Далее.Доступность=(СпособРасчетаСписок.Количество()>0);
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСуммарная тогда
		Элементы.Назад.Доступность=Истина;
		Элементы.Пропустить.Доступность=Ложь;
		Элементы.Далее.Доступность=Ложь;
		Элементы.Готово.Доступность=Истина;
	КонецЕсли;
	//Элементы.Готово.Доступность=(ЗначениеЗаполнено(ПодразделениеИмя) И СпособРасчетаСписок.Количество());
КонецПроцедуры


&НаКлиенте
Процедура СпособРасчетаСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя="СпособРасчетаСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.СпособРасчетаСписокИмя;
		СпособРасчетаСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьОперационные(Команда)
	Элементы.ОперационныеСписок.ТекущийЭлемент=Элементы.ОперационныеСписокИмя;
	ДобавитьВСписок(ОперационныеИмя,ОперационныеСписок);
	ОбновитьКнопки();
	//ОбновитьКнопкиРасходы();
КонецПроцедуры


&НаКлиенте
Процедура ОперационныеИмяПриИзменении(Элемент)
	//Элементы.ОперационныеСписок.ТекущийЭлемент=Элементы.ОперационныеСписокИмя;
	//ДобавитьВСписок(ОперационныеИмя,ОперационныеСписок);
	//ОбновитьКнопкиРасходы();
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьАдминистративные(Команда)
	Элементы.АдминистративныеСписок.ТекущийЭлемент=Элементы.АдминистративныеСписокИмя;
	ДобавитьВСписок(АдминистративныеИмя,АдминистративныеСписок);
	ОбновитьКнопки();
	//ОбновитьКнопкиРасходы();
КонецПроцедуры


&НаКлиенте
Процедура АдминистративныеИмяПриИзменении(Элемент)
	//Элементы.АдминистративныеСписок.ТекущийЭлемент=Элементы.АдминистративныеСписокИмя;
	//ДобавитьВСписок(АдминистративныеИмя,АдминистративныеСписок);
	//ОбновитьКнопкиРасходы();
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьКоммерческие(Команда)
	Элементы.КоммерческиеСписок.ТекущийЭлемент=Элементы.КоммерческиеСписокИмя;
	ДобавитьВСписок(КоммерческиеИмя,КоммерческиеСписок);
	ОбновитьКнопки();
	//ОбновитьКнопкиРасходы();
КонецПроцедуры


&НаКлиенте
Процедура КоммерческиеИмяПриИзменении(Элемент)
	//Элементы.КоммерческиеСписок.ТекущийЭлемент=Элементы.КоммерческиеСписокИмя;
	//ДобавитьВСписок(КоммерческиеИмя,КоммерческиеСписок);
	//ОбновитьКнопкиРасходы();
КонецПроцедуры


&НаКлиенте
Процедура ОперационныеСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя="ОперационныеСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.ОперационныеСписокИмя;
		ОперационныеСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
		//ОбновитьКнопкиРасходы();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура АдминистративныеСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя="АдминистративныеСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.АдминистративныеСписокИмя;
		АдминистративныеСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
		//ОбновитьКнопкиРасходы();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КоммерческиеСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя="КоммерческиеСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.КоммерческиеСписокИмя;
		КоммерческиеСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
		//ОбновитьКнопкиРасходы();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Готово(Команда)
	ОбработатьДанные();
	Оповестить("ВводМастером",ПодразделениеСсылка,ЭтаФорма);
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанные()
	Если Валюты тогда
		ДобавилиВалюту=Ложь;
		Для каждого текВалюта из ВалютаСписок Цикл
			Если текВалюта.Предустановленная тогда
				Если текВалюта.ОсновнаяВалюта тогда
					Константы.ОсновнаяВалюта.Установить(РаботаСВалютой.ПолучитьВалютуПоКоду(текВалюта.Код));
				КонецЕсли;
			Иначе
				НоваяСтрока = Справочники.Валюты.СоздатьЭлемент();
				НоваяСтрока.Код							= текВалюта.Код;
				НоваяСтрока.Наименование				= текВалюта.Наименование;
				НоваяСтрока.НаименованиеПолное			= текВалюта.НаименованиеПолное;
				НоваяСтрока.СпособУстановкиКурса 		= текВалюта.СпособУстановкиКурса;
				НоваяСтрока.ПараметрыПрописиНаРусском 	= текВалюта.ПараметрыПрописиНаРусском;
				НоваяСтрока.Записать();
				Если текВалюта.ОсновнаяВалюта тогда
					Константы.ОсновнаяВалюта.Установить(НоваяСтрока.Ссылка);
				КонецЕсли;
				ДобавилиВалюту=Истина;
			КонецЕсли;
		КонецЦикла;
		Если ДобавилиВалюту тогда
			ТекДата = ТекущаяДата();
			РезультатЗагрузки=Обработки.ЗагрузкаКурсовВалютЦБ.Создать().ПолучитьКурсыВалют(ТекДата);
			Если РезультатЗагрузки=0 Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Во время загрузки курсов валют ЦБ возникла ошибка подключения'");
				Сообщение.Сообщить();
			ИначеЕсли РезультатЗагрузки<0 Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Во время загрузки курсов валют ЦБ данные для используемых валют не обнаружены'");
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПодразделениеИнвестор=ОбработатьПодразделение("Инвестор");
	Если Константы.ПодразделениеВводОстатков.Получить().Пустая() тогда
		Константы.ПодразделениеВводОстатков.Установить(ПодразделениеИнвестор);
	КонецЕсли;
	Если ИнвесторСписок.Количество() тогда
		НастройкиИнвестор=НастройкиСтатьи(Перечисления.РазделыДДС.ИнвестиционнаяДеятельность,
											,
											,
											ПланыСчетов.Внутренний.ВзаиморасчетыИнвестор,
											ПланыСчетов.Внутренний.ВзаиморасчетыИнвестор);
		//ИнвесторыГруппа=ПолучитьСтатью("Инвесторы",ПодразделениеИнвестор,НастройкиИнвестор,Справочники.СтатьиДвижения.ДенежныеСредства,Истина);
		ИнвесторыГруппа=Справочники.СтатьиДвижения.ДенежныеСредства;
		Для Каждого текИнвестор из ИнвесторСписок Цикл
			Если текИнвестор.Удалить И НЕ СокрЛП(текИнвестор.Имя)="" тогда
				ИнвесторЭлемент=ПолучитьСтатью(текИнвестор.Имя,ПодразделениеИнвестор,НастройкиИнвестор,ИнвесторыГруппа,Ложь);
				Если Константы.СтатьяДвиженияВводОстатков.Получить().Пустая() тогда
					Константы.СтатьяДвиженияВводОстатков.Установить(ИнвесторЭлемент);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодразделениеСсылка) тогда
		текПодразделение=ПодразделениеСсылка;
	Иначе
		текПодразделение=ОбработатьПодразделение(ПодразделениеИмя);
		ПодразделениеСсылка=текПодразделение;
	КонецЕсли;
	УстановитьТелПользователя(ТелефонИмя);
	
	текНастройки=НастройкиСтатьи(,
										,
										,
										ПланыСчетов.Внутренний.НакопительнаяПрибыльУбыток,
										ПланыСчетов.Внутренний.НакопительнаяПрибыльУбыток);
	//ПрибыльГруппа=ПолучитьСтатью(ПодразделениеИмя,текПодразделение,текНастройки,Справочники.СтатьиДвижения.Прибыль,Истина);
	ПрибыльГруппа=Справочники.СтатьиДвижения.Прибыль;
	ПрибыльСтатья=ПолучитьСтатью("Прибыль",текПодразделение,текНастройки,ПрибыльГруппа,Ложь);
	текНастройки=НастройкиСтатьи(,
										,
										,
										ПланыСчетов.Внутренний.ВзаиморасчетыИнвестор,
										ПланыСчетов.Внутренний.ВзаиморасчетыИнвестор);
	ДеньгиИнвесторСтатья=ПолучитьСтатью("Деньги инвестора",текПодразделение,текНастройки,ПрибыльГруппа,Ложь);
	
	текНастройки=НастройкиСтатьи(Перечисления.РазделыДДС.ФинансоваяДеятельность,
										,
										,
										ПланыСчетов.Внутренний.ДенежныеСредства,
										);
	//ГруппаДС=ПолучитьСтатью(ПодразделениеИмя,текПодразделение,текНастройки,Справочники.СтатьиДвижения.ДенежныеСредства,Истина);
	ГруппаДС=Справочники.СтатьиДвижения.ДенежныеСредства;
	Если СпособРасчетаСписок.Количество() тогда
		Для Каждого текСпособ из СпособРасчетаСписок Цикл
			Если текСпособ.Удалить И НЕ СокрЛП(текСпособ.Имя)="" тогда
				Если Валюты тогда
					РасчетЭлемент=ПолучитьСтатью(текСпособ.Имя,текПодразделение,текНастройки,ГруппаДС,Ложь,текСпособ.Валюта);
				Иначе
					РасчетЭлемент=ПолучитьСтатью(текСпособ.Имя,текПодразделение,текНастройки,ГруппаДС,Ложь);
				КонецЕсли;				
				Если текСпособ.Остаток>0 тогда
					Движение = Документы.Движения.СоздатьДокумент();
					Движение.Дата = ТекущаяДата();
					Движение.Ответственный = ПараметрыСеанса.ТекущийПользователь;
					Движение.ПодразделениеКуда = текПодразделение;
					Движение.СтатьяДвиженияКуда = РасчетЭлемент;
					Движение.ПодразделениеОткуда = текПодразделение;
					Движение.СтатьяДвиженияОткуда = ПрибыльСтатья;
					Если Валюты тогда
						Движение.Сумма = РаботаСВалютой.ПересчитатьВВалюту(текСпособ.Остаток,РасчетЭлемент.Валюта,ПрибыльСтатья.Валюта);
						Движение.Курс = РаботаСВалютой.ПолучитьКурс(Движение.Дата,ПрибыльСтатья.Валюта);
						Движение.СуммаРуб = РаботаСВалютой.ПересчитатьВВалюту(Движение.Сумма,ПрибыльСтатья.Валюта,РаботаСВалютой.ПолучитьВалютуПоКоду("643"));
					Иначе
						Движение.Сумма = текСпособ.Остаток;
					КонецЕсли;
					Движение.Комментарий = "Ввод остатков";
					Движение.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	текНастройки=НастройкиСтатьи(Перечисления.РазделыДДС.ОперационнаяДеятельность,,,,);
	//РасходыГруппа=ПолучитьСтатью("Расходы",текПодразделение,текНастройки,,Истина);
	РасходыГруппа=ПолучитьСтатью("Расходы",,текНастройки,,Истина);
	Если ОперационныеСписок.Количество() тогда
		текНастройки=НастройкиСтатьи(Перечисления.РазделыДДС.ОперационнаяДеятельность,
											Справочники.РазделыОПиУ.Себестоимость,
											,
											,
											);
		текГруппа=ПолучитьСтатью("Операционные",текПодразделение,текНастройки,РасходыГруппа,Истина);
		Для Каждого текРасход из ОперационныеСписок Цикл
			Если текРасход.Удалить И НЕ СокрЛП(текРасход.Имя)="" тогда
				РасходЭлемент=ПолучитьСтатью(текРасход.Имя,текПодразделение,текНастройки,текГруппа,Ложь);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если АдминистративныеСписок.Количество() тогда
		текНастройки=НастройкиСтатьи(Перечисления.РазделыДДС.ОперационнаяДеятельность,
											Справочники.РазделыОПиУ.АдминистративныеРасходы,
											,
											,
											);
		текГруппа=ПолучитьСтатью("Административные",текПодразделение,текНастройки,РасходыГруппа,Истина);
		Для Каждого текРасход из АдминистративныеСписок Цикл
			Если текРасход.Удалить И НЕ СокрЛП(текРасход.Имя)="" тогда
				РасходЭлемент=ПолучитьСтатью(текРасход.Имя,текПодразделение,текНастройки,текГруппа,Ложь);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если КоммерческиеСписок.Количество() тогда
		текНастройки=НастройкиСтатьи(Перечисления.РазделыДДС.ОперационнаяДеятельность,
											Справочники.РазделыОПиУ.КоммерческиеМаркетинговыеРасходы,
											,
											,
											);
		текГруппа=ПолучитьСтатью("Коммерческие",текПодразделение,текНастройки,РасходыГруппа,Истина);
		Для Каждого текРасход из КоммерческиеСписок Цикл
			Если текРасход.Удалить И НЕ СокрЛП(текРасход.Имя)="" тогда
				РасходЭлемент=ПолучитьСтатью(текРасход.Имя,текПодразделение,текНастройки,текГруппа,Ложь);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	текНастройки=НастройкиСтатьи(Перечисления.РазделыДДС.ОперационнаяДеятельность,
										,
										Справочники.РазделыОПиУ.ОбщиеПродажи,
										ПланыСчетов.Внутренний.ЗадолженностьПокупателей,
										ПланыСчетов.Внутренний.АвансыПолученныеОтПокупателей);
	ПокупательГруппа=ПолучитьСтатью("Покупатель",,текНастройки,,Истина);
	//ПокупательПодразделениеГруппа=ПолучитьСтатью(ПодразделениеИмя,текПодразделение,текНастройки,ПокупательГруппа,Истина);
	ПокупательПодразделениеГруппа=ПокупательГруппа;
	ПокупательСтатья=ПолучитьСтатью("Покупатель",текПодразделение,текНастройки,ПокупательПодразделениеГруппа,Ложь);
	
	БДГруппа=ПолучитьГруппуБД(ПодразделениеИмя);
	ОДГруппа=ПолучитьГруппуБД("Основная деятельность",БДГруппа);
	ИнвГруппа=ПолучитьГруппуБД("Инвестиции",БДГруппа);
	
	Если ИнвесторСписок.Количество() тогда
		текДвижения=Новый Массив;
		текДвижения.Добавить(НастройкиБД(ПодразделениеИнвестор,ИнвесторыГруппа,текПодразделение,ДеньгиИнвесторСтатья,,,"Инвестор"));
		текДвижения.Добавить(НастройкиБД(текПодразделение,ДеньгиИнвесторСтатья,текПодразделение,ГруппаДС,,,,,"Касса"));
		ОбработатьКнопкуБД("Поступление денег от инвестора",ИнвГруппа,,текДвижения);
		
		текДвижения=Новый Массив;
		текДвижения.Добавить(НастройкиБД(текПодразделение,ГруппаДС,текПодразделение,ДеньгиИнвесторСтатья,,,"Касса"));
		текДвижения.Добавить(НастройкиБД(текПодразделение,ДеньгиИнвесторСтатья,ПодразделениеИнвестор,ИнвесторыГруппа,,,,,"Инвестор"));
		ОбработатьКнопкуБД("Вернули деньги инвестору",ИнвГруппа,,текДвижения);
	КонецЕсли;
	
	текДвижения=Новый Массив;
	текДвижения.Добавить(НастройкиБД(текПодразделение,ПокупательСтатья,текПодразделение,ГруппаДС,,,,,"Касса"));
	текДвижения.Добавить(НастройкиБД(текПодразделение,ПрибыльСтатья,текПодразделение,ПокупательСтатья));
	ОбработатьКнопкуБД("Получили деньги от покупателя",ОДГруппа,,текДвижения);
	
	текДвижения=Новый Массив;
	текДвижения.Добавить(НастройкиБД(текПодразделение,ГруппаДС,текПодразделение,РасходыГруппа,,,"Касса"));
	текДвижения.Добавить(НастройкиБД(текПодразделение,РасходыГруппа,текПодразделение,ПрибыльСтатья));
	ОбработатьКнопкуБД("Расходы",ОДГруппа,,текДвижения);
	
	текДвижения=Новый Массив;
	текДвижения.Добавить(НастройкиБД(текПодразделение,Справочники.СтатьиДвижения.ДенежныеСредства,текПодразделение,Справочники.СтатьиДвижения.ДенежныеСредства,,,"Касса откуда",,"Касса куда"));
	ОбработатьКнопкуБД("Перемещение ДС",ОДГруппа,"Перемещение денежных средств",текДвижения);
	
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ПолучитьРодителя(текСсылка)
	Если текСсылка.Родитель.Пустая() тогда
		Возврат текСсылка;
	Иначе
		Возврат ПолучитьРодителя(текСсылка.Родитель);
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиБД(подрОткуда=Неопределено,стОткуда=Неопределено,подрКуда=Неопределено,стКуда=Неопределено,ВидДвижения="Из проводки",зПО=Неопределено,зСО=Неопределено,зПК=Неопределено,зСК=Неопределено)
	Результат=Новый Структура("ПодразделениеОткуда,СтатьяДвиженияОткуда,ПодразделениеКуда,СтатьяДвиженияКуда,ВидДвижения,ЗаголовокПО,ЗаголовокСДО,ЗаголовокПК,ЗаголовокСДК",подрОткуда,стОткуда,подрКуда,стКуда,ВидДвижения,зПО,зСО,зПК,зСК);
	Возврат Результат;
КонецФункции

&НасервереБезКонтекста
Функция ПолучитьГруппуБД(текИмя,текРодитель=Неопределено)
	текСсылка=Неопределено;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Шаблоны.Ссылка
	             |ИЗ
	             |	Справочник.Шаблоны КАК Шаблоны
	             |ГДЕ
	             |	Шаблоны.ПометкаУдаления = ЛОЖЬ
	             |	И Шаблоны.ЭтоГруппа = ИСТИНА
	             |	И Шаблоны.Наименование = &Наименование";
	Если НЕ текРодитель=Неопределено тогда
		Запрос.Текст=Запрос.Текст+"				 
	             |	И Шаблоны.Родитель = &Родитель";
		Запрос.УстановитьПараметр("Родитель",текРодитель);
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование",текИмя);
	ГруппыСписок=Запрос.Выполнить().Выбрать();
	Пока ГруппыСписок.Следующий() Цикл
		текСсылка=ГруппыСписок.Ссылка;
	КонецЦикла;
	Если текСсылка=Неопределено тогда
		текГруппа=Справочники.Шаблоны.СоздатьГруппу();
		текГруппа.Наименование=текИмя;
		Если НЕ текРодитель=Неопределено тогда
			текГруппа.Родитель=текРодитель;
		КонецЕсли;
		текГруппа.Записать();
		текСсылка=текГруппа.Ссылка;
	КонецЕсли;
	Возврат текСсылка;
КонецФункции

&НасервереБезКонтекста
Процедура ОбработатьКнопкуБД(текИмя,текРодитель=Неопределено,текОписание=Неопределено,Движения=Неопределено)
	текСсылка=Неопределено;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Шаблоны.Ссылка
	             |ИЗ
	             |	Справочник.Шаблоны КАК Шаблоны
	             |ГДЕ
	             |	Шаблоны.ПометкаУдаления = ЛОЖЬ
	             |	И Шаблоны.ЭтоГруппа = ЛОЖЬ
	             |	И Шаблоны.Наименование = &Наименование";
	Если НЕ текРодитель=Неопределено тогда
		Запрос.Текст=Запрос.Текст+"				 
	             |	И Шаблоны.Родитель = &Родитель";
		Запрос.УстановитьПараметр("Родитель",текРодитель);
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование",текИмя);
	КнопкиСписок=Запрос.Выполнить().Выбрать();
	Пока КнопкиСписок.Следующий() Цикл
		текСсылка=КнопкиСписок.Ссылка;
	КонецЦикла;
	Если текСсылка=Неопределено тогда
		текКнопка=Справочники.Шаблоны.СоздатьЭлемент();
		текКнопка.Наименование=текИмя;
		Если НЕ текРодитель=Неопределено тогда
			текКнопка.Родитель=текРодитель;
		КонецЕсли;
		текКнопка.Записать();
	Иначе
		текКнопка=текСсылка.ПолучитьОбъект();
	КонецЕсли;
	Если текОписание=Неопределено тогда
		Если НЕ ЗначениеЗаполнено(текКнопка.Описание) тогда
			текКнопка.Описание=текИмя;
		КонецЕсли;
	Иначе
		текКнопка.Описание=текОписание;
	КонецЕсли;
	Если НЕ Движения=Неопределено тогда
		текКнопка.Движения.Очистить();
		Если ТипЗнч(Движения)=Тип("Структура") тогда
			текДвижение=текКнопка.Движения.Добавить();
			текДвижение.ПодразделениеОткуда=Движения.ПодразделениеОткуда;
			Если Движения.ЗаголовокПО=Неопределено тогда
				Если Движения.ПодразделениеОткуда=Неопределено тогда
					текДвижение.ЗаголовокПО="Подразделение откуда";
				Иначе
					текДвижение.ЗаголовокПО="";
				КонецЕсли;
			Иначе
				текДвижение.ЗаголовокПО=Движения.ЗаголовокПО;
			КонецЕсли;
			текДвижение.ПодразделениеКуда=Движения.ПодразделениеКуда;
			Если Движения.ЗаголовокПК=Неопределено тогда
				Если Движения.ПодразделениеКуда=Неопределено тогда
					текДвижение.ЗаголовокПК="Подразделение куда";
				Иначе
					текДвижение.ЗаголовокПК="";
				КонецЕсли;
			Иначе
				текДвижение.ЗаголовокПК=Движения.ЗаголовокПК;
			КонецЕсли;
			текДвижение.СтатьяДвиженияОткуда=Движения.СтатьяДвиженияОткуда;
			текДвижение.ЗаголовокСДО=?(Движения.ЗаголовокСДО=Неопределено,ПолучитьРодителя(Движения.СтатьяДвиженияОткуда).Наименование,Движения.ЗаголовокСДО);
			текДвижение.СтатьяДвиженияКуда=Движения.СтатьяДвиженияКуда;
			текДвижение.ЗаголовокСДК=?(Движения.ЗаголовокСДК=Неопределено,ПолучитьРодителя(Движения.СтатьяДвиженияКуда).Наименование,Движения.ЗаголовокСДК);
			текДвижение.ВидДвижения=Движения.ВидДвижения;
		ИначеЕсли ТипЗнч(Движения)=Тип("Массив") тогда
			Для Каждого Движение из Движения Цикл
				текДвижение=текКнопка.Движения.Добавить();
				текДвижение.ПодразделениеОткуда=Движение.ПодразделениеОткуда;
				Если Движение.ЗаголовокПО=Неопределено тогда
					Если Движение.ПодразделениеОткуда=Неопределено тогда
						текДвижение.ЗаголовокПО="Подразделение откуда";
					Иначе
						текДвижение.ЗаголовокПО="";
					КонецЕсли;
				Иначе
					текДвижение.ЗаголовокПО=Движение.ЗаголовокПО;
				КонецЕсли;
				текДвижение.ПодразделениеКуда=Движение.ПодразделениеКуда;
				Если Движение.ЗаголовокПК=Неопределено тогда
					Если Движение.ПодразделениеКуда=Неопределено тогда
						текДвижение.ЗаголовокПО="Подразделение куда";
					Иначе
						текДвижение.ЗаголовокПО="";
					КонецЕсли;
				Иначе
					текДвижение.ЗаголовокПК=Движение.ЗаголовокПК;
				КонецЕсли;
				текДвижение.СтатьяДвиженияОткуда=Движение.СтатьяДвиженияОткуда;
				текДвижение.ЗаголовокСДО=?(Движение.ЗаголовокСДО=Неопределено,ПолучитьРодителя(Движение.СтатьяДвиженияОткуда).Наименование,Движение.ЗаголовокСДО);
				текДвижение.СтатьяДвиженияКуда=Движение.СтатьяДвиженияКуда;
				текДвижение.ЗаголовокСДК=?(Движение.ЗаголовокСДК=Неопределено,ПолучитьРодителя(Движение.СтатьяДвиженияКуда).Наименование,Движение.ЗаголовокСДК);
				текДвижение.ВидДвижения=Движение.ВидДвижения;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	текКнопка.Записать();
КонецПроцедуры

&НасервереБезКонтекста
Функция ОбработатьПодразделение(текИмя)
	текСсылка=Неопределено;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	Подразделения.Ссылка
	             |ИЗ
	             |	Справочник.Подразделения КАК Подразделения
	             |ГДЕ
	             |	Подразделения.ПометкаУдаления = ЛОЖЬ
	             |	И Подразделения.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование",текИмя);
	ПодрСписок=Запрос.Выполнить().Выбрать();
	Пока ПодрСписок.Следующий() Цикл
		текСсылка=ПодрСписок.Ссылка;
	КонецЦикла;
	Если текСсылка=Неопределено тогда
		текПодразделение=Справочники.Подразделения.СоздатьЭлемент();
		текПодразделение.Наименование=текИмя;
		текПодразделение.Записать();
		текСсылка=текПодразделение.Ссылка;
	КонецЕсли;
	Возврат текСсылка;
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиСтатьи(текДДС=Неопределено,текРасход=Неопределено,текДоход=Неопределено,текАктив=Неопределено,текПассив=Неопределено)
	Результат=Новый Структура("ДДС,Расход,Доход,Актив,Пассив",текДДС,текРасход,текДоход,ПолучитьСчет(текАктив),ПолучитьСчет(текПассив));
	Возврат Результат;
КонецФункции

&НасервереБезКонтекста
Функция ПолучитьСтатью(текИмя,текПодразделение=Неопределено,текНастройки,текРодитель=Неопределено,ЭтоГруппа=Ложь,текВалюта="")
	Результат=Неопределено;
	Если текПодразделение=Неопределено тогда
		текПодразделение=Справочники.Подразделения.ПустаяСсылка();
	КонецЕсли;
	Если текРодитель=Неопределено тогда
		текРодитель=Справочники.СтатьиДвижения.ПустаяСсылка();
	КонецЕсли;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СтатьиДвижения.Ссылка
	             |ИЗ
	             |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	             |ГДЕ
	             |	СтатьиДвижения.ЭтоГруппа = &Группа
	             |	И СтатьиДвижения.Родитель = &Родитель
	             |	И СтатьиДвижения.Подразделение = &Подразделение
	             |	И СтатьиДвижения.Наименование = &Имя
	             |	И СтатьиДвижения.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Подразделение",текПодразделение);
	Запрос.УстановитьПараметр("Группа",ЭтоГруппа);
	Запрос.УстановитьПараметр("Родитель",текРодитель);
	Запрос.УстановитьПараметр("Имя",текИмя);
	Статьи=Запрос.Выполнить().Выбрать();
	Пока Статьи.Следующий() Цикл
		Результат=Статьи.Ссылка;
	КонецЦикла;
	Если Результат=Неопределено тогда
		Если ЭтоГруппа тогда
			текОбъект=Справочники.СтатьиДвижения.СоздатьГруппу();
		Иначе
			текОбъект=Справочники.СтатьиДвижения.СоздатьЭлемент();
		КонецЕсли;
		текОбъект.Наименование=текИмя;
		текОбъект.Подразделение=текПодразделение;
		текОбъект.Родитель=текРодитель;
		текОбъект.Записать();
		Результат=текОбъект.Ссылка;
	Иначе
		текОбъект=Результат.ПолучитьОбъект();
	КонецЕсли;
	Если текНастройки.ДДС=Неопределено тогда
		текОбъект.РазделДДС=Перечисления.РазделыДДС.ПустаяСсылка();
	Иначе
		текОбъект.РазделДДС=текНастройки.ДДС;
	КонецЕсли;
	Если текНастройки.Расход=Неопределено тогда
		текОбъект.РазделОПиУРасход=Справочники.РазделыОПиУ.ПустаяСсылка();
	Иначе
		текОбъект.РазделОПиУРасход=текНастройки.Расход;
	КонецЕсли;
	Если текНастройки.Доход=Неопределено тогда
		текОбъект.РазделОПиУДоход=Справочники.РазделыОПиУ.ПустаяСсылка();
	Иначе
		текОбъект.РазделОПиУДоход=текНастройки.Доход;
	КонецЕсли;
	Если текНастройки.Актив=Неопределено тогда
		текОбъект.СчетУчетаДт=ПланыСчетов.Внутренний.ПустаяСсылка();
	Иначе
		текОбъект.СчетУчетаДт=текНастройки.Актив;
	КонецЕсли;
	Если текНастройки.Пассив=Неопределено тогда
		текОбъект.СчетУчетаКт=ПланыСчетов.Внутренний.ПустаяСсылка();
	Иначе
		текОбъект.СчетУчетаКт=текНастройки.Пассив;
	КонецЕсли;
	Если Константы.МультивалютныйУчет.Получить() тогда
		Если текВалюта="" тогда
			текОбъект.Валюта=Константы.ОсновнаяВалюта.Получить();
		Иначе
			текОбъект.Валюта=РаботаСВалютой.ПолучитьВалютуПоСимвКоду(текВалюта);
		КонецЕсли;
	КонецЕсли;
	текОбъект.Записать();
	Возврат Результат;
КонецФункции

&НасервереБезКонтекста
Функция ПолучитьСчет(текСчет)
	текСсылка=ПланыСчетов.Внутренний.ПустаяСсылка();
	Если ТипЗнч(текСчет)=Тип("ПланСчетовСсылка.Внутренний") тогда
		текСсылка=текСчет;
	ИначеЕсли ТипЗнч(текСчет)=Тип("Строка") тогда
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	Внутренний.Ссылка
		             |ИЗ
		             |	ПланСчетов.Внутренний КАК Внутренний
		             |ГДЕ
		             |	Внутренний.Наименование = &Наименование";
		Запрос.УстановитьПараметр("Наименование",текСчет);
		СписокСчет=Запрос.Выполнить().Выбрать();
		Пока СписокСчет.Следующий() Цикл
			текСсылка=СписокСчет.Ссылка;
		КонецЦикла;
	КонецЕсли;
	Возврат текСсылка;
КонецФункции

&НаКлиенте
Процедура Операционные(Команда)
	Элементы.ГруппаОперационныеРасходы.Видимость=НЕ Элементы.ГруппаОперационныеРасходы.Видимость;
	Элементы.ГруппаАдминистративныеРасходы.Видимость=Ложь;
	Элементы.ГруппаКоммерческиеРасходы.Видимость=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Административные(Команда)
	Элементы.ГруппаОперационныеРасходы.Видимость=Ложь;
	Элементы.ГруппаАдминистративныеРасходы.Видимость=НЕ Элементы.ГруппаАдминистративныеРасходы.Видимость;
	Элементы.ГруппаКоммерческиеРасходы.Видимость=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Коммерческие(Команда)
	Элементы.ГруппаОперационныеРасходы.Видимость=Ложь;
	Элементы.ГруппаАдминистративныеРасходы.Видимость=Ложь;
	Элементы.ГруппаКоммерческиеРасходы.Видимость=НЕ Элементы.ГруппаКоммерческиеРасходы.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКнопкиРасходы()
	Элементы.Операционные.Заголовок="Операционные ("+Строка(ОперационныеСписок.Количество())+")";
	Элементы.Административные.Заголовок="Административные ("+Строка(АдминистративныеСписок.Количество())+")";
	Элементы.Коммерческие.Заголовок="Коммерческие ("+Строка(КоммерческиеСписок.Количество())+")";
КонецПроцедуры

&НаКлиенте
Процедура ИнвесторСписокПриАктивизацииПоля(Элемент)
	//Если ИнвесторСписок.Количество() И Элемент.ТекущийЭлемент.Имя="ИнвесторСписокУдалить" тогда
	Если ЭтаФорма.ТекущийЭлемент=Элементы.ИнвесторСписок И Элемент.ТекущийЭлемент.Имя="ИнвесторСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.ИнвесторСписокИмя;
		ИнвесторСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаСписокПриАктивизацииПоля(Элемент)
	//Если СпособРасчетаСписок.Количество() И Элемент.ТекущийЭлемент.Имя="СпособРасчетаСписокУдалить" тогда
	Если ЭтаФорма.ТекущийЭлемент=Элемент И Элемент.ТекущийЭлемент.Имя="СпособРасчетаСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.СпособРасчетаСписокИмя;
		СпособРасчетаСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОперационныеСписокПриАктивизацииПоля(Элемент)
	//Если ОперационныеСписок.Количество() И Элемент.ТекущийЭлемент.Имя="ОперационныеСписокУдалить" тогда
	Если ЭтаФорма.ТекущийЭлемент=Элемент И Элемент.ТекущийЭлемент.Имя="ОперационныеСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.ОперационныеСписокИмя;
		ОперационныеСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
		//ОбновитьКнопкиРасходы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АдминистративныеСписокПриАктивизацииПоля(Элемент)
	//Если АдминистративныеСписок.Количество() И Элемент.ТекущийЭлемент.Имя="АдминистративныеСписокУдалить" тогда
	Если ЭтаФорма.ТекущийЭлемент=Элемент И Элемент.ТекущийЭлемент.Имя="АдминистративныеСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.АдминистративныеСписокИмя;
		АдминистративныеСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
		//ОбновитьКнопкиРасходы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоммерческиеСписокПриАктивизацииПоля(Элемент)
	//Если КоммерческиеСписок.Количество() И Элемент.ТекущийЭлемент.Имя="КоммерческиеСписокУдалить" тогда
	Если ЭтаФорма.ТекущийЭлемент=Элемент И Элемент.ТекущийЭлемент.Имя="КоммерческиеСписокУдалить" И Элемент.ТекущиеДанные.Удалить тогда
		Элемент.ТекущийЭлемент=Элементы.КоммерческиеСписокИмя;
		КоммерческиеСписок.Удалить(Элемент.ТекущиеДанные);
		ОбновитьКнопки();
		//ОбновитьКнопкиРасходы();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КлючСохраненияПоложенияОкна = "#УдалитьПриЗавершенииРаботы#" + Новый УникальныйИдентификатор;
	ЗаполнитьРасходы();
	НайтиСтатьиИнвестор();
	Валюты=Константы.МультивалютныйУчет.Получить();
	Если Валюты тогда
		ИнициализироватьКлассификаторВалюты();
		ИнициализироватьВалютуНаСервере();
		ОтборВалютыНаСервере();
	КонецЕсли;
	ТелефонИмя=ПолучитьТелПользователя();
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКлассификаторВалюты()
	УстановитьПривилегированныйРежим(Истина);
	МассивГлавных=Новый Массив;
	МассивГлавных.Добавить("EUR");
	МассивГлавных.Добавить("USD");
	МассивГлавных.Добавить("RUB");
	МассивГлавных.Добавить("CNY");
	МассивГлавных.Добавить("KZT");
	КлассификаторXML = Справочники.Валюты.ПолучитьМакет("ОбщероссийскийКлассификаторВалют").ПолучитьТекст();
	КлассификаторТаблица.Загрузить(ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные);
	Для каждого текВалюта из КлассификаторТаблица Цикл
		текВалюта.Главная=(НЕ МассивГлавных.Найти(текВалюта.CodeSymbol)=Неопределено);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВалютуНаСервере()
	текВалюта=Константы.ОсновнаяВалюта.Получить();
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Валюты.Код,
	             |	Валюты.Наименование,
	             |	Валюты.НаименованиеПолное,
	             |	Валюты.СпособУстановкиКурса,
	             |	Валюты.ПараметрыПрописиНаРусском,
	             |	Валюты.Ссылка
	             |ИЗ
	             |	Справочник.Валюты КАК Валюты";
	ВалютыСписок=Запрос.Выполнить().Выбрать();
	Пока ВалютыСписок.Следующий() Цикл
		НовСтрока=ВалютаСписок.Добавить();
		НовСтрока.Код=ВалютыСписок.Код;
		НовСтрока.Наименование=ВалютыСписок.Наименование;
		НовСтрока.НаименованиеПолное=ВалютыСписок.НаименованиеПолное;
		НовСтрока.СпособУстановкиКурса=ВалютыСписок.СпособУстановкиКурса;
		НовСтрока.ПараметрыПрописиНаРусском=ВалютыСписок.ПараметрыПрописиНаРусском;
		НовСтрока.Предустановленная=Истина;
		НовСтрока.ОсновнаяВалюта=(ВалютыСписок.Ссылка=текВалюта);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОтборВалютыНаСервере()
   Построитель = Новый ПостроительЗапроса;
   Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(КлассификаторТаблица.Выгрузить());
   ВалютаОтбор=ВалютаСписок.Выгрузить().ВыгрузитьКолонку("Наименование");
   СписокОтбор=Новый СписокЗначений;
   СписокОтбор.ЗагрузитьЗначения(ВалютаОтбор);
   тОтбор = Построитель.Отбор.Добавить("CodeSymbol");
   тОтбор.ВидСравнения = ВидСравнения.НеВСписке;
   тОтбор.Значение = СписокОтбор;
   тОтбор.Использование = Истина;
   Построитель.Порядок.Установить("Главная Убыв,CodeSymbol Возр");
   Построитель.Выполнить();
   ВалютаТаблица.Загрузить(Построитель.Результат.Выгрузить());
 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВалюту(Команда)
	ВыбСтроки=Элементы.ВалютаТаблица.ВыделенныеСтроки;
	Если ВыбСтроки.Количество() тогда
		//Для Каждого текСтрока из ВыбСтроки Цикл
			//Выбстрока=Элементы.ВалютаТаблица.ДанныеСтроки(текСтрока);
			ДобавитьВалютуНаСервере(ВыбСтроки);
		//КонецЦикла;
		ОтборВалютыНаСервере();
		ОбновитьКнопки();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВалютуНаСервере(ВыбСтроки)
	Для Каждого текСтрока из ВыбСтроки Цикл
		ВыбСтрока=ВалютаТаблица.НайтиПоИдентификатору(текСтрока);
		НоваяСтрока = ВалютаСписок.Добавить();
		НоваяСтрока.Код							= ВыбСтрока.Code;
		НоваяСтрока.Наименование				= ВыбСтрока.CodeSymbol;
		НоваяСтрока.НаименованиеПолное			= ВыбСтрока.Name;
		Если ВыбСтрока.RBCLoading Тогда
			НоваяСтрока.СпособУстановкиКурса 	= Перечисления.СпособыУстановкиКурсаВалюты.ЗагрузкаИзИнтернета;
		Иначе
			НоваяСтрока.СпособУстановкиКурса 	= Перечисления.СпособыУстановкиКурсаВалюты.РучнойВвод;
		КонецЕсли;
		НоваяСтрока.ПараметрыПрописиНаРусском 	= ВыбСтрока.NumerationItemOptions;
	КонецЦикла;
КонецПроцедуры


&НаСервере
Функция УбратьВалютуНаСервере(ВыбСтроки)
	Результат=Ложь;
	МассивУдаляемых=Новый Массив;
	Для Каждого текСтрока из ВыбСтроки Цикл
		ВыбСтрока=ВалютаСписок.НайтиПоИдентификатору(текСтрока);
		Если НЕ ВыбСтрока.Предустановленная тогда
			МассивУдаляемых.Добавить(ВыбСтрока);
			Результат=Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого текСтрока из МассивУдаляемых Цикл
		ВалютаСписок.Удалить(текСтрока);
	КонецЦикла;
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура УбратьВалюту(Команда)
	ВыбСтроки=Элементы.ВалютаСписок.ВыделенныеСтроки;
	Если ВыбСтроки.Количество() тогда
		Удалены=УбратьВалютуНаСервере(ВыбСтроки);
		Если Удалены тогда
			ОтборВалютыНаСервере();
			ОбновитьКнопки();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ВалютаТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбСтроки=Элемент.ВыделенныеСтроки;
	ДобавитьВалютуНаСервере(ВыбСтроки);
	ОтборВалютыНаСервере();
	ОбновитьКнопки();
КонецПроцедуры


&НаКлиенте
Процедура ВалютаСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбСтроки=Элемент.ВыделенныеСтроки;
	Удалены=УбратьВалютуНаСервере(ВыбСтроки);
	Если Удалены тогда
		ОтборВалютыНаСервере();
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВалютаСписокПриИзменении(Элемент)
	текСтрока=Элемент.ТекущиеДанные;
	УстановитьОсновнаяВалюта(текСтрока.Наименование,текСтрока.ОсновнаяВалюта);
КонецПроцедуры


&НаСервере
Процедура УстановитьОсновнаяВалюта(текИмя,текФлаг)
	Для каждого текВалюта из ВалютаСписок Цикл
		текВалюта.ОсновнаяВалюта=Ложь;
		Если текВалюта.Наименование=текИмя тогда
			текВалюта.ОсновнаяВалюта=текФлаг;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновнаяВалюта()
	Результат="";
	Для каждого текВалюта из ВалютаСписок Цикл
		Если текВалюта.ОсновнаяВалюта тогда
			Результат=текВалюта.Наименование; 
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьСписокВалют()
	МассивЗначений=ВалютаСписок.Выгрузить().ВыгрузитьКолонку("Наименование");
	//Результат = Новый СписокЗначений;
	//Результат.ЗагрузитьЗначения(МассивЗначений);
	Возврат МассивЗначений;
КонецФункции


&НаКлиенте
Процедура ИмяПодразделенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    Перем НовЗначение;

    Массив = Новый Массив;
    Массив.Добавить(Тип("СправочникСсылка.Подразделения"));

    ОписаниеТиповК = Новый ОписаниеТипов(Массив);
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма);
    ПоказатьВводЗначения(Оповещение, НовЗначение, "Выбор подразделения", ОписаниеТиповК);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначения(ВыбЗнач, Параметры) Экспорт

    Если ВыбЗнач<>Неопределено Тогда
		ПодразделениеСсылка=ВыбЗнач;
		ПодразделениеИмя=ПолучитьПодразделениеИмя(ПодразделениеСсылка);
		НайтиСтатьиПодразделения(ПодразделениеСсылка);
		ОбновитьКнопки();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НайтиСтатьиПодразделения(текПодразделение,преПодразделение=Неопределено)
	Если (преПодразделение=Неопределено) ИЛИ НЕ (текПодразделение=преПодразделение) тогда
		СпособРасчетаСписок.Очистить();
		ОперационныеСписок.Очистить();
		АдминистративныеСписок.Очистить();
		КоммерческиеСписок.Очистить();
		ГруппаДС=НайтиГруппу(ПодразделениеИмя,текПодразделение,Справочники.СтатьиДвижения.ДенежныеСредства);
		СпособыРасчета=НайтиСтатьи(текПодразделение,ГруппаДС);
		Если СпособыРасчета.Количество() тогда
			Для Каждого текСпособ из СпособыРасчета Цикл
				НовСтрока=СпособРасчетаСписок.Добавить();
				//НовСтрока.Остаток=текСумма;
				Если Валюты тогда
					НовСтрока.Валюта=текСпособ.ВалютаИмя;
				КонецЕсли;
				НовСтрока.Удалить=Ложь;
				НовСтрока.Остаток=текСпособ.СуммаОстаток;
				НовСтрока.Ссылка=текСпособ.Статья;
				НовСтрока.Имя=текСпособ.СтатьяИмя;
			КонецЦикла;
		КонецЕсли;
		РасходыГруппа=НайтиГруппу("Расходы",текПодразделение);
		текГруппа=НайтиГруппу("Операционные",текПодразделение,РасходыГруппа);
		Операционные=НайтиСтатьи(текПодразделение,текГруппа);
		Если Операционные.Количество() тогда
			Для Каждого текРасход из Операционные Цикл
				НовСтрока=ОперационныеСписок.Добавить();
				НовСтрока.Имя=текРасход.СтатьяИмя;
			КонецЦикла;
		КонецЕсли;
		текГруппа=НайтиГруппу("Административные",текПодразделение,РасходыГруппа);
		Административные=НайтиСтатьи(текПодразделение,текГруппа);
		Если Административные.Количество() тогда
			Для Каждого текРасход из Административные Цикл
				НовСтрока=АдминистративныеСписок.Добавить();
				НовСтрока.Имя=текРасход.СтатьяИмя;
			КонецЦикла;
		КонецЕсли;
		текГруппа=НайтиГруппу("Коммерческие",текПодразделение,РасходыГруппа);
		Коммерческие=НайтиСтатьи(текПодразделение,текГруппа);
		Если Коммерческие.Количество() тогда
			Для Каждого текРасход из Коммерческие Цикл
				НовСтрока=КоммерческиеСписок.Добавить();
				НовСтрока.Имя=текРасход.СтатьяИмя;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НасервереБезКонтекста
Функция ПолучитьПодразделениеИмя(текПодр)
	Возврат текПодр.Наименование;
КонецФункции

&НасервереБезКонтекста
Функция НайтиПодразделениеПоИмя(текИмя)
	Результат=Справочники.Подразделения.ПустаяСсылка();
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Подразделения.Ссылка
	             |ИЗ
	             |	Справочник.Подразделения КАК Подразделения
	             |ГДЕ
	             |	Подразделения.ПометкаУдаления = ЛОЖЬ
	             |	И Подразделения.Наименование = &Имя";
	Запрос.УстановитьПараметр("Имя",текИмя);
	ПодрСписок=Запрос.Выполнить().Выбрать();
	Пока ПодрСписок.Следующий() Цикл
		Результат=ПодрСписок.Ссылка;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НасервереБезКонтекста
Функция НайтиГруппу(текИмя,текПодр,текГруппа=Неопределено)
	Результат=Справочники.СтатьиДвижения.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СтатьиДвижения.Ссылка
	             |ИЗ
	             |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	             |ГДЕ
	             |	СтатьиДвижения.ПометкаУдаления = ЛОЖЬ
	             |	И СтатьиДвижения.ЭтоГруппа = ИСТИНА
	             |	И СтатьиДвижения.Подразделение = &Подразделение
	             |	И СтатьиДвижения.Наименование = &Наименование";
	Если НЕ текГруппа=Неопределено тогда
		Запрос.Текст=Запрос.Текст+"			 
	             |	И СтатьиДвижения.Родитель = &Родитель";
		Запрос.УстановитьПараметр("Родитель",текГруппа);
	КонецЕсли;
	Запрос.УстановитьПараметр("Подразделение",текПодр);
	Запрос.УстановитьПараметр("Наименование",текИмя);
	Статьи=Запрос.Выполнить().Выбрать();
	Пока Статьи.Следующий() Цикл
		Результат=Статьи.Ссылка;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НасервереБезКонтекста
Функция НайтиСтатьи(текПодр,текГруппа)
	Результат=Справочники.СтатьиДвижения.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СтатьиДвижения.Ссылка КАК Статья,
	             |	СтатьиДвижения.Наименование КАК СтатьяИмя,
	             |	СтатьиДвижения.Валюта,
	             |	СтатьиДвижения.Валюта.Наименование КАК ВалютаИмя,
	             |	ДвиженияОстатки.СуммаОстаток
	             |ИЗ
	             |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Движения.Остатки(&ДатаОст, Подразделение = &Подразделение) КАК ДвиженияОстатки
	             |		ПО ДвиженияОстатки.СтатьяДвижения = СтатьиДвижения.Ссылка
	             |ГДЕ
	             |	СтатьиДвижения.ПометкаУдаления = ЛОЖЬ
	             |	И СтатьиДвижения.ЭтоГруппа = ЛОЖЬ
	             |	И СтатьиДвижения.Подразделение = &Подразделение
	             |	И СтатьиДвижения.Родитель = &Родитель";
	Запрос.УстановитьПараметр("Родитель",текГруппа);
	Запрос.УстановитьПараметр("Подразделение",текПодр);
	Запрос.УстановитьПараметр("ДатаОст",ТекущаяДата());
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Процедура НайтиСтатьиИнвестор()
	ИнвесторСписок.Очистить();
	текПодразделение=НайтиПодразделениеПоИмя("Инвестор");
	ГруппаДС=НайтиГруппу("Инвесторы",текПодразделение,Справочники.СтатьиДвижения.ДенежныеСредства);
	Инвесторы=НайтиСтатьи(текПодразделение,ГруппаДС);
	Если Инвесторы.Количество() тогда
		Для Каждого текИнвестор из Инвесторы Цикл
			НовСтрока=ИнвесторСписок.Добавить();
			НовСтрока.Удалить=Ложь;
			НовСтрока.Ссылка=текИнвестор.Статья;
			НовСтрока.Имя=текИнвестор.СтатьяИмя;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаСписокПередНачаломИзменения(Элемент, Отказ)
	Отказ=НЕ Элемент.ТекущиеДанные.Удалить;
КонецПроцедуры


&НаКлиенте
Процедура ОперационныеСписокПередНачаломИзменения(Элемент, Отказ)
	Отказ=НЕ Элемент.ТекущиеДанные.Удалить;
КонецПроцедуры


&НаКлиенте
Процедура АдминистративныеСписокПередНачаломИзменения(Элемент, Отказ)
	Отказ=НЕ Элемент.ТекущиеДанные.Удалить;
КонецПроцедуры


&НаКлиенте
Процедура КоммерческиеСписокПередНачаломИзменения(Элемент, Отказ)
	Отказ=НЕ Элемент.ТекущиеДанные.Удалить;
КонецПроцедуры


&НаКлиенте
Процедура ИмяПодразделенияПриИзменении(Элемент)
	текПодразделение=НайтиПодразделениеПоИмя(ПодразделениеИмя);
	НайтиСтатьиПодразделения(текПодразделение,ПодразделениеСсылка);
	ПодразделениеСсылка=текПодразделение;
КонецПроцедуры


&НаКлиенте
Процедура ИмяПодразделенияИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Элементы.Далее.Доступность=(СтрДлина(СокрЛП(ТелефонИмя))=11 И НЕ (Текст=""));
КонецПроцедуры


&НаКлиенте
Процедура ГруппаМастерПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСуммарная тогда
		ЗаполнитьСуммари();
	ИначеЕсли Элементы.ГруппаМастер.ТекущаяСтраница=Элементы.ГруппаСпособРасчета тогда
		Если Валюты И ВалютаСписок.Количество() И НЕ ПолучитьОсновнаяВалюта()="" тогда
			Элементы.СпособРасчетаСписокВалюта.СписокВыбора.Очистить();
			Элементы.СпособРасчетаСписокВалюта.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокВалют());
		КонецЕсли;
	КонецЕсли;
	ОбновитьКнопки();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСуммари()
	текПоле="";
	Для Каждого текСтрока из ВалютаСписок Цикл
		Если НЕ текСтрока.Предустановленная тогда
			текПоле=?(текПоле="",текСтрока.Наименование,текПоле+Символы.ПС+текСтрока.Наименование);
			Если текСтрока.ОсновнаяВалюта тогда
				текПоле=текПоле+" Основная";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Элементы.НадписьВалюта.Заголовок=текПоле;
	текПоле="";
	Для Каждого текСтрока из ИнвесторСписок Цикл
		Если текСтрока.Удалить тогда
			текПоле=?(текПоле="",текСтрока.Имя,текПоле+Символы.ПС+текСтрока.Имя);
		КонецЕсли;
	КонецЦикла;
	Элементы.НадписьИнвестор.Заголовок=текПоле;
	текПоле="";
	Если НЕ ЗначениеЗаполнено(ПодразделениеСсылка) тогда
		текПоле=ПодразделениеИмя;
	КонецЕсли;
	Элементы.НадписьПодразделение.Заголовок=текПоле;
	текПоле="";
	Для Каждого текСтрока из СпособРасчетаСписок Цикл
		Если текСтрока.Удалить тогда
			текПоле=?(текПоле="",текСтрока.Имя,текПоле+Символы.ПС+текСтрока.Имя);
		КонецЕсли;
	КонецЦикла;
	Элементы.НадписьРасчеты.Заголовок=текПоле;
	текПоле="";
	Для Каждого текСтрока из ОперационныеСписок Цикл
		Если текСтрока.Удалить тогда
			текПоле=?(текПоле="",текСтрока.Имя,текПоле+Символы.ПС+текСтрока.Имя);
		КонецЕсли;
	КонецЦикла;
	Элементы.НадписьОперационные.Заголовок=текПоле;
	текПоле="";
	Для Каждого текСтрока из АдминистративныеСписок Цикл
		Если текСтрока.Удалить тогда
			текПоле=?(текПоле="",текСтрока.Имя,текПоле+Символы.ПС+текСтрока.Имя);
		КонецЕсли;
	КонецЦикла;
	Элементы.НадписьАдминистративные.Заголовок=текПоле;
	текПоле="";
	Для Каждого текСтрока из КоммерческиеСписок Цикл
		Если текСтрока.Удалить тогда
			текПоле=?(текПоле="",текСтрока.Имя,текПоле+Символы.ПС+текСтрока.Имя);
		КонецЕсли;
	КонецЦикла;
	Элементы.НадписьКоммерческие.Заголовок=текПоле;
	
	Элементы.ГруппаНадписьВалюта.Видимость=НЕ (Элементы.НадписьВалюта.Заголовок="");
	Элементы.ГруппаНадписьИнвестор.Видимость=НЕ (Элементы.НадписьИнвестор.Заголовок="");
	Элементы.ГруппаНадписьПодразделение.Видимость=НЕ (Элементы.НадписьПодразделение.Заголовок="");
	Элементы.ГруппаНадписьРасчеты.Видимость=НЕ (Элементы.НадписьРасчеты.Заголовок="");
	Элементы.ГруппаНадписьОперационные.Видимость=НЕ (Элементы.НадписьОперационные.Заголовок="");
	Элементы.ГруппаНадписьАдминистративные.Видимость=НЕ (Элементы.НадписьАдминистративные.Заголовок="");
	Элементы.ГруппаНадписьКоммерческие.Видимость=НЕ (Элементы.НадписьКоммерческие.Заголовок="");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасходы()
	ОпМассив=Новый Массив;
	ОпМассив.Добавить("Транспортные расходы");
	ОпМассив.Добавить("Брак, списание");
	ОпМассив.Добавить("Товар");
	ОпМассив.Добавить("Материалы");
	Для Каждого текСтатья из ОпМассив Цикл
		НовСтрока=ОперационныеСписок.Добавить();
		НовСтрока.Удалить=Истина;
		НовСтрока.Имя=текСтатья;
	КонецЦикла;
	АдМассив=Новый Массив;
	АдМассив.Добавить("Транспортные расходы");
	АдМассив.Добавить("Информационные технологии");
	АдМассив.Добавить("Офисные расходы");
	АдМассив.Добавить("Услуги связи");
	АдМассив.Добавить("Аренда");
	АдМассив.Добавить("Коммунальные услуги");
	АдМассив.Добавить("Налоги");
	АдМассив.Добавить("Заработная плата");
	Для Каждого текСтатья из АдМассив Цикл
		НовСтрока=АдминистративныеСписок.Добавить();
		НовСтрока.Удалить=Истина;
		НовСтрока.Имя=текСтатья;
	КонецЦикла;
	КомМассив=Новый Массив;
	КомМассив.Добавить("Транспортные расходы");
	КомМассив.Добавить("Реклама");
	Для Каждого текСтатья из КомМассив Цикл
		НовСтрока=КоммерческиеСписок.Добавить();
		НовСтрока.Удалить=Истина;
		НовСтрока.Имя=текСтатья;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТелефонИмяИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Элементы.Далее.Доступность=(СтрДлина(СокрЛП(Текст))=11 И ЗначениеЗаполнено(ПодразделениеИмя));
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьТелПользователя(текТелИмя)
	текПользователь=ПараметрыСеанса.ТекущийПользователь.ПолучитьОбъект();
	текТел=текПользователь.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ТелефонПользователя,"Вид");
	Если текТел=Неопределено тогда
		текТел=текПользователь.КонтактнаяИнформация.Добавить();
	КонецЕсли;
	текТел.Тип=Перечисления.ТипыКонтактнойИнформации.Телефон;
	текТел.Вид=Справочники.ВидыКонтактнойИнформации.ТелефонПользователя;
	текТел.ВидДляСписка=Справочники.ВидыКонтактнойИнформации.ТелефонПользователя;
	текТел.НомерТелефона=текТелИмя;
	текТел.НомерТелефонаБезКодов=Прав(текТелИмя,7);
	текТел.Представление="+"+Лев(текТелИмя,1)+" ("+Сред(текТелИмя,2,3)+") "+Сред(текТелИмя,5,3)+"-"+Сред(текТелИмя,8,2)+"-"+Сред(текТелИмя,10,2);
	текПользователь.Записать();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТелПользователя()
	текПользователь=ПараметрыСеанса.ТекущийПользователь.ПолучитьОбъект();
	текТел=текПользователь.КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ТелефонПользователя,"Вид");
	Если текТел=Неопределено тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат текТел.НомерТелефона;
КонецФункции

&НаКлиенте
Процедура ИнвесторСписокПередНачаломИзменения(Элемент, Отказ)
	Отказ=НЕ Элемент.ТекущиеДанные.Удалить;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьМультивалютныйУчет(текЗначение)
	Константы.МультивалютныйУчет.Установить(текЗначение);
КонецПроцедуры

