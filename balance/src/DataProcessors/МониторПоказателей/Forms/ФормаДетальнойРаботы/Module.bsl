
&НаКлиенте
Процедура ДекорацияСвернутьНажатие(Элемент)
	Элементы.ГруппаПапки.Видимость = Ложь;
	Элементы.ДекорацияСвернуть.Видимость   = Ложь;
	Элементы.ДекорацияРазвернуть.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРазвернутьНажатие(Элемент)
	Элементы.ГруппаПапки.Видимость = Истина;
	Элементы.ДекорацияСвернуть.Видимость   = Истина;
	Элементы.ДекорацияРазвернуть.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСвернутьДанныеРасшифровкиНажатие(Элемент)
	Элементы.ГруппаРасшифровка.Видимость = Ложь;
	Элементы.ДекорацияСвернутьДанныеРасшифровки.Видимость   = Ложь;
	Элементы.ДекорацияРазвернутьДанныеРасшифровки.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРазвернутьДанныеРасшифровкиНажатие(Элемент)
	Элементы.ГруппаРасшифровка.Видимость = Истина;
	Элементы.ДекорацияСвернутьДанныеРасшифровки.Видимость   = Истина;
	Элементы.ДекорацияРазвернутьДанныеРасшифровки.Видимость = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СоздатьСписокВыбора(0);
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = Строка(Параметры.Подразделение) + " " + Строка(Параметры.КонечныйОстаток);
	ЭтотОбъект.Подразделение = Параметры.Подразделение;
	ЭтотОбъект.ТекПериод.ДатаНачала		= '20140101';
	ЭтотОбъект.ТекПериод.ДатаОкончания 	= КонецМесяца(ТекущаяДата());
	//папки.Параметры.УстановитьЗначениеПараметра("Подразделение",Параметры.Подразделение);
	ОбновитьТекущиеОстатки(Параметры.Подразделение,,0);
	//ОбновитьГрафикДС(Параметры.Подразделение)
	ОбновитьОстаткиПоМесяцам(Параметры.Подразделение,,3);	
	ОбновитьДанныеРасшифровки(ЭтотОбъект.Подразделение,Справочники.СтатьиДвижения.ПустаяСсылка(),0);
	УстановитьЗаголовки(ЭтотОбъект.Подразделение,Справочники.СтатьиДвижения.ПустаяСсылка());
	ОбновитьОстаткиПоПапкам(ЭтотОбъект.Подразделение,Справочники.СтатьиДвижения.ПустаяСсылка());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиПоПапкам(Подразделение,Папка = Неопределено)
	//++
	МассивПодразделений = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
		МассивПодразделений.Добавить(Строка.Подразделение);	
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", МассивПодразделений);
	//ЭлементИсключение = ПараметрыСеанса.ТекущийПользователь.Подразделение.Родитель;
	Запрос.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Родитель КАК Родитель,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&Подразделение)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Родитель,
	                    |	Подразделения.Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных";
	Бизнесы = Запрос.Выполнить().Выгрузить();//.Выгрузить();

	//++
	МассивСтатей = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокСтатей Цикл
		МассивСтатей.Добавить(Строка.СтатьяДвижения);		
	КонецЦикла;
	

	
	Дерево = РеквизитФормыВЗначение("Папки");
	ЗапросОстатковПоПапкам = Новый Запрос("ВЫБРАТЬ
	                                      |	СУММА(ЕСТЬNULL(ДвиженияОстатки.СуммаОстаток, 0)) КАК СуммаОстаток,
	                                      |	ВЫБОР
	                                      |		КОГДА ДвиженияОстатки.СтатьяДвижения.ЭтоГруппа ЕСТЬ NULL
	                                      |			ТОГДА 5
	                                      |		ИНАЧЕ ВЫБОР
	                                      |				КОГДА ДвиженияОстатки.СтатьяДвижения.ЭтоГруппа = ИСТИНА
	                                      |					ТОГДА 0
	                                      |				ИНАЧЕ 3
	                                      |			КОНЕЦ
	                                      |	КОНЕЦ КАК НомерКартинки,
	                                      |	СтатьиДвижения.Ссылка КАК Папка
	                                      |ИЗ
	                                      |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Движения.Остатки(
	                                      |				,
	                                      |				Подразделение В ИЕРАРХИИ (&Подразделение)
	                                      |					И СтатьяДвижения.Подразделение В ИЕРАРХИИ (&Бизнес)) КАК ДвиженияОстатки
	                                      |		ПО (ДвиженияОстатки.СтатьяДвижения = СтатьиДвижения.Ссылка)
	                                      |ГДЕ
	                                      |	ВЫБОР
	                                      |			КОГДА &ФильтрПоСтатьям
	                                      |				ТОГДА СтатьиДвижения.Ссылка В ИЕРАРХИИ (&МассивСтатей)
	                                      |		КОНЕЦ
	                                      |	И СтатьиДвижения.Подразделение В ИЕРАРХИИ(&Подразделение)
	                                      |
	                                      |СГРУППИРОВАТЬ ПО
	                                      |	ВЫБОР
	                                      |		КОГДА ДвиженияОстатки.СтатьяДвижения.ЭтоГруппа ЕСТЬ NULL
	                                      |			ТОГДА 5
	                                      |		ИНАЧЕ ВЫБОР
	                                      |				КОГДА ДвиженияОстатки.СтатьяДвижения.ЭтоГруппа = ИСТИНА
	                                      |					ТОГДА 0
	                                      |				ИНАЧЕ 3
	                                      |			КОНЕЦ
	                                      |	КОНЕЦ,
	                                      |	СтатьиДвижения.Ссылка
	                                      |
	                                      |УПОРЯДОЧИТЬ ПО
	                                      |	Папка
	                                      |ИТОГИ
	                                      |	СУММА(СуммаОстаток)
	                                      |ПО
	                                      |	ОБЩИЕ,
	                                      |	Папка ТОЛЬКО ИЕРАРХИЯ
	                                      |АВТОУПОРЯДОЧИВАНИЕ");
	ЗапросОстатковПоПапкам.УстановитьПараметр("Подразделение",Подразделение);
	ЗапросОстатковПоПапкам.УстановитьПараметр("Папка",?(Папка <> неопределено,Папка,Справочники.СтатьиДвижения.ПустаяСсылка()));
	ЗапросОстатковПоПапкам.УстановитьПараметр("Бизнес", Бизнесы);
	Если МассивСтатей.Количество()>0 Тогда
		ЗапросОстатковПоПапкам.УстановитьПараметр("ФильтрПоСтатьям", Истина);	
	Иначе
		ЗапросОстатковПоПапкам.УстановитьПараметр("ФильтрПоСтатьям", Ложь);
	КонецЕсли;
	СтатьиДвижения = ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей);
	ЗапросОстатковПоПапкам.УстановитьПараметр("МассивСтатей", СтатьиДвижения);
	РезультатЗапроса = ЗапросОстатковПоПапкам.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Дерево = РезультатЗапроса;
	ЗначениеВРеквизитФормы(Дерево,"Папки");
КонецПроцедуры

Функция ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СтатьиДвижения.Ссылка,
	                |	СтатьиДвижения.Подразделение
	                |ИЗ
	                |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                |ГДЕ
	                |	СтатьиДвижения.Ссылка В ИЕРАРХИИ(&МассивСтатей)";
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	РезультатСтатей = Запрос.Выполнить().Выгрузить();     
	
	ЗапросПодразделений = Новый Запрос;
	
	ЗапросПодразделений.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Подразделение
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Ссылка";
	МассивПодразделенийСПустымиСтатьями = Новый Массив;
	Для Каждого Строка из МассивПодразделений Цикл
		Совпадений = Ложь;
		
		ЗапросПодразделений.УстановитьПараметр("МассивПодразделений", Строка);
		РезультатПодразделений = ЗапросПодразделений.Выполнить().Выгрузить();
		
		//поиск совпадений
		Для Каждого СтрокаПодразделение из РезультатПодразделений Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Подразделение", СтрокаПодразделение.Подразделение);
			РезультатПоиска = РезультатСтатей.НайтиСтроки(Отбор);
			Если РезультатПоиска.Количество()>0 Тогда
				Совпадений = Истина;
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
		Если Совпадений = Ложь Тогда 
			МассивПодразделенийСПустымиСтатьями.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	//Запрос по пустым подразделениям по всем статьям
	//добавляем в массив
	ЗапросПоСтатьям = Новый Запрос;
	ЗапросПоСтатьям.УстановитьПараметр("МассивПодразделенийСПустымиСтатьями", МассивПодразделенийСПустымиСтатьями);
	ЗапросПоСтатьям.Текст = "ВЫБРАТЬ
	                        |	СтатьиДвижения.Ссылка
	                        |ИЗ
	                        |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                        |ГДЕ
	                        |	СтатьиДвижения.Подразделение В ИЕРАРХИИ(&МассивПодразделенийСПустымиСтатьями)";
	РезультатПоСтатьям = ЗапросПОСтатьям.Выполнить().Выгрузить();
	Для Каждого Строка из РезультатПоСтатьям Цикл
		МассивСтатей.Добавить(Строка.Ссылка);	
	КонецЦикла;
	
	Возврат МассивСтатей;
	
КонецФункции

&НаСервере
Процедура СоздатьСписокВыбора(Уровень)
	Элементы.Уровни.СписокВыбора.Очистить();
	сч = 3;
	Пока сч>= Уровень Цикл
		//Элементы.Уровни.СписокВыбора.Вставить(Сч,Сч,"Уровень "+сч);
		Элементы.Уровни.СписокВыбора.Добавить(сч,"Уровень "+сч);
		сч = сч-1;
	КонецЦикла;
КонецПроцедуры
&НаСервере
Процедура ОбновитьТекущиеОстатки(Подразделение,Папка=Неопределено,Уровень)
	
	МассивПодразделений = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
		МассивПодразделений.Добавить(Строка.Подразделение);	
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", МассивПодразделений);
	//ЭлементИсключение = ПараметрыСеанса.ТекущийПользователь.Подразделение.Родитель;
	//Запрос.УстановитьПараметр("ЭлементИсключение", ЭлементИсключение); 
	Запрос.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Родитель КАК Родитель,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&Подразделение)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Родитель,
	                    |	Подразделения.Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных";
	Бизнесы = Запрос.Выполнить().Выгрузить();	
	//++
	МассивСтатей = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокСтатей Цикл
		МассивСтатей.Добавить(Строка.СтатьяДвижения);		
	КонецЦикла;

	ЗапросОстатков = Новый Запрос();
Если Уровень = 3 Тогда	
	ЗапросОстатков.Текст = "ВЫБРАТЬ
	                       |	ДвиженияОстатки.СтатьяДвижения КАК СтатьяДвижения,
	                       |	СУММА(ДвиженияОстатки.СуммаОстаток) КАК СуммаОстаток
	                       |ИЗ
	                       |	РегистрНакопления.Движения.Остатки(
	                       |			,
	                       |			Подразделение В ИЕРАРХИИ (&Подразделение)
	                       |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)
	                       |				И СтатьяДвижения.Подразделение В ИЕРАРХИИ (&Бизнес)) КАК ДвиженияОстатки
	                       |ГДЕ
	                       |	ВЫБОР
	                       |			КОГДА &ФильтрПоСтатьям
	                       |				ТОГДА ДвиженияОстатки.СтатьяДвижения В ИЕРАРХИИ (&МассивСтатей)
	                       |		КОНЕЦ
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	ДвиженияОстатки.СтатьяДвижения
	                       |ИТОГИ
	                       |	СУММА(СуммаОстаток)
	                       |ПО
	                       |	СтатьяДвижения";
ИначеЕсли Уровень = 2 Тогда
	ЗапросОстатков.Текст = "ВЫБРАТЬ
	                       |	ДвиженияОстатки.СтатьяДвижения.Родитель КАК СтатьяДвижения,
	                       |	СУММА(ДвиженияОстатки.СуммаОстаток) КАК СуммаОстаток
	                       |ИЗ
	                       |	РегистрНакопления.Движения.Остатки(
	                       |			,
	                       |			Подразделение В ИЕРАРХИИ (&Подразделение)
	                       |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)
	                       |				И СтатьяДвижения.Подразделение В ИЕРАРХИИ (&Бизнес)) КАК ДвиженияОстатки
	                       |ГДЕ
	                       |	ВЫБОР
	                       |			КОГДА &ФильтрПоСтатьям
	                       |				ТОГДА ДвиженияОстатки.СтатьяДвижения В ИЕРАРХИИ (&МассивСтатей)
	                       |		КОНЕЦ
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	ДвиженияОстатки.СтатьяДвижения.Родитель
	                       |ИТОГИ
	                       |	СУММА(СуммаОстаток)
	                       |ПО
	                       |	СтатьяДвижения";
ИначеЕсли Уровень = 1 Тогда
	ЗапросОстатков.Текст = "ВЫБРАТЬ
	                       |	ДвиженияОстатки.СтатьяДвижения.Родитель.Родитель КАК СтатьяДвижения,
	                       |	СУММА(ДвиженияОстатки.СуммаОстаток) КАК СуммаОстаток
	                       |ИЗ
	                       |	РегистрНакопления.Движения.Остатки(
	                       |			,
	                       |			Подразделение В ИЕРАРХИИ (&Подразделение)
	                       |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)
	                       |				И СтатьяДвижения.Подразделение В ИЕРАРХИИ (&Бизнес)) КАК ДвиженияОстатки
	                       |ГДЕ
	                       |	ВЫБОР
	                       |			КОГДА &ФильтрПоСтатьям
	                       |				ТОГДА ДвиженияОстатки.СтатьяДвижения В ИЕРАРХИИ (&МассивСтатей)
	                       |		КОНЕЦ
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	ДвиженияОстатки.СтатьяДвижения.Родитель.Родитель
	                       |ИТОГИ
	                       |	СУММА(СуммаОстаток)
	                       |ПО
	                       |	СтатьяДвижения";
ИначеЕсли Уровень = 0 Тогда
	ЗапросОстатков.Текст = "ВЫБРАТЬ
	                       |	ДвиженияОстатки.СтатьяДвижения.Родитель.Родитель.Родитель КАК СтатьяДвижения,
	                       |	СУММА(ДвиженияОстатки.СуммаОстаток) КАК СуммаОстаток
	                       |ИЗ
	                       |	РегистрНакопления.Движения.Остатки(
	                       |			,
	                       |			Подразделение В ИЕРАРХИИ (&Подразделение)
	                       |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)
	                       |				И СтатьяДвижения.Подразделение В ИЕРАРХИИ (&Бизнес)) КАК ДвиженияОстатки
	                       |ГДЕ
	                       |	ВЫБОР
	                       |			КОГДА &ФильтрПоСтатьям
	                       |				ТОГДА ДвиженияОстатки.СтатьяДвижения В ИЕРАРХИИ (&МассивСтатей)
	                       |		КОНЕЦ
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	ДвиженияОстатки.СтатьяДвижения.Родитель.Родитель.Родитель
	                       |ИТОГИ
	                       |	СУММА(СуммаОстаток)
	                       |ПО
	                       |	СтатьяДвижения";
КонецЕсли;
	ЗапросОстатков.УстановитьПараметр("Подразделение",Подразделение);
	ЗапросОстатков.УстановитьПараметр("Папка",?(Папка <> неопределено,Папка,Справочники.СтатьиДвижения.ПустаяСсылка()));
	ЗапросОстатков.УстановитьПараметр("Бизнес", Бизнесы);
	Если МассивСтатей.Количество()>0 Тогда
		ЗапросОстатков.УстановитьПараметр("ФильтрПоСтатьям", Истина);	
	Иначе
		ЗапросОстатков.УстановитьПараметр("ФильтрПоСтатьям", Ложь);
	КонецЕсли;
	СтатьиДвижения = ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей);

	ЗапросОстатков.УстановитьПараметр("МассивСтатей", СтатьиДвижения);

	ТекущиеОстаткиПоПапкам.Очистить();
	//СерияОстатокПлюс =ТекущиеОстаткиПоПапкам.УстановитьСерию(ДанныеПотока.СуммаОстаток);
	//СерияОстатокПлюс.Цвет = WebЦвета.Бирюзовый;
	СерияОстатокПлюс =ТекущиеОстаткиПоПапкам.УстановитьСерию("ОстатокПоложительный");
	СерияОстатокПлюс.Цвет = WebЦвета.Розовый;
	
	ДанныеПотока=ЗапросОстатков.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ДанныеПотока.Следующий() Цикл
		
		//ТочкаДата.Текст	= ДанныеПотока.СтатьяДвижения;//?(ПоДням,Формат(ДанныеПотока.Период,"ДФ=dd.MM.yy"),Формат(ДанныеПотока.СтатьяДвижения,"ДФ='MMMM yy'"));
		//Если ДанныеПотока.СуммаОстаток < 0 тогда
		//ТочкаДата = ТекущиеОстаткиПоПапкам.УстановитьТочку(ДанныеПотока.СтатьяДвижения);
		//ТекущиеОстаткиПоПапкам.УстановитьЗначение(ТочкаДата, СерияОстатокМинус, ДанныеПотока.СуммаОстаток, ,Формат(ДанныеПотока.СуммаОстаток,"ЧДЦ=2"));
		//КонецЕсли;
		 
		//Если ДанныеПотока.СуммаОстаток> 0 Тогда
		//СерияОстатокПлюс =ТекущиеОстаткиПоПапкам.УстановитьСерию(ДанныеПотока.СуммаОстаток);
		ТочкаДата = ТекущиеОстаткиПоПапкам.УстановитьТочку(ДанныеПотока.СтатьяДвижения);
		ТочкаДата.Текст = СокрЛП(СтрЗаменить(Строка(ДанныеПотока.СтатьяДвижения)," ",""))+": "+ Строка(ДанныеПотока.СуммаОстаток);
		ТекущиеОстаткиПоПапкам.УстановитьЗначение(ТочкаДата,СерияОстатокПлюс, ДанныеПотока.СуммаОстаток, ,Формат(ДанныеПотока.СуммаОстаток,"ЧДЦ=2"));
		ТекущиеОстаткиПоПапкам.ОтображатьЛегенду = Ложь;
		
		//КонецЕсли;
	//	Если ДанныеПотока.СуммаОстаток< 0 Тогда СерияОстаток.Цвет = WebЦвета.Красный КонецЕсли;
	//	Если ДанныеПотока.СуммаОстаток> 0 Тогда СерияОстаток.Цвет = WebЦвета.ЗеленаяЛужайка КонецЕсли;
		//ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияРасход, ДанныеПотока.СуммаРасход, ,Формат(ДанныеПотока.СуммаРасход,"ЧДЦ=2"));
		//ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияПоток, ДанныеПотока.СуммаКонечныйОстаток, ,Формат(ДанныеПотока.СуммаКонечныйОстаток,"ЧДЦ=2"));
	КонецЦикла;
	
	ТекущиеОстаткиПоПапкам.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиПоМесяцам(Подразделение,Папка=Неопределено,Уровень = 3)
	ЗапросОстатков = Новый Запрос("ВЫБРАТЬ
	                              |	НАЧАЛОПЕРИОДА(Дни.Период, МЕСЯЦ) КАК Период,
	                              |	СУММА(ВЫБОР
	                              |			КОГДА Движения.Период = &ДатаНачала
	                              |				ТОГДА Движения.СуммаКонечныйОстаток
	                              |			ИНАЧЕ ВЫБОР
	                              |					КОГДА Движения.Период <= Дни.Период
	                              |						ТОГДА Движения.СуммаКонечныйОстаток
	                              |					ИНАЧЕ 0
	                              |				КОНЕЦ
	                              |		КОНЕЦ) КАК Сумма
	                              |ИЗ
	                              |	РегистрНакопления.Движения.ОстаткиИОбороты(
	                              |			&ДатаНачала,
	                              |			&ДатаОкончания,
	                              |			День,
	                              |			,
	                              |			Подразделение В ИЕРАРХИИ (&Подразделение)
	                              |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)) КАК Движения,
	                              |	(ВЫБРАТЬ
	                              |		НАЧАЛОПЕРИОДА(КурсыВалют.Период, МЕСЯЦ) КАК Период
	                              |	ИЗ
	                              |		РегистрСведений.КурсыВалют КАК КурсыВалют
	                              |	ГДЕ
	                              |		КурсыВалют.Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК Дни
	                              |
	                              |СГРУППИРОВАТЬ ПО
	                              |	НАЧАЛОПЕРИОДА(Дни.Период, МЕСЯЦ)
	                              |
	                              |УПОРЯДОЧИТЬ ПО
	                              |	Период");
	ЗапросОстатков.УстановитьПараметр("Подразделение",Подразделение);
	ЗапросОстатков.УстановитьПараметр("Папка",?(Папка <> неопределено,Папка,Справочники.СтатьиДвижения.ПустаяСсылка()));
	ЗапросОстатков.УстановитьПараметр("ДатаНачала",ТекПериод.ДатаНачала);
	ЗапросОстатков.УстановитьПараметр("ДатаОкончания",ТекПериод.ДатаОкончания);
	ОстаткиПоМеяцам.Очистить();
	СерияОстатокПлюс =ОстаткиПоМеяцам.УстановитьСерию("ОстатокПоложительный");
	СерияОстатокПлюс.Цвет = WebЦвета.Лимонный;
	//СерияОстатокМинус =ТекущиеОстаткиПоПапкам.УстановитьСерию("ОстатокОтризательный");
	//СерияОстатокМинус.Цвет = WebЦвета.Розовый;
	
	ДанныеПотока=ЗапросОстатков.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ДанныеПотока.Следующий() Цикл
		
		//ТочкаДата.Текст	= ДанныеПотока.СтатьяДвижения;//?(ПоДням,Формат(ДанныеПотока.Период,"ДФ=dd.MM.yy"),Формат(ДанныеПотока.СтатьяДвижения,"ДФ='MMMM yy'"));
		//Если ДанныеПотока.СуммаОстаток < 0 тогда
		//ТочкаДата = ТекущиеОстаткиПоПапкам.УстановитьТочку(ДанныеПотока.СтатьяДвижения);
		//ТекущиеОстаткиПоПапкам.УстановитьЗначение(ТочкаДата, СерияОстатокМинус, ДанныеПотока.СуммаОстаток, ,Формат(ДанныеПотока.СуммаОстаток,"ЧДЦ=2"));
		//КонецЕсли;
		 
		//Если ДанныеПотока.СуммаОстаток> 0 Тогда 
		ТочкаДата = ОстаткиПоМеяцам.УстановитьТочку(ДанныеПотока.Период);
		ТочкаДата.Текст = Строка(Формат(ДанныеПотока.Период,"ДЛФ=ММММ"))+": " + Строка(Формат(ДанныеПотока.Сумма,"ЧДЦ=2"));
		ОстаткиПоМеяцам.УстановитьЗначение(ТочкаДата, СерияОстатокПлюс, ДанныеПотока.Сумма, ,Формат(ДанныеПотока.Сумма,"ЧДЦ=2"));
		ОстаткиПоМеяцам.ОтображатьЛегенду = Ложь;
		//КонецЕсли;
	//	Если ДанныеПотока.СуммаОстаток< 0 Тогда СерияОстаток.Цвет = WebЦвета.Красный КонецЕсли;
	//	Если ДанныеПотока.СуммаОстаток> 0 Тогда СерияОстаток.Цвет = WebЦвета.ЗеленаяЛужайка КонецЕсли;
		//ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияРасход, ДанныеПотока.СуммаРасход, ,Формат(ДанныеПотока.СуммаРасход,"ЧДЦ=2"));
		//ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияПоток, ДанныеПотока.СуммаКонечныйОстаток, ,Формат(ДанныеПотока.СуммаКонечныйОстаток,"ЧДЦ=2"));
	КонецЦикла;
	
	ОстаткиПоМеяцам.Обновление = Истина;
КонецПроцедуры


&НаСервере
Процедура ОбновитьЧистыйДенежныйПоток(Подразделение,Папка=Неопределено)
		Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	Подразделения.Ссылка КАК Подразделение,
	             |	ДвиженияОстаткиИОбороты.Период КАК Период,
	             |	СУММА(ДвиженияОстаткиИОбороты.СуммаОборот) КАК СуммаОборот,
	             |	СУММА(ДвиженияОстаткиИОбороты.СуммаПриход) КАК СуммаПриход,
	             |	СУММА(ДвиженияОстаткиИОбороты.СуммаРасход * -1) КАК СуммаРасход,
	             |	СУММА(ДвиженияОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
				 |  ДвиженияОстаткиИОбороты.СтатьяДвижения КАК СтатьяДвижения,
	             |	СУММА(ДвиженияОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
	             |ИЗ
	             |	Справочник.Подразделения КАК Подразделения";
	Если Месяц(текПериод.ДатаНачала)=Месяц(текПериод.ДатаОкончания) тогда
		Если ЗначениеЗаполнено(Папка) Тогда
			
		Запрос.Текст=Запрос.Текст+"			 
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Движения.ОстаткиИОбороты(&ДатаН, &ДатаК, Месяц, , СтатьяДвижения В ИЕРАРХИИ &Папка)) КАК ДвиженияОстаткиИОбороты";
		ПоДням=Истина;
		Иначе
		Запрос.Текст=Запрос.Текст+"			 
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Движения.ОстаткиИОбороты(&ДатаН, &ДатаК, Месяц, , СтатьяДвижения В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.СтатьиДвижения.ДенежныеСредства))) КАК ДвиженияОстаткиИОбороты";
		ПоДням=Истина;
		КонецЕсли;
	Иначе				 
		Запрос.Текст=Запрос.Текст+"			 
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Движения.ОстаткиИОбороты(&ДатаН, &ДатаК, Месяц, , СтатьяДвижения В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.СтатьиДвижения.ДенежныеСредства))) КАК ДвиженияОстаткиИОбороты";
		ПоДням=Ложь;
	КонецЕсли;
	Запрос.Текст=Запрос.Текст+"			 
	             |		ПО ДвиженияОстаткиИОбороты.ПодразделениеКудаОткуда = Подразделения.Ссылка
	             |ГДЕ
	             |	Подразделения.ПометкаУдаления = ЛОЖЬ";
	//Если НЕ (Подразделение=Неопределено ИЛИ Подразделение=Справочники.Подразделения.ПустаяСсылка()) тогда
		Запрос.Текст=Запрос.Текст+"			 
	             |	И Подразделения.Ссылка В ИЕРАРХИИ(&Подразделение)";
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
	//КонецЕсли;
	Запрос.Текст=Запрос.Текст+"			 
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ДвиженияОстаткиИОбороты.Период,
				 |  ДвиженияОстаткиИОбороты.СтатьяДвижения,
	             |	Подразделения.Ссылка
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	СтатьяДвижения
	             |ИТОГИ
	             |	СУММА(СуммаОборот),
	             |	СУММА(СуммаПриход),
	             |	СУММА(СуммаРасход),
	             |	СУММА(СуммаНачальныйОстаток),
	             |	СУММА(СуммаКонечныйОстаток)
	             |ПО
	             |	СтатьяДвижения Только ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("ДатаН",текПериод.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаК",текПериод.ДатаОкончания);
	
	ЧистыйДенежныйПоток.Очистить();
	ЧистыйДенежныйПоток.РежимПолупрозрачности=РежимПолупрозрачностиДиаграммы.Использовать;
	ЧистыйДенежныйПоток.ПроцентПолупрозрачности=80;
	ЧистыйДенежныйПоток.ТипДиаграммы=ТипДиаграммы.Гистограмма;
	ЧистыйДенежныйПоток.Анимация=АнимацияДиаграммы.НеИспользовать;
	ЧистыйДенежныйПоток.ОтображатьЛегенду=Истина;
	ЧистыйДенежныйПоток.Обновление=Ложь;
	СерияПриход=ЧистыйДенежныйПоток.УстановитьСерию("Приход");
	СерияПриход.Цвет=WebЦвета.БледноЛиловый;
	//СерияПриход.Цвет=WebЦвета.НейтральноПурпурный;
	СерияРасход=ЧистыйДенежныйПоток.УстановитьСерию("Расход");
	СерияРасход.Цвет=WebЦвета.БледноСиреневый;
	//СерияРасход.Цвет=WebЦвета.Сливовый;
	СерияПоток=ЧистыйДенежныйПоток.УстановитьСерию("Поток");
	СерияПоток.Индикатор=Истина;
	СерияПоток.Маркер=ТипМаркераДиаграммы.Квадрат;
	СерияПоток.Линия=Новый Линия(ТипЛинииДиаграммы.Сплошная,2);
	СерияПоток.Цвет=WebЦвета.Красный;
	
	ДанныеПотока=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ДанныеПотока.Следующий() Цикл
		ТочкаДата = ЧистыйДенежныйПоток.УстановитьТочку(ДанныеПотока.СтатьяДвижения);
		ТочкаДата.Текст	= ДанныеПотока.СтатьяДвижения;//?(ПоДням,Формат(ДанныеПотока.Период,"ДФ=dd.MM.yy"),Формат(ДанныеПотока.СтатьяДвижения,"ДФ='MMMM yy'"));
		
		ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияПриход, ДанныеПотока.СуммаПриход, ,Формат(ДанныеПотока.СуммаПриход,"ЧДЦ=2"));
		ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияРасход, ДанныеПотока.СуммаРасход, ,Формат(ДанныеПотока.СуммаРасход,"ЧДЦ=2"));
		ЧистыйДенежныйПоток.УстановитьЗначение(ТочкаДата, СерияПоток, ДанныеПотока.СуммаКонечныйОстаток, ,Формат(ДанныеПотока.СуммаКонечныйОстаток,"ЧДЦ=2"));
	КонецЦикла;
	ЧистыйДенежныйПоток.Обновление=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПапкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	МаксимальныйУровень  = ПроверитьКоличествоУровней(Элементы.Папки.ТекущиеДанные.Папка,0);
	СоздатьСписокВыбора(МаксимальныйУровень);
//	Элементы.Уровни.ТекстРедактирования = МаксимальныйУровень;
	ОбновитьТекущиеОстатки(ЭтотОбъект.Подразделение,Элемент.ТекущиеДанные.Папка,МаксимальныйУровень); 
	ОбновитьОстаткиПоМесяцам(ЭтотОбъект.Подразделение,Элемент.ТекущиеДанные.Папка);
	ОбновитьДанныеРасшифровки(ЭтотОбъект.Подразделение,Элемент.ТекущиеДанные.Папка,МаксимальныйУровень);
	УстановитьЗаголовки(ЭтотОбъект.Подразделение,Элемент.ТекущиеДанные.Папка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеРасшифровки(Подразделение,Папка,Уровень=3)
	МассивПодразделений = Новый Массив;
	Для Каждого Строка из ПараметрыСеанса.ТекущийПользователь.СписокПодразделений Цикл
		МассивПодразделений.Добавить(Строка.Подразделение);	
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", МассивПодразделений);
	//ЭлементИсключение = ПараметрыСеанса.ТекущийПользователь.Подразделение.Родитель;
	//Запрос.УстановитьПараметр("ЭлементИсключение", ЭлементИсключение); 
	Запрос.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Родитель КАК Родитель,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&Подразделение)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Родитель,
	                    |	Подразделения.Ссылка,
	                    |	Подразделения.ВерсияДанных,
	                    |	Подразделения.ПометкаУдаления,
	                    |	Подразделения.Код,
	                    |	Подразделения.Наименование,
	                    |	Подразделения.кодБаланс,
	                    |	Подразделения.Остаток,
	                    |	Подразделения.Предопределенный,
	                    |	Подразделения.ИмяПредопределенныхДанных";
	Бизнесы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");//.Выгрузить();
	ДанныеРасшифровки.Параметры.УстановитьЗначениеПараметра("Бизнес",Бизнесы);
	ДанныеРасшифровки.Параметры.УстановитьЗначениеПараметра("Подразделение",Подразделение);
	ДанныеРасшифровки.Параметры.УстановитьЗначениеПараметра("Папка",Папка);
	Элементы.ДанныеРасшифровки.Обновить();
//	ЗапросРасшифровки = Новый Запрос();
//	ЗапросРасшифровки.Текст = "ВЫБРАТЬ
//	                          |	ДвиженияОстаткиИОбороты.СтатьяДвижения КАК Папка,
//	                          |	ДвиженияОстаткиИОбороты.Подразделение КАК Подразделение,
//	                          |	СУММА(ДвиженияОстаткиИОбороты.СуммаПриход) КАК Приход,
//	                          |	СУММА(ДвиженияОстаткиИОбороты.СуммаРасход) КАК Расход,
//	                          |	ДвиженияОстаткиИОбороты.ПериодСекунда КАК Период,
//	                          |	ДвиженияОстаткиИОбороты.Регистратор КАК Документ,
//	                          |	ДвиженияОстаткиИОбороты.СтатьяДвиженияКудаОткуда КАК ПапкаОткуда,
//	                          |	ДвиженияОстаткиИОбороты.ПодразделениеКудаОткуда КАК ПодразделениеОткуда,
//	                          |	ДвиженияОстаткиИОбороты.Регистратор.Ответственный КАК Ответственный,
//	                          |	СРЕДНЕЕ(ДвиженияОстаткиИОбороты.Регистратор.Сумма) КАК Сумма
//	                          |ПОМЕСТИТЬ ВТ1
//	                          |ИЗ
//	                          |	РегистрНакопления.Движения.ОстаткиИОбороты(
//	                          |			&ДатаНачала,
//	                          |			&ДатаОкончания,
//	                          |			Авто,
//	                          |			,
//	                          |			Подразделение В ИЕРАРХИИ (&Подразделение)
//	                          |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)) КАК ДвиженияОстаткиИОбороты
//	                          |
//	                          |СГРУППИРОВАТЬ ПО
//	                          |	ДвиженияОстаткиИОбороты.СтатьяДвижения,
//	                          |	ДвиженияОстаткиИОбороты.Подразделение,
//	                          |	ДвиженияОстаткиИОбороты.ПериодСекунда,
//	                          |	ДвиженияОстаткиИОбороты.Регистратор,
//	                          |	ДвиженияОстаткиИОбороты.СтатьяДвиженияКудаОткуда,
//	                          |	ДвиженияОстаткиИОбороты.ПодразделениеКудаОткуда,
//	                          |	ДвиженияОстаткиИОбороты.Регистратор.Ответственный
//	                          |;
//	                          |
//	                          |////////////////////////////////////////////////////////////////////////////////
//	                          |ВЫБРАТЬ
//	                          |	ВТ1.Папка,
//	                          |	ВТ1.Подразделение,
//	                          |	ВТ1.Приход,
//	                          |	ВТ1.Расход,
//	                          |	ВТ1.Период,
//	                          |	ВТ1.Документ,
//	                          |	ВТ1.ПапкаОткуда,
//	                          |	ВТ1.ПодразделениеОткуда,
//	                          |	ВТ1.Ответственный,
//	                          |	ВТ1.Сумма
//	                          |ИЗ
//	                          |	ВТ1 КАК ВТ1";
//ЗапросРасшифровки.УстановитьПараметр("Подразделение",Подразделение);
//ЗапросРасшифровки.УстановитьПараметр("Папка",?(Папка <> неопределено,Папка,Справочники.СтатьиДвижения.ПустаяСсылка()));
//ЗапросРасшифровки.УстановитьПараметр("ДатаНачала",ТекПериод.ДатаНачала);
//ЗапросРасшифровки.УстановитьПараметр("ДатаОкончания",ТекПериод.ДатаОкончания);
//ТабличнаяЧасть.Очистить();
//ВыборкаРасшифровки = ЗапросРасшифровки.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
//Пока ВыборкаРасшифровки.Следующий() Цикл
//	НоваяСтрока = ТабличнаяЧасть.Добавить();
//	ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаРасшифровки);
//	Если ВыборкаРасшифровки.Расход > 0 Тогда
//		НоваяСтрока.Куда = Строка(ВыборкаРасшифровки.ПодразделениеОткуда) +"\"+ СформироватьНаименование(ВыборкаРасшифровки.ПапкаОткуда,"");
//		НоваяСтрока.Откуда = Строка(ВыборкаРасшифровки.Подразделение) +"\"+ СформироватьНаименование(ВыборкаРасшифровки.Папка,"");
//	ИначеЕсли ВыборкаРасшифровки.Приход > 0 Тогда 
//		НоваяСтрока.Куда = Строка(ВыборкаРасшифровки.Подразделение) +"\"+ СформироватьНаименование(ВыборкаРасшифровки.папка,"");
//		НоваяСтрока.Откуда = Строка(ВыборкаРасшифровки.ПодразделениеОткуда) +"\"+ СформироватьНаименование(ВыборкаРасшифровки.ПапкаОткуда,"");
//	КонецЕсли;	
//КонецЦикла;

КонецПроцедуры

&НаСервере
Функция СформироватьНаименование(ПапкаКудаОткуда,Наименование)
	Наименование = Строка(ПапкаКудаОткуда) +"\"+Наименование;
	Если ЗначениеЗаполнено(ПапкаКудаОткуда.Родитель) Тогда
		СформироватьНаименование(ПапкаКудаОткуда.Родитель,Наименование);
	КонецЕсли;
	Возврат СтрЗаменить(СокрЛП(Наименование)," ","");
КонецФункции



&НаСервере 
Функция ПроверитьКоличествоУровней(Папка,Уровень)
	Если ЗначениеЗаполнено(Папка) Тогда
		Уровень = Уровень+1;
		Попытка
		ПроверитьКоличествоУровней(Папка.Родитель,Уровень);
	Исключение
		КонецПопытки;
	КонецЕсли;
	Возврат Уровень;
КонецФункции
&НаКлиенте
Процедура ТекПериодНажатие(Элемент, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;	
 Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = текПериод;
	ОповещениеОЗакрытииДиалогаПериода=Новый ОписаниеОповещения("ЗакрытиеДиалогаВыбораПериода",ЭтаФорма);
	Диалог.Показать(ОповещениеОЗакрытииДиалогаПериода);
КонецПроцедуры
	 
	 &НаКлиенте
Процедура ВыбратьТекущийПериод(Команда)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеДиалогаВыбораПериода(Период,ДополнительныеПараметры) Экспорт
	Если НЕ Период=Неопределено Тогда 
	    ТекПериод = Период;
		ОбновитьТекущиеОстатки(ЭтотОбъект.Подразделение,Элементы.Папки.ТекущаяСтрока,Уровни);
		ОбновитьОстаткиПоМесяцам(ЭтотОбъект.Подразделение,Элементы.Папки.ТекущаяСтрока);
		ОбновитьДанныеРасшифровки(ЭтотОбъект.Подразделение,Элементы.Папки.ТекущаяСтрока,Уровни);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовки(Подразделение,Папка)
	 ЗапросСальдо = Новый Запрос("ВЫБРАТЬ
	                             |	СУММА(ДвиженияОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	                             |	ДвиженияОстаткиИОбороты.СуммаПриход,
	                             |	ДвиженияОстаткиИОбороты.СуммаРасход,
	                             |	ДвиженияОстаткиИОбороты.СуммаНачальныйОстаток + ДвиженияОстаткиИОбороты.СуммаПриход - ДвиженияОстаткиИОбороты.СуммаРасход КАК  Взято
	                             |ИЗ
	                             |	РегистрНакопления.Движения.ОстаткиИОбороты(
	                             |			&ДатаНачала,
	                             |			&ДатаОкончания,
	                             |			,
	                             |			,
	                             |			Подразделение В ИЕРАРХИИ (&Подразделение)
	                             |				И СтатьяДвижения В ИЕРАРХИИ (&Папка)) КАК ДвиженияОстаткиИОбороты
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	ДвиженияОстаткиИОбороты.СуммаПриход,
	                             |	ДвиженияОстаткиИОбороты.СуммаРасход,
	                             |	ДвиженияОстаткиИОбороты.СуммаНачальныйОстаток + ДвиженияОстаткиИОбороты.СуммаПриход - ДвиженияОстаткиИОбороты.СуммаРасход");
	ЗапросСальдо.УстановитьПараметр("Подразделение",Подразделение);
	ЗапросСальдо.УстановитьПараметр("Папка",Папка);
	ЗапросСальдо.УстановитьПараметр("ДатаНачала",ТекПериод.ДатаНачала);
	ЗапросСальдо.УстановитьПараметр("ДатаОкончания",ТекПериод.ДатаОкончания);
	Выборка = ЗапросСальдо.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Элементы.ТекущиеОстаткиПоПапкам.Заголовок = "Начальный остаток: " + Выборка.СуммаНачальныйОстаток + " + " + Выборка.суммаПриход + " - " + Выборка.СуммаРасход + " Взято: " + Выборка.Взято 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПоказатьЛегендуНажатие(Элемент)
	ТекущиеОстаткиПоПапкам.ОтображатьЛегенду 	= Истина;
	Элементы.ДекорацияПоказатьЛегенду.Видимость = Ложь;
	Элементы.ДекорацияСкрытьЛегенду.Видимость 	= Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСкрытьЛегендуНажатие(Элемент)
	ТекущиеОстаткиПоПапкам.ОтображатьЛегенду 	= Ложь;
	Элементы.ДекорацияПоказатьЛегенду.Видимость = Истина;
	Элементы.ДекорацияСкрытьЛегенду.Видимость 	= Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеОстаткиПоПапкамОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	ТекущиеОстаткиПоПапкамОбработкаРасшифровкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТекущиеОстаткиПоПапкамОбработкаРасшифровкиНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УровниПриИзменении(Элемент)
	ОбновитьТекущиеОстатки(ЭтотОбъект.Подразделение,Элементы.Папки.ТекущиеДанные.Папка,Уровни);
	ОбновитьДанныеРасшифровки(ЭтотОбъект.Подразделение,Элементы.Папки.ТекущиеДанные.Папка,Уровни);
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ссылка",ДанныеВыбора);
	форма = ПолучитьФорму("Документ.Движения.Форма.ФормаДокумента",ПараметрыОтбора);
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Ключ",Элемент.ТекущиеДанные.Документ);
	Форма = ПолучитьФорму("Документ.Движения.Форма.ФормаДокумента",ПараметрыОтбора);
	Форма.Открыть();
КонецПроцедуры
