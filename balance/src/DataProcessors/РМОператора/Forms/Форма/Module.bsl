
&НаКлиенте
Процедура КомандаКнопки()
	П = Новый Структура("КодКнопки,ТекущееПодразделение", Прав(ТекущийЭлемент.Имя,9),ТекущееПодразделение);
	ОткрытьФорму("Обработка.РМОператора.Форма.ФормаСозданияДвижения",П);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//РежимСписка=1;
	//ТекущееПодразделение=УправлениеДоступомОформлением.ПодразделениеПользователя();
	//СформироватьКнопки();
	////Элементы.Стр_кнопки.ТекущаяСтраница=Элементы.ГруппаСписокДокументов;
	//УстановитьОтбор();
КонецПроцедуры

&НаСервере
Процедура ОчиститьКнопки(текЭлемент)
	Если ТипЗнч(текЭлемент)=Тип("ГруппаФормы") тогда
		Для Каждого текЭл из текЭлемент.ПодчиненныеЭлементы Цикл
			ОчиститьКнопки(текЭл);
		КонецЦикла;
	КонецЕсли;
	ЭтаФорма.Элементы.Удалить(текЭлемент);
КонецПроцедуры	
	
&НаСервере
Процедура СформироватьКнопки()
	Если ТекущееПодразделение.Пустая() тогда 
		Элементы.ВыборПодразделение.Заголовок="Выбор бизнеса/подразделения";
	Иначе
		Элементы.ВыборПодразделение.Заголовок="";
		РаботаСДаннымиСервер.ПолныйПутьСсылки(ТекущееПодразделение,Элементы.ВыборПодразделение.Заголовок);
	КонецЕсли;
	Удаляемые = Новый Массив;
	Для Каждого текЭлемент из Элементы.Стр_кнопки.ПодчиненныеЭлементы Цикл
		Если НЕ текЭлемент=Элементы.ГруппаСписокДокументов тогда
//			ОчиститьКнопки(текЭлемент);
			Удаляемые.Добавить(текЭлемент);
		КонецЕсли;
	КонецЦикла;
	Для каждого текЭлемент из Удаляемые Цикл
		Элементы.Удалить(текЭлемент);
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Шаблоны.Ссылка
	|ИЗ
	|	Справочник.Шаблоны КАК Шаблоны
	|ГДЕ
	|	НЕ Шаблоны.ПометкаУдаления
	|	И Шаблоны.ЭтоГруппа
	|	И Шаблоны.Родитель = ЗНАЧЕНИЕ(Справочник.Шаблоны.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Шаблоны.Ссылка
	|ИЗ
	|	Справочник.Шаблоны КАК Шаблоны
	|ГДЕ
	|	НЕ Шаблоны.ПометкаУдаления
	|	И Шаблоны.ЭтоГруппа
	|	И НЕ Шаблоны.Родитель = ЗНАЧЕНИЕ(Справочник.Шаблоны.ПустаяСсылка)";
	
	РезультатЗапросаГруппы = Запрос.Выполнить().Выгрузить();
	текШрифтЗаголовка=Новый Шрифт(,10);
	Для Каждого СтрГруппа из РезультатЗапросаГруппы цикл
		Если УправлениеДоступомОформлением.ДоступнаГруппаБД(СтрГруппа.Ссылка,ТекущееПодразделение) тогда
			НазваниеГруппы = Строка(СтрГруппа.Ссылка);
			Если НЕ СтрГруппа.Ссылка.Родитель=Справочники.Шаблоны.ПустаяСсылка() тогда
				ЭлементГруппы = ЭтаФорма.Элементы.Добавить("Гр"+Строка(СтрГруппа.Ссылка.Код), Тип("ГруппаФормы"), Элементы["Гр"+Строка(СтрГруппа.Ссылка.Родитель.Код)]);
				ЭлементГруппы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементГруппы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				ЭлементГруппы.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
				ЭлементГруппы.ОтображатьЗаголовок=Истина;
				//ЭлементГруппы.ШрифтЗаголовка=текШрифтЗаголовка;
				ЭлементГруппы.Заголовок = НазваниеГруппы;
			Иначе
				ЭлементГруппы = ЭтаФорма.Элементы.Добавить("Гр"+Строка(СтрГруппа.Ссылка.Код), Тип("ГруппаФормы"), Элементы.Стр_кнопки);
				ЭлементГруппы.Вид = ВидГруппыФормы.Страница;
				ЭлементГруппы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
				ЭлементГруппы.ОтображатьЗаголовок = Истина;
				ЭлементГруппы.Заголовок = НазваниеГруппы;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Группа",СтрГруппа.Ссылка);
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Шаблоны.Ссылка,
			|	Шаблоны.Код,
			|	Шаблоны.Родитель,
			|	Шаблоны.Описание
			|ИЗ
			|	Справочник.Шаблоны КАК Шаблоны
			|ГДЕ
			|	НЕ Шаблоны.ПометкаУдаления
			|	И Шаблоны.Родитель = &Группа
			|	И Шаблоны.ЭтоГруппа = ЛОЖЬ";
			
			РезультатЗапросаКнопки = Запрос.Выполнить().Выгрузить();
			
			Для Каждого СтрКнопка из РезультатЗапросаКнопки цикл
				Если УправлениеДоступомОформлением.ДоступнаКнопкаБД(СтрКнопка.Ссылка,ТекущееПодразделение) тогда
					НазваниеКнопки = Строка(СтрКнопка.Ссылка);
					//Добавляем форме команду
					Кмд=ЭтаФорма.Команды.Найти("Кн"+Строка(СтрКнопка.Код));
					Если Кмд=Неопределено тогда
						Кмд = ЭтаФорма.Команды.Добавить("Кн"+Строка(СтрКнопка.Код));
					КонецЕсли;
					Кмд.Действие = "КомандаКнопки";
					Кмд.Заголовок = НазваниеКнопки;
					Кмд.Подсказка = ?(СтрКнопка.Описание="",НазваниеКнопки,СтрКнопка.Описание);
					
					//Добавляем саму кнопку
					Элемент = ЭтаФорма.Элементы.Добавить("Кн"+Строка(СтрКнопка.Код), Тип("КнопкаФормы"), ЭлементГруппы);
					Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
					Элемент.Ширина=15;
					//Элемент.Высота=2;
					Элемент.ВысотаЗаголовка=1;
					Элемент.ОтображениеПодсказки=ОтображениеПодсказки.Всплывающая;
					//Элемент.АвтоМаксимальнаяШирина=Ложь;
					//Элемент.МаксимальнаяШирина=15;
					//Элемент.РастягиватьПоГоризонтали=Истина;
					//Элемент.РастягиватьПоВертикали=Истина;
					Элемент.ИмяКоманды = "Кн"+Строка(СтрКнопка.Код);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	//Элементы.ГруппаСписокДокументов.Видимость=НЕ (Элементы.Стр_кнопки.ПодчиненныеЭлементы.Количество()>1);
КонецПроцедуры

&НаКлиенте
Процедура РежимСпискаПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(текГруппа=Неопределено)
	ДокументыДвижения.Отбор.Элементы.Очистить();
	Если текГруппа=Неопределено тогда
		Если РежимСписка=0 тогда
			текОтбор=ДокументыДвижения.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
			текОтбор.ВидСравнения=ПредопределенноеЗначение("ВидСравненияКомпоновкиДанных.НеЗаполнено");
			текОтбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("БыстроеДвижение");
			текОтбор.Представление="Быстрые движения";
			текОтбор.Использование=Истина;
		КонецЕсли;
	Иначе
		текОтбор=ДокументыДвижения.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		текОтбор.ВидСравнения=ПредопределенноеЗначение("ВидСравненияКомпоновкиДанных.ВИерархии");
		текОтбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("БыстроеДвижение");
		текОтбор.Представление="Быстрые движения";
		текОтбор.ПравоеЗначение=текГруппа;
		текОтбор.Использование=Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекущееПодразделение) тогда
		текОтбор=ДокументыДвижения.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		текОтбор.ВидСравнения=ПредопределенноеЗначение("ВидСравненияКомпоновкиДанных.ВИерархии");
		текОтбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ПодразделениеОткуда");
		текОтбор.Представление="Подразделение откуда";
		текОтбор.ПравоеЗначение=ТекущееПодразделение;
		текОтбор.Использование=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГруппировку(Установить=Истина)
	Если Установить тогда
		ДокументыДвижения.Группировка.Элементы.Очистить();
		Элементы.ДокументыДвижения.Отображение=ОтображениеТаблицы.Дерево;
		текГр=ДокументыДвижения.Группировка.Элементы.Добавить(тип("ПолеГруппировкиКомпоновкиДанных"));
		текГр.Поле=Новый ПолеКомпоновкиДанных("БыстроеДвижениеНомер");
		текГр.ТипГруппировки=ПредопределенноеЗначение("ТипГруппировкиКомпоновкиДанных.Элементы");
		текГр.Использование=Истина;
	Иначе
		Для Каждого текГр Из ДокументыДвижения.Группировка.Элементы Цикл
			текГР.Использование=Ложь;
		КонецЦикла;
		Элементы.ДокументыДвижения.Отображение=ОтображениеТаблицы.ИерархическийСписок;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Стр_кнопкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница=Элементы.ГруппаСписокДокументов тогда
		УстановитьПорядокДвижение(Ложь);		
		УстановитьГруппировку(Ложь);
		УстановитьОтбор();
	Иначе
		//УстановитьПорядокДвижение(Истина);
		//УстановитьГруппировку(Истина);
		УстановитьПорядокДвижение(Ложь);
		УстановитьГруппировку(Ложь);
		УстановитьОтбор(РаботаСДаннымиСервер.ПолучитьГруппуБДвижений(ТекущаяСтраница.Заголовок));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПорядокДвижение(Установить=Истина)
	Если Установить тогда
		Для Каждого текПор Из ДокументыДвижения.Порядок.Элементы Цикл
			Если текПор.Поле=Новый ПолеКомпоновкиДанных("БыстроеДвижениеНомер") тогда
				текПор.ТипУпорядочивания=НаправлениеСортировкиКомпоновкиДанных.Убыв;
				текПор.Использование=Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого текПор Из ДокументыДвижения.Порядок.Элементы Цикл
			Если текПор.Поле=Новый ПолеКомпоновкиДанных("БыстроеДвижениеНомер") тогда
				текПор.Использование=Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДокументыДвиженияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элемент.ТекущаяСтрока;
	Если ТипЗнч(ТекСтрока)=Тип("СтрокаГруппировкиДинамическогоСписка") тогда
		СтандартнаяОбработка=Ложь;
		ДокументыБД=РаботаСДаннымиСервер.ПолучитьДокументыПоИмениБДвижения(ТекСтрока);
		Если НЕ ДокументыБД=Неопределено тогда
			ОткрытьФорму("Обработка.РМОператора.Форма.ФормаСозданияДвижения",Новый Структура("СписокДокументов,ТекущееПодразделение",ДокументыБД,ТекущееПодразделение));
		КонецЕсли;
	ИначеЕсли ТипЗнч(ТекСтрока)=Тип("ДокументСсылка.Движения") тогда
		ДокументыБД=РаботаСДаннымиСервер.ПолучитьДокументыПоДвижению(ТекСтрока);
		Если НЕ ДокументыБД=Неопределено тогда
			СтандартнаяОбработка=Ложь;
			ОткрытьФорму("Обработка.РМОператора.Форма.ФормаСозданияДвижения",Новый Структура("СписокДокументов,ТекущееПодразделение",ДокументыБД,ТекущееПодразделение));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВыборПодразделение(Команда)
    Перем НовЗначение;

    Массив = Новый Массив;
    Массив.Добавить(Тип("СправочникСсылка.Подразделения"));

    ОписаниеТиповК = Новый ОписаниеТипов(Массив);
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма);
    ПоказатьВводЗначения(Оповещение, НовЗначение, "Выбор бизнеса", ОписаниеТиповК);
	//Если ВвестиЗначение(НовЗначение, "Выбор подразделения", ОписаниеТиповК) Тогда
	//	ТекущееПодразделение=НовЗначение;
	//	СформироватьКнопки();
	//	Элементы.Стр_кнопки.ТекущаяСтраница=Элементы.ГруппаСписокДокументов;
	//	УстановитьПорядокДвижение(Ложь);		
	//	УстановитьГруппировку(Ложь);
	//	УстановитьОтбор();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначения(ВыбЗнач, Параметры) Экспорт
    Если ВыбЗнач<>Неопределено Тогда
		ТекущееПодразделение=ВыбЗнач;
		СформироватьКнопки();
		Элементы.Стр_кнопки.ТекущаяСтраница=Элементы.ГруппаСписокДокументов;
		УстановитьПорядокДвижение(Ложь);		
		УстановитьГруппировку(Ложь);
		УстановитьОтбор();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПодразделение(Команда)
	ТекущееПодразделение=ПустоеПодразделение();
	СформироватьКнопки();
	Элементы.Стр_кнопки.ТекущаяСтраница=Элементы.ГруппаСписокДокументов;
	УстановитьПорядокДвижение(Ложь);		
	УстановитьГруппировку(Ложь);
	УстановитьОтбор();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустоеПодразделение()
	Возврат Справочники.Подразделения.ПустаяСсылка();
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ДобавленоДвижение" тогда
		Элементы.ДокументыДвижения.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ТекущийЭлементПодразделения = ПараметрыСеанса.ТекущийПользователь.Подразделение;
	

КонецПроцедуры

Функция ПолучитьПолныйСписокСтатей(МассивПодразделений, МассивСтатей)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СтатьиДвижения.Ссылка,
	                |	СтатьиДвижения.Подразделение
	                |ИЗ
	                |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                |ГДЕ
	                |	СтатьиДвижения.Ссылка В ИЕРАРХИИ(&МассивСтатей)";
	Запрос.УстановитьПараметр("МассивСтатей", МассивСтатей);
	РезультатСтатей = Запрос.Выполнить().Выгрузить();     
	
	ЗапросПодразделений = Новый Запрос;
	
	ЗапросПодразделений.Текст =      "ВЫБРАТЬ
	                    |	Подразделения.Ссылка КАК Подразделение
	                    |ИЗ
	                    |	Справочник.Подразделения КАК Подразделения
	                    |ГДЕ
	                    |	Подразделения.Ссылка В ИЕРАРХИИ(&МассивПодразделений)
	                    |
	                    |СГРУППИРОВАТЬ ПО
	                    |	Подразделения.Ссылка";
	МассивПодразделенийСПустымиСтатьями = Новый Массив;
	Для Каждого Строка из МассивПодразделений Цикл
		Совпадений = Ложь;
		
		ЗапросПодразделений.УстановитьПараметр("МассивПодразделений", Строка);
		РезультатПодразделений = ЗапросПодразделений.Выполнить().Выгрузить();
		
		//поиск совпадений
		Для Каждого Подразделение из РезультатПодразделений Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Подразделение", Подразделение.Подразделение);
			РезультатПоиска = РезультатСтатей.НайтиСтроки(Отбор);
			Если РезультатПоиска.Количество()>0 Тогда
				Совпадений = Истина;
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
		Если Совпадений = Ложь Тогда 
			МассивПодразделенийСПустымиСтатьями.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	//Запрос по пустым подразделениям по всем статьям
	//добавляем в массив
	ЗапросПоСтатьям = Новый Запрос;
	ЗапросПоСтатьям.УстановитьПараметр("МассивПодразделенийСПустымиСтатьями", МассивПодразделенийСПустымиСтатьями);
	ЗапросПоСтатьям.Текст = "ВЫБРАТЬ
	                        |	СтатьиДвижения.Ссылка
	                        |ИЗ
	                        |	Справочник.СтатьиДвижения КАК СтатьиДвижения
	                        |ГДЕ
	                        |	СтатьиДвижения.Подразделение В ИЕРАРХИИ(&МассивПодразделенийСПустымиСтатьями)";
	РезультатПоСтатьям = ЗапросПОСтатьям.Выполнить().Выгрузить();
	Для Каждого Строка из РезультатПоСтатьям Цикл
		МассивСтатей.Добавить(Строка.Ссылка);	
	КонецЦикла;
	
	Возврат МассивСтатей;
	
КонецФункции

