
&НаСервере
Процедура СоздатьДубльЭлемента(НазваниеЭлемента, ЗаголовокЭлемента, НазваниеРеквизита, Группа, МассивТипов, ТаблицЗначений)
	НовЭлемент = ЭтаФорма.Элементы.Добавить(НазваниеЭлемента+"Доп", Тип("ПолеФормы"), Группа);
	НовЭлемент.Заголовок = ЗаголовокЭлемента; 
	НовЭлемент.ПутьКДанным = НазваниеРеквизита; 
	НовЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	Если Элементы[НазваниеЭлемента].ПараметрыВыбора.Количество() тогда
		НовыйМассив = Новый Массив(Элементы[НазваниеЭлемента].ПараметрыВыбора);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		НовЭлемент.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;
	//Если Лев(НазваниеЭлемента,20)="СтатьяДвиженияОткуда" тогда
	//	НовЭлемент.УстановитьДействие("ПриИзменении","ПриИзмененииСтатьи");
	//ИначеЕсли Лев(НазваниеЭлемента,18)="СтатьяДвиженияКуда" тогда
	//	НовЭлемент.УстановитьДействие("ПриИзменении","ПриИзмененииСтатьиКуда");		
	//КонецЕсли;
	Если Лев(НазваниеЭлемента,14)="СтатьяДвижения" тогда
		НовЭлемент.УстановитьДействие("ПриИзменении","ПриИзмененииСтатьиДоп");		
	КонецЕсли;
	НоваяСтрока = ТаблицЗначений.Добавить();
	НоваяСтрока.НаименованияКолонки = ЗаголовокЭлемента;
	НоваяСтрока.ТипЗначения = МассивТипов;
	НоваяСтрока.НазваниеРеквизита = НазваниеРеквизита;
КонецПроцедуры

&НаСервере
Функция НайтиДокумент(текНом)
	Для каждого текДок из ДокументыДвижения Цикл
		Если текДок.НомерСтраницы=текНом тогда
			Возврат текДок;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция НайтиРеквизит(текИмя)
	МассивРеквизитов=ПолучитьРеквизиты();
	Для каждого текРек из МассивРеквизитов Цикл
		Если текРек.Имя=текИмя тогда
			Возврат текРек;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

&НаСервереБезКонтекста
Функция ВалютаСтатьи(текСтатья)
	Если текСтатья.Валюта.Пустая() тогда
		Возврат РаботаСВалютой.ПолучитьВалютуПоКоду("643");
	Иначе
		Возврат текСтатья.Валюта;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОбновитьЗаголовокСуммы(текСтатья,вхЭлемент,СтатьяОткуда=Неопределено)
	Если Валюты тогда
		Если ТипЗнч(вхЭлемент)=Тип("Строка") тогда
			текЭлемент=Элементы[вхЭлемент];
		Иначе
			текЭлемент=вхЭлемент;
		КонецЕсли;
		текДвижение=НомерДвижения(текЭлемент.Имя,13);
		текВалюта=ВалютаСтатьи(текСтатья);
		Если СтатьяОткуда=Неопределено тогда
			текЭлемент.Заголовок="Сумма, "+текВалюта.Наименование;
			Если текДвижение=1 И НЕ текВалюта=ТекущаяВалюта тогда
				Элементы.Сумма.Заголовок="Сумма, "+текВалюта.Наименование;
				ТекущаяВалюта=текВалюта;
				ОбновитьЗаголовокКурс(текВалюта);
			КонецЕсли;
		Иначе
			Если ВалютаСтатьи(СтатьяОткуда)=текВалюта тогда
				текЭлемент.Видимость=Ложь;
			Иначе
				текЭлемент.Видимость=Истина;
				текЭлемент.Заголовок="Сумма, "+текВалюта.Наименование;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокКурс(текВалюта)
	//Если Валюты тогда
		Элементы.Курс.Заголовок=Формат(РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалюта).Курс,"ЧДЦ=4");
	//КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция НомерДвижения(текИмя,ДлинаБазы=20)
	текНомер=Прав(текИмя,СтрДлина(текИмя)-ДлинаБазы);
	Возврат Число(текНомер);
КонецФункции

&НаСервере
Функция ВернутьСтатью(текИмя)
	Возврат этаформа[(ЭтаФорма.Элементы[текИмя]["ПутьКДанным"])];
КонецФункции

&НаСервереБезКонтекста
Функция ВидДвижения(текКод,текНомер)
	КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(текКод);
	СтрПроводка=КнопкаСсылка.Движения[текНомер-1];
	Возврат Новый Структура("Вид,Значение",СтрПроводка.ВидДвижения,СтрПроводка.ЗначениеДвижения);
КонецФункции

&НаСервере
Функция СвязанныеЭлементы(текЭлемент)
	Результат=Новый Массив;
	КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(этаформа.КодКнопки);
	СЧПроводки = 0;
	Для Каждого СтрПроводка из КнопкаСсылка.Движения цикл
		СЧПроводки=СЧПроводки+1;
		Если ЭтаФорма.Элементы["СтатьяДвиженияКуда"+Строка(СЧПроводки)]["ПутьКДанным"] = ЭтаФорма.Элементы[текЭлемент]["ПутьКДанным"] Тогда
			Результат.Добавить("СтатьяДвиженияКуда"+Строка(СЧПроводки));
		КонецЕсли;
		Если ЭтаФорма.Элементы["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]["ПутьКДанным"] = ЭтаФорма.Элементы[текЭлемент]["ПутьКДанным"] Тогда
			Результат.Добавить("СтатьяДвиженияОткуда"+Строка(СЧПроводки));
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции
			
&НаКлиенте
Процедура ПриИзмененииСтатьиДоп(Элемент)
	Если Валюты тогда
		текЭлементы=СвязанныеЭлементы(Элемент.Имя);
		текСтатья=ВернутьСтатью(Элемент.Имя);
		текВалюта=ВалютаСтатьи(текСтатья);
		текСумма=ПолучитьСуммуВалюты(текВалюта);
		//Добавлено=Ложь;
		Если текСумма=Неопределено тогда
			новКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалюта);
			текСумма=Окр(СуммаРуб/новКурс.Курс*новКурс.Кратность,2);
			ДобавитьСуммуВалюты(текСумма,текВалюта,(Элемент.Имя="СтатьяДвиженияОткуда1" ИЛИ Элемент.Имя="СтатьяДвиженияОткуда1Доп"));
			//Добавлено=Истина;
		КонецЕсли;
		Для Каждого ЭлементИмя из текЭлементы Цикл
			Если Лев(ЭлементИмя,20)="СтатьяДвиженияОткуда" тогда
				текДвижение=НомерДвижения(ЭлементИмя);
				текВидДвиж=ВидДвижения(КодКнопки,текДвижение);
				Если текВидДвиж.Вид = "Из проводки" тогда 
					УстановитьСумму(текДвижение,текСумма);		
				ИначеЕсли текВидДвиж.Вид = "Процентом" тогда
					УстановитьСумму(текДвижение,(текСумма * текВидДвиж.Значение)/100);		
				КонецЕсли;
				ОбновитьЗаголовокСуммы(текСтатья,"СуммаДвижения"+Строка(текДвижение));
				текСтатьяКуда=ВернутьСтатью("СтатьяДвиженияКуда"+Строка(текДвижение));
				ОбновитьЗаголовокСуммы(текСтатьяКуда,"СуммаДвижКуда"+Строка(текДвижение),текСтатья);
				Если текДвижение=1 тогда
					Сумма=текСумма;
				КонецЕсли;
			ИначеЕсли Лев(ЭлементИмя,18)="СтатьяДвиженияКуда" тогда
				текДвижение=НомерДвижения(ЭлементИмя,18);
				текВидДвиж=ВидДвижения(КодКнопки,текДвижение);
				Если текВидДвиж.Вид = "Из проводки" тогда 
					УстановитьСуммуКуда(текДвижение,текСумма);		
				ИначеЕсли текВидДвиж.Вид = "Процентом" тогда
					УстановитьСуммуКуда(текДвижение,(текСумма * текВидДвиж.Значение)/100);		
				КонецЕсли;
				текСтатьяОткуда=ВернутьСтатью("СтатьяДвиженияОткуда"+Строка(текДвижение));
				ОбновитьЗаголовокСуммы(текСтатья,"СуммаДвижКуда"+Строка(текДвижение),текСтатьяОткуда);
			КонецЕсли;
		КонецЦикла;
		//Если Добавлено тогда
			ВалютыСуммы(ВалютыДвижений());
			СформироватьЭлементыСуммы();
			Для Каждого текВал из ВалютыСуммы Цикл
				ОбновитьСуммыДвижений(текВал.ВалютаСумма,текВал.ВалютаСсылка);
			КонецЦикла;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтатьиКуда(Элемент)
	Если Валюты тогда
		//Если Прав(Элемент.Имя,3)="Доп" тогда
		//	ЭлементИмя=Лев(Элемент.Имя,СтрДлина(Элемент.Имя)-3);
		//Иначе
			ЭлементИмя=Элемент.Имя;
		//КонецЕсли;
		текДвижение=НомерДвижения(ЭлементИмя,18);
		текСтатья=ВернутьСтатью(ЭлементИмя);
		текСтатьяОткуда=ВернутьСтатью("СтатьяДвиженияОткуда"+Строка(текДвижение));
		текВалюта=ВалютаСтатьи(текСтатья);
		новКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалюта);
		//текКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,ТекущаяВалюта);
		текСумма=Окр(СуммаРуб/новКурс.Курс*новКурс.Кратность,2);
		текВидДвиж=ВидДвижения(КодКнопки,текДвижение);
		Если текВидДвиж.Вид = "Из проводки" тогда 
			УстановитьСуммуКуда(текДвижение,текСумма);		
		ИначеЕсли текВидДвиж.Вид = "Процентом" тогда
			УстановитьСуммуКуда(текДвижение,(текСумма * текВидДвиж.Значение)/100);		
		КонецЕсли;
		ОбновитьЗаголовокСуммы(текСтатья,"СуммаДвижКуда"+Строка(текДвижение),текСтатьяОткуда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтатьи(Элемент)
	Если Валюты тогда
		//Если Прав(Элемент.Имя,3)="Доп" тогда
		//	ЭлементИмя=Лев(Элемент.Имя,СтрДлина(Элемент.Имя)-3);
		//Иначе
			ЭлементИмя=Элемент.Имя;
		//КонецЕсли;
		текДвижение=НомерДвижения(ЭлементИмя);
		текСтатья=ВернутьСтатью(ЭлементИмя);
		текВалюта=ВалютаСтатьи(текСтатья);
		новКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалюта);
		//текКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,ТекущаяВалюта);
		текСумма=Окр(СуммаРуб/новКурс.Курс*новКурс.Кратность,2);
		текВидДвиж=ВидДвижения(КодКнопки,текДвижение);
		Если текВидДвиж.Вид = "Из проводки" тогда 
			УстановитьСумму(текДвижение,текСумма);		
		ИначеЕсли текВидДвиж.Вид = "Процентом" тогда
			УстановитьСумму(текДвижение,(текСумма * текВидДвиж.Значение)/100);		
		КонецЕсли;
		ОбновитьЗаголовокСуммы(текСтатья,"СуммаДвижения"+Строка(текДвижение));
		текСтатьяКуда=ВернутьСтатью("СтатьяДвиженияКуда"+Строка(текДвижение));
		ОбновитьЗаголовокСуммы(текСтатьяКуда,"СуммаДвижКуда"+Строка(текДвижение),текСтатья);
		Если текДвижение=1 тогда
			Сумма=текСумма;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьСумму(СЧПроводки,текСумма)
	ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = текСумма;
КонецПроцедуры

&НаСервере
Процедура УстановитьСуммуКуда(СЧПроводки,текСумма)
	ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = текСумма;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Валюты=Константы.МультивалютныйУчет.Получить();
	Элементы.Курс.Видимость=Валюты;
	Если Параметры.Свойство("ТекущееПодразделение") тогда
		ТекущееПодразделение=Параметры.ТекущееПодразделение;
	Иначе
		ТекущееПодразделение=ПараметрыСеанса.ПодразделениеПользователя;
	КонецЕсли;
	Если Параметры.Свойство("СписокДокументов") тогда
		КнопкаСсылка = Параметры.СписокДокументов.БД.БД;
		текНомерБыстрогоДвижения=Параметры.СписокДокументов.БД.НомерБД;
		текНомерБДСтрока=Параметры.СписокДокументов.БД.НомерБДСтрока;
		НазваниеКнопки = КнопкаСсылка.Наименование;
		Заголовок = НазваниеКнопки+", "+текНомерБДСтрока;
		Описание = КнопкаСсылка.Описание;
		Если ЗначениеЗаполнено(Описание) тогда
			Элементы.Описание.Видимость = Истина;
		Иначе
			Элементы.Описание.Видимость = Ложь;
		КонецЕсли;
		
		КодКнопки = КнопкаСсылка.Код;
		СЧПроводки = 0;
		Пока СЧПроводки<Параметры.СписокДокументов.ДокСписок.Количество() Цикл
			текДок=ДокументыДвижения.Добавить();
			текДок.НомерСтраницы=СЧПроводки+1;
			текДок.ДокДвижение=Параметры.СписокДокументов.ДокСписок[СЧПроводки];
			ДатаДвижения=Параметры.СписокДокументов.ДокСписок[СЧПроводки].Дата;
			СЧПроводки=СЧПроводки+1;
		КонецЦикла;
		
	Иначе
		ДатаДвижения = ТекущаяДата();
		КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(Параметры.КодКнопки);
		НазваниеКнопки = КнопкаСсылка.Наименование;
		Заголовок = НазваниеКнопки;
		Описание = КнопкаСсылка.Описание;
		Если ЗначениеЗаполнено(Описание) тогда
			Элементы.Описание.Видимость = Истина;
		Иначе
			Элементы.Описание.Видимость = Ложь;
		КонецЕсли;
		
		КодКнопки = КнопкаСсылка.Код;
	КонецЕсли;
	
	СЧПроводки = 0;
	ВозможныйДубль = Неопределено;
	// для убирания дублей по наименованию
	ТаблицЗначений = Новый ТаблицаЗначений;
	МассивТипов = новый Массив;
	ТаблицЗначений.Колонки.Добавить("НаименованияКолонки",Новый ОписаниеТипов("Строка"));
	ТаблицЗначений.Колонки.Добавить("ТипЗначения",);
	ТаблицЗначений.Колонки.Добавить("НазваниеРеквизита",Новый ОписаниеТипов("Строка"));
	//
	
	Для Каждого СтрПроводка из КнопкаСсылка.Движения цикл
		СЧПроводки=СЧПроводки+1;
		текДок=НайтиДокумент(СЧПроводки);
		ЕстьДок=НЕ (текДок=Неопределено);
		//СоздаемГруппуДвижения
		ЭлементГруппыДвижения = ЭтаФорма.Элементы.Добавить("Гр_Движения"+Строка(СЧПроводки), Тип("ГруппаФормы"), Элементы.Гр_всехДвижений);
		ЭлементГруппыДвижения.Вид = ВидГруппыФормы.Страница;
		ЭлементГруппыДвижения.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ЭлементГруппыДвижения.Заголовок = ?(ЕстьДок,Строка(текДок.ДокДвижение),"Движение документа №"+Строка(СЧПроводки));
		
		//СоздаемГруппуСуммы
		ЭлементГруппыСумма = ЭтаФорма.Элементы.Добавить("Гр_Сумма"+Строка(СЧПроводки), Тип("ГруппаФормы"), ЭлементГруппыДвижения);
		ЭлементГруппыСумма.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппыСумма.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ЭлементГруппыСумма.ОтображатьЗаголовок = Ложь;
		
		//СоздаемГруппуДвиженияДоп.
		ЭлементГруппыДвиженияДоп = ЭтаФорма.Элементы.Добавить("Гр_ДвиженияДоп"+Строка(СЧПроводки), Тип("ГруппаФормы"), ЭлементГруппыДвижения);
		ЭлементГруппыДвиженияДоп.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппыДвиженияДоп.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ЭлементГруппыДвиженияДоп.ОтображатьЗаголовок = Ложь;
		
		//+СоздаемГруппу Откуда
		ЭлементГруппыОткуда = ЭтаФорма.Элементы.Добавить("Гр_ДвиженияОткуда"+Строка(СЧПроводки), Тип("ГруппаФормы"), ЭлементГруппыДвиженияДоп);
		ЭлементГруппыОткуда.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппыОткуда.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ЭлементГруппыОткуда.Заголовок = "Откуда";
		
		//Заполняем группу откуда Элементами
		//+Подразделение откуда
		//реквизит
		ДобавляемыеРеквизиты = Новый Массив;
		МассивТипов = новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Подразделения"));
		Реквизит = Новый РеквизитФормы("ПодразделениеОткуда"+Строка(СЧПроводки),новый ОписаниеТипов(МассивТипов),, "Бизнес", Истина);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//элемент формы
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("ПодразделениеОткуда"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыОткуда);
		
		//ВозможныйДубль=Неопределено;
		//Если НЕ (ЕстьДок ИЛИ ЗначениеЗаполнено(СтрПроводка.ПодразделениеОткуда)) тогда
			ВозможныйДубль = ОпределениеУжеЗаданныхПарметров(СтрПроводка.ЗаголовокПО,Тип("СправочникСсылка.Подразделения"),ТаблицЗначений); //Возможный дубль по наименованию и типу
		//КонецЕсли;
		
		Если ВозможныйДубль = Неопределено Тогда
			ЭлементФормы.ПутьКДанным = "ПодразделениеОткуда"+Строка(СЧПроводки); 
		Иначе
			ЭлементФормы.ПутьКДанным = ВозможныйДубль; 
		КонецЕсли;
		ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
		Если ЕстьДок тогда
			этаформа["ПодразделениеОткуда"+Строка(СЧПроводки)]=текДок.ДокДвижение.ПодразделениеОткуда;
		Иначе
			этаформа["ПодразделениеОткуда"+Строка(СЧПроводки)]=СтрПроводка.ПодразделениеОткуда;
			Если ЗначениеЗаполнено(этаформа["ПодразделениеОткуда"+Строка(СЧПроводки)]) И НЕ ЕстьДок тогда
				ЭлементФормы.Доступность = ложь;
			Иначе
				этаформа["ПодразделениеОткуда"+Строка(СЧПроводки)]=ТекущееПодразделение;
				ЭлементФормы.АвтоОтметкаНезаполненного = Истина;
				Если ВозможныйДубль = Неопределено Тогда
					ПроверяемыеРеквизитыДоп.Добавить("ПодразделениеОткуда"+Строка(СЧПроводки));
					СоздатьДубльЭлемента("ПодразделениеОткуда"+Строка(СЧПроводки),СтрПроводка.ЗаголовокПО,"ПодразделениеОткуда"+Строка(СЧПроводки),Элементы.Группа3,Тип("СправочникСсылка.Подразделения"),ТаблицЗначений);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		//-Подразделение откуда
		
		//+СтатьяДвижения откуда
		//реквизит
		ДобавляемыеРеквизиты = Новый Массив;
		МассивТипов = новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиДвижения"));
		Реквизит = Новый РеквизитФормы("СтатьяДвиженияОткуда"+Строка(СЧПроводки),новый ОписаниеТипов(МассивТипов),, "Статья движения", Истина);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//элемент формы
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("СтатьяДвиженияОткуда"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыОткуда);
		
		//ВозможныйДубль=Неопределено;
		//Если НЕ (ЕстьДок ИЛИ ЗначениеЗаполнено(СтрПроводка.СтатьяДвиженияОткуда)) тогда
			ВозможныйДубль = ОпределениеУжеЗаданныхПарметров(СтрПроводка.ЗаголовокСДО,Тип("СправочникСсылка.СтатьиДвижения"),ТаблицЗначений); //Возможный дубль по наименованию и типу
		//КонецЕсли;
		
		Если ВозможныйДубль = Неопределено Тогда
			ЭлементФормы.ПутьКДанным = "СтатьяДвиженияОткуда"+Строка(СЧПроводки); 
		Иначе
			ЭлементФормы.ПутьКДанным = ВозможныйДубль; 
		КонецЕсли;
		ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
		Если ЕстьДок тогда
			этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]=текДок.ДокДвижение.СтатьяДвиженияОткуда;
		КонецЕсли;
		Если СтрПроводка.СтатьяДвиженияОткуда.ЭтоГруппа тогда
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Родитель", СтрПроводка.СтатьяДвиженияОткуда);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			ЭлементФормы.ПараметрыВыбора = НовыеПараметры;
		ИначеЕсли НЕ ЕстьДок тогда
			этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]=СтрПроводка.СтатьяДвиженияОткуда;
		КонецЕсли;
		//текРек=НайтиРеквизит("ПодразделениеОткуда"+Строка(СЧПроводки));
		//Если НЕ текРек=Неопределено тогда
			НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Подразделение", "ПодразделениеОткуда"+Строка(СЧПроводки));
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НоваяСвязь);
			НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
			ЭлементФормы.СвязиПараметровВыбора = НовыеСвязи;
		//КонецЕсли;
		Если ЗначениеЗаполнено(этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]) И НЕ ЕстьДок тогда
			ЭлементФормы.Доступность = ложь;
		Иначе
			ЭлементФормы.АвтоОтметкаНезаполненного = Истина;
			Если ВозможныйДубль = Неопределено Тогда
				ПроверяемыеРеквизитыДоп.Добавить("СтатьяДвиженияОткуда"+Строка(СЧПроводки));
				СоздатьДубльЭлемента("СтатьяДвиженияОткуда"+Строка(СЧПроводки),СтрПроводка.ЗаголовокСДО,"СтатьяДвиженияОткуда"+Строка(СЧПроводки),Элементы.Группа3,Тип("СправочникСсылка.СтатьиДвижения"),ТаблицЗначений);
			КонецЕсли;
		КонецЕсли;
		ЭлементФормы.УстановитьДействие("ПриИзменении","ПриИзмененииСтатьиДоп");		
		//-СтатьяДвижения откуда
		//-СоздаемГруппу Откуда
		
		//+СоздаемГруппу КУДА
		ЭлементГруппыКуда = ЭтаФорма.Элементы.Добавить("Гр_ДвиженияКуда"+Строка(СЧПроводки), Тип("ГруппаФормы"), ЭлементГруппыДвиженияДоп);
		ЭлементГруппыКуда.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппыКуда.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ЭлементГруппыКуда.Заголовок = "Куда";
		
		//Заполняем группу откуда Элементами
		//+Подразделение куда
		//реквизит
		ДобавляемыеРеквизиты = Новый Массив;
		МассивТипов = новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Подразделения"));
		Реквизит = Новый РеквизитФормы("ПодразделениеКуда"+Строка(СЧПроводки),новый ОписаниеТипов(МассивТипов),, "Бизнес", Истина);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//элемент формы
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("ПодразделениеКуда"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыКуда);
		
		//ВозможныйДубль=Неопределено;
		//Если НЕ (ЕстьДок ИЛИ ЗначениеЗаполнено(СтрПроводка.ПодразделениеКуда)) тогда
			ВозможныйДубль = ОпределениеУжеЗаданныхПарметров(СтрПроводка.ЗаголовокПК,Тип("СправочникСсылка.Подразделения"),ТаблицЗначений);//Возможный дубль по наименованию и типу
		//КонецЕсли;
		
		Если ВозможныйДубль = Неопределено Тогда
			ЭлементФормы.ПутьКДанным = "ПодразделениеКуда"+Строка(СЧПроводки); 
		Иначе
			ЭлементФормы.ПутьКДанным = ВозможныйДубль; 
		КонецЕсли;
		ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
		Если ЕстьДок тогда
			этаформа["ПодразделениеКуда"+Строка(СЧПроводки)]=текДок.ДокДвижение.ПодразделениеКуда;
		Иначе
			этаформа["ПодразделениеКуда"+Строка(СЧПроводки)]=СтрПроводка.ПодразделениеКуда;
			Если ЗначениеЗаполнено(этаформа["ПодразделениеКуда"+Строка(СЧПроводки)]) И НЕ ЕстьДок тогда
				ЭлементФормы.Доступность = ложь;
			Иначе
				этаформа["ПодразделениеКуда"+Строка(СЧПроводки)]=ТекущееПодразделение;
				ЭлементФормы.АвтоОтметкаНезаполненного = Истина;
				Если ВозможныйДубль = Неопределено Тогда
					ПроверяемыеРеквизитыДоп.Добавить("ПодразделениеКуда"+Строка(СЧПроводки));
					СоздатьДубльЭлемента("ПодразделениеКуда"+Строка(СЧПроводки),СтрПроводка.ЗаголовокПК,"ПодразделениеКуда"+Строка(СЧПроводки),Элементы.Группа3,Тип("СправочникСсылка.Подразделения"),ТаблицЗначений);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		//-Подразделение Куда
		
		//+СтатьяДвижения Куда
		//реквизит
		ДобавляемыеРеквизиты = Новый Массив;
		МассивТипов = новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиДвижения"));
		Реквизит = Новый РеквизитФормы("СтатьяДвиженияКуда"+Строка(СЧПроводки),новый ОписаниеТипов(МассивТипов),, "Статья движения", Истина);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//элемент формы
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("СтатьяДвиженияКуда"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыКуда);
		
		//ВозможныйДубль=Неопределено;
		//Если НЕ (ЕстьДок ИЛИ ЗначениеЗаполнено(СтрПроводка.СтатьяДвиженияКуда)) тогда
			ВозможныйДубль = ОпределениеУжеЗаданныхПарметров(СтрПроводка.ЗаголовокСДК,Тип("СправочникСсылка.СтатьиДвижения"),ТаблицЗначений);//Возможный дубль по наименованию и типу
		//КонецЕсли;
		
		Если ВозможныйДубль = Неопределено Тогда
			ЭлементФормы.ПутьКДанным = "СтатьяДвиженияКуда"+Строка(СЧПроводки); 
		Иначе
			ЭлементФормы.ПутьКДанным = ВозможныйДубль; 
		КонецЕсли;
		ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
		Если ЕстьДок тогда
			этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)]=текДок.ДокДвижение.СтатьяДвиженияКуда;
		КонецЕсли;
		Если СтрПроводка.СтатьяДвиженияКуда.ЭтоГруппа тогда
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Родитель", СтрПроводка.СтатьяДвиженияКуда);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			ЭлементФормы.ПараметрыВыбора = НовыеПараметры;
		ИначеЕсли НЕ ЕстьДок тогда
			этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)]=СтрПроводка.СтатьяДвиженияКуда;
		КонецЕсли;
		//текРек=НайтиРеквизит("ПодразделениеКуда"+Строка(СЧПроводки));
		//Если НЕ текРек=Неопределено тогда
			НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Подразделение", "ПодразделениеКуда"+Строка(СЧПроводки));
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НоваяСвязь);
			НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
			ЭлементФормы.СвязиПараметровВыбора = НовыеСвязи;
		//КонецЕсли;
		Если ЗначениеЗаполнено(этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)]) И НЕ ЕстьДок тогда
			ЭлементФормы.Доступность = ложь;
		Иначе
			ЭлементФормы.АвтоОтметкаНезаполненного = Истина;
			Если ВозможныйДубль = Неопределено Тогда
				ПроверяемыеРеквизитыДоп.Добавить("СтатьяДвиженияКуда"+Строка(СЧПроводки));
				СоздатьДубльЭлемента("СтатьяДвиженияКуда"+Строка(СЧПроводки),СтрПроводка.ЗаголовокСДК,"СтатьяДвиженияКуда"+Строка(СЧПроводки),Элементы.Группа3,Тип("СправочникСсылка.СтатьиДвижения"),ТаблицЗначений);
			КонецЕсли;	
		КонецЕсли;
		ЭлементФормы.УстановитьДействие("ПриИзменении","ПриИзмененииСтатьиДоп");		
		//-СтатьяДвижения Куда
		//-СоздаемГруппу Куда
		
		
		//+СуммаДвижения
		//реквизит
		ДобавляемыеРеквизиты = Новый Массив;
		МассивТипов = новый Массив;
		МассивТипов.Добавить(Тип("Число"));
		Реквизит = Новый РеквизитФормы("СуммаДвижения"+Строка(СЧПроводки),новый ОписаниеТипов(МассивТипов),, "Сумма", Истина);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//элемент формы
		//ЭлементФормы = ЭтаФорма.Элементы.Добавить("СуммаДвижения"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыДвижения);
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("СуммаДвижения"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыСумма);
		ВозможныйДубль = ОпределениеУжеЗаданныхПарметров(?(ЕстьДок,текДок.ДокДвижение.Сумма,СтрПроводка.ЗаголовокСумма),Тип("Число"),ТаблицЗначений);//Возможный дубль по наименованию и типу
		Если ВозможныйДубль = Неопределено Тогда
			ЭлементФормы.ПутьКДанным = "СуммаДвижения"+Строка(СЧПроводки); 
		Иначе
			ЭлементФормы.ПутьКДанным = ВозможныйДубль; 
		КонецЕсли;
		ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
		ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		Если ЕстьДок тогда
			этаформа["СуммаДвижения"+Строка(СЧПроводки)]=текДок.ДокДвижение.Сумма;
			Если СЧПроводки=1 тогда
				Сумма=текДок.ДокДвижение.Сумма;
			КонецЕсли;
		ИначеЕсли СтрПроводка.ВидДвижения = "Фиксированная" тогда 
			этаформа["СуммаДвижения"+Строка(СЧПроводки)]=СтрПроводка.ЗначениеДвижения;
		КонецЕсли;
		Если СтрПроводка.ВидДвижения = "Вручную" тогда 
			Если ВозможныйДубль = Неопределено Тогда
				ЭлементФормы.Доступность = Истина;
				СоздатьДубльЭлемента("СуммаДвижения"+Строка(СЧПроводки),СтрПроводка.ЗаголовокСумма,"СуммаДвижения"+Строка(СЧПроводки),Элементы.Группа3,Тип("Число"),ТаблицЗначений);
			КонецЕсли;	
		Иначе//Если НЕ ЕстьДок тогда
			ЭлементФормы.Доступность = ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]) тогда
			текСтатья=этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)];
		Иначе
			текСтатья=СтрПроводка.СтатьяДвиженияОткуда;
		КонецЕсли;
		ОбновитьЗаголовокСуммы(текСтатья,ЭлементФормы);
		Если Валюты тогда
			текСумма=этаформа["СуммаДвижения"+Строка(СЧПроводки)];
			текВалюта=ВалютаСтатьи(текСтатья);
			ДобавитьСуммуВалюты(текСумма,текВалюта,(СЧПроводки=1));
		КонецЕсли;
		Если ЕстьДок И СЧПроводки=1 тогда
			Если ЗначениеЗаполнено(текДок.ДокДвижение.СуммаРуб) тогда
				СуммаРуб=текДок.ДокДвижение.СуммаРуб;
			Иначе
				общКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,ТекущаяВалюта);
				СуммаРуб=Окр(Сумма/общКурс.Кратность*общКурс.Курс,2);
			КонецЕсли;
		КонецЕсли;
		Если ВозможныйДубль = Неопределено Тогда
			ПроверяемыеРеквизитыДоп.Добавить("СуммаДвижения"+Строка(СЧПроводки));
		КонецЕсли;	
		
		//+СуммаКуда
		//реквизит
		ДобавляемыеРеквизиты = Новый Массив;
		МассивТипов = новый Массив;
		МассивТипов.Добавить(Тип("Число"));
		Реквизит = Новый РеквизитФормы("СуммаДвижКуда"+Строка(СЧПроводки),новый ОписаниеТипов(МассивТипов),, "Сумма", Истина);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		//элемент формы
		//ЭлементФормы = ЭтаФорма.Элементы.Добавить("СуммаДвижения"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыДвижения);
		ЭлементФормы = ЭтаФорма.Элементы.Добавить("СуммаДвижКуда"+Строка(СЧПроводки), Тип("ПолеФормы"), ЭлементГруппыСумма);
		ВозможныйДубль = ОпределениеУжеЗаданныхПарметров(?(ЕстьДок,текДок.ДокДвижение.СуммаКуда,СтрПроводка.ЗаголовокСумма),Тип("Число"),ТаблицЗначений);//Возможный дубль по наименованию и типу
		Если ВозможныйДубль = Неопределено Тогда
			ЭлементФормы.ПутьКДанным = "СуммаДвижКуда"+Строка(СЧПроводки); 
		Иначе
			ЭлементФормы.ПутьКДанным = ВозможныйДубль; 
		КонецЕсли;
		ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
		ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		Если ЕстьДок тогда
			этаформа["СуммаДвижКуда"+Строка(СЧПроводки)]=текДок.ДокДвижение.СуммаКуда;
		ИначеЕсли СтрПроводка.ВидДвижения = "Фиксированная" тогда 
			этаформа["СуммаДвижКуда"+Строка(СЧПроводки)]=СтрПроводка.ЗначениеДвижения;
		КонецЕсли;
		Если СтрПроводка.ВидДвижения = "Вручную" тогда 
			Если ВозможныйДубль = Неопределено Тогда
				ЭлементФормы.Доступность = Истина;
				СоздатьДубльЭлемента("СуммаДвижКуда"+Строка(СЧПроводки),СтрПроводка.ЗаголовокСумма,"СуммаКуда"+Строка(СЧПроводки),Элементы.Группа3,Тип("Число"),ТаблицЗначений);
			КонецЕсли;	
		Иначе//Если НЕ ЕстьДок тогда
			ЭлементФормы.Доступность = ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)]) тогда
			текСтатьяКуда=этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)];
		Иначе
			текСтатьяКуда=СтрПроводка.СтатьяДвиженияКуда;
		КонецЕсли;
		ОбновитьЗаголовокСуммы(текСтатьяКуда,ЭлементФормы,текСтатья);
		Если Валюты тогда
			текСумма=этаформа["СуммаДвижКуда"+Строка(СЧПроводки)];
			текВалюта=ВалютаСтатьи(текСтатьяКуда);
			ДобавитьСуммуВалюты(текСумма,текВалюта);
		КонецЕсли;
		Если ВозможныйДубль = Неопределено Тогда
			ПроверяемыеРеквизитыДоп.Добавить("СуммаДвижКуда"+Строка(СЧПроводки));
		КонецЕсли;	
		//ЭтаФорма.Элементы.Переместить(ЭлементФормы, ЭлементГруппыДвижения, ЭлементГруппыДвиженияДоп)
		//-СуммаКуда
	КонецЦикла;
	Если Валюты тогда
		ВалютыСуммы(ВалютыДвижений());
		СформироватьЭлементыСуммы();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроведениеНаСервере()
	Попытка
		КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(этаформа.КодКнопки);
		СЧПроводки = 0;
		//текНомерБыстрогоДвижения=0; //Для записи в регистр
		//текНомерБДСтрока="";
		Если Валюты тогда
			ВалютаРУБ=РаботаСВалютой.ПолучитьВалютуПоСимвКоду("RUB");
			текСуммаРуб=ПолучитьСуммуВалюты(ВалютаРУБ);
			Если НЕ текСуммаРуб=Неопределено тогда
				СуммаРуб=текСуммаРуб;
			КонецЕсли;
		КонецЕсли;
		Для Каждого СтрПроводка из КнопкаСсылка.Движения цикл
			СЧПроводки=СЧПроводки+1;
			текДок=НайтиДокумент(СЧПроводки);
			ЕстьДок=НЕ (текДок=Неопределено);
			//Создать документ движения
			Если ЕстьДок тогда
				НовДок=текДок.ДокДвижение.ПолучитьОбъект();
			Иначе
				НовДок = Документы.Движения.СоздатьДокумент();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(НовДок,ЭтаФорма);
			НовДок.Дата = ЭтаФорма.ДатаДвижения;
			//Подразделение куда
			Если ЭтаФорма.Элементы["ПодразделениеКуда"+Строка(СЧПроводки)]["ПутьКДанным"] = "ПодразделениеКуда"+Строка(СЧПроводки) Тогда
				НовДок.ПодразделениеКуда = этаформа["ПодразделениеКуда"+Строка(СЧПроводки)];
			Иначе
				НовДок.ПодразделениеКуда = этаформа[(ЭтаФорма.Элементы["ПодразделениеКуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
			КонецЕсли;
			//ПодразделениеОткуда
			Если ЭтаФорма.Элементы["ПодразделениеОткуда"+Строка(СЧПроводки)]["ПутьКДанным"] = "ПодразделениеОткуда"+Строка(СЧПроводки) Тогда
				НовДок.ПодразделениеОткуда = этаформа["ПодразделениеОткуда"+Строка(СЧПроводки)];
			Иначе
				НовДок.ПодразделениеОткуда = этаформа[(ЭтаФорма.Элементы["ПодразделениеОткуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
			КонецЕсли;
			//СтатьяДвиженияКуда
			Если ЭтаФорма.Элементы["СтатьяДвиженияКуда"+Строка(СЧПроводки)]["ПутьКДанным"] = "СтатьяДвиженияКуда"+Строка(СЧПроводки) Тогда
				НовДок.СтатьяДвиженияКуда = этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)];
			Иначе
				НовДок.СтатьяДвиженияКуда = этаформа[(ЭтаФорма.Элементы["СтатьяДвиженияКуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
			КонецЕсли;
			//СтатьяДвиженияОткуда
			Если ЭтаФорма.Элементы["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]["ПутьКДанным"] = "СтатьяДвиженияОткуда"+Строка(СЧПроводки) Тогда
				НовДок.СтатьяДвиженияОткуда = этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)];
			Иначе
				НовДок.СтатьяДвиженияОткуда = этаформа[(ЭтаФорма.Элементы["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
			КонецЕсли;
			//СуммаДвижения
			Если ЭтаФорма.Элементы["СуммаДвижения"+Строка(СЧПроводки)]["ПутьКДанным"] = "СуммаДвижения"+Строка(СЧПроводки) Тогда
				текСумма = этаформа["СуммаДвижения"+Строка(СЧПроводки)];
			Иначе
				текСумма = этаформа[(ЭтаФорма.Элементы["СуммаДвижения"+Строка(СЧПроводки)]["ПутьКДанным"])];
			КонецЕсли;
			НовДок.Сумма = текСумма;
			Если Валюты тогда
				текКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,НовДок.СтатьяДвиженияОткуда.Валюта);
				Если СтрПроводка.ВидДвижения = "Из проводки" тогда 
					НовДок.СуммаРуб=СуммаРуб;
				ИначеЕсли СтрПроводка.ВидДвижения = "Процентом" тогда
					НовДок.СуммаРуб = (СуммаРуб * СтрПроводка.ЗначениеДвижения)/100;
				Иначе
					НовДок.СуммаРуб=Окр(текСумма/текКурс.Кратность*текКурс.Курс,2);
				КонецЕсли;
				Если текСуммаРуб=Неопределено тогда
					НовДок.Курс=текКурс.Курс;
				Иначе
					НовДок.Курс=НовДок.СуммаРуб/НовДок.Сумма;
				КонецЕсли;
				//КурсКуда=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,НовДок.СтатьяДвиженияКуда.Валюта);
				//НовДок.СуммаКуда=Окр(НовДок.СуммаРуб/КурсКуда.Курс*КурсКуда.Кратность,2);
				//НовДок.КурсКуда=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,НовДок.СтатьяДвиженияКуда.Валюта);
				НовДок.СуммаКуда=этаформа["СуммаДвижКуда"+Строка(СЧПроводки)];
				НовДок.КурсКуда=НовДок.СуммаРуб/НовДок.СуммаКуда;
			Иначе
				НовДок.СуммаРуб=текСумма;
				НовДок.СуммаКуда=текСумма;
				НовДок.Курс=1;
				НовДок.КурсКуда=1;
			КонецЕсли;
			//НовДок.ПодразделениеКуда = этаформа["ПодразделениеКуда"+Строка(СЧПроводки)];
			//НовДок.ПодразделениеОткуда = этаформа["ПодразделениеОткуда"+Строка(СЧПроводки)];
			//НовДок.СтатьяДвиженияКуда = этаформа["СтатьяДвиженияКуда"+Строка(СЧПроводки)];
			//НовДок.СтатьяДвиженияОткуда = этаформа["СтатьяДвиженияОткуда"+Строка(СЧПроводки)];
			//НовДок.Сумма = этаформа["СуммаДвижения"+Строка(СЧПроводки)];
			НовДок.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			НовДок.Записать(РежимЗаписиДокумента.Проведение);
			//Проверим-посчитаем номер быстрого движения
			//Если текНомерБыстрогоДвижения=0 тогда
			//	текНомерБыстрогоДвижения=РаботаСДаннымиСервер.ПоследнийНомерБыстрогоДвижения(КнопкаСсылка)+1;
			//	текНомерБДстрока=Строка(текНомерБыстрогоДвижения);
			//	Пока СтрДлина(текНомерБДстрока)<9 Цикл
			//		текНомерБДстрока="0"+текНомерБДСтрока;
			//	КонецЦикла;
			//КонецЕсли;
			РаботаСДаннымиСервер.ЗарегистрироватьБыстроеДвижение(КнопкаСсылка,НовДок.Ссылка,текНомерБыстрогоДвижения,текНомерБДСтрока);
		КонецЦикла;
		Возврат Истина
	Исключение
		Сообщ = Новый СообщениеПользователю;
		Сообщ.Текст = "Ошибка создания движений: "+ОписаниеОшибки();
		Сообщ.Сообщить();
		Возврат Ложь
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Проведение(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() тогда
		Если ПроведениеНаСервере() тогда
			ЭтаФорма.Закрыть();
			Оповестить("ДобавленоДвижение",ДатаДвижения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ЗначениеЗаполнено(ПроверяемыеРеквизитыДоп) тогда
		Для Каждого Стр из ПроверяемыеРеквизитыДоп цикл 
			ПроверяемыеРеквизиты.Добавить(Стр);
		конецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	СуммаПриИзмененииНаСервере();
	СформироватьЭлементыСуммы();
КонецПроцедуры

&НаСервере
Процедура СуммаПриИзмененииНаСервере()
	КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(КодКнопки);
	СЧПроводки = 0;
	Если Валюты тогда
		общКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,ТекущаяВалюта);
		СуммаРуб=Окр(Сумма/общКурс.Кратность*общКурс.Курс,2);
	Иначе
		общКурс=1;
		СуммаРуб=Сумма;
	КонецЕсли;
	Добавлена=Ложь;
	Для Каждого СтрПроводка из КнопкаСсылка.Движения цикл
		СЧПроводки = СЧПроводки+1;
		Если Валюты тогда
			текСтатья=этаформа[(ЭтаФорма.Элементы["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
			текВалюта=ВалютаСтатьи(текСтатья);
			текСтатьяКуда=этаформа[(ЭтаФорма.Элементы["СтатьяДвиженияКуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
			текВалютаКуда=ВалютаСтатьи(текСтатьяКуда);
			Если СЧПроводки=1 тогда
				текСумма=Сумма;
			Иначе
				текКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалюта);
				текСумма=Окр(СуммаРуб/текКурс.Курс*текКурс.Кратность,2);
			КонецЕсли;
			текКурсКуда=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалютаКуда);
			текСуммаКуда=Окр(СуммаРуб/текКурсКуда.Курс*текКурсКуда.Кратность,2);
			Если НЕ ОбновитьСуммуВалюты(текСумма,текВалюта.Наименование) тогда
				ДобавитьСуммуВалюты(текСумма,текВалюта,(СЧПроводки=1));
				Добавлена=Истина;
			КонецЕсли;
			Если НЕ ОбновитьСуммуВалюты(текСуммаКуда,текВалютаКуда.Наименование) тогда
				ДобавитьСуммуВалюты(текСуммаКуда,текВалютаКуда);
				Добавлена=Истина;
			КонецЕсли;
		Иначе
			текСумма=Сумма;
			текСуммаКуда=Сумма;
		КонецЕсли;
		Если СтрПроводка.ВидДвижения = "Из проводки" тогда 
			ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = текСумма;
			ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = текСуммаКуда;
		ИначеЕсли СтрПроводка.ВидДвижения = "Процентом" тогда
			ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = (текСумма * СтрПроводка.ЗначениеДвижения)/100;
			ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = (текСуммаКуда * СтрПроводка.ЗначениеДвижения)/100;
		ИначеЕсли СтрПроводка.ВидДвижения = "Из проводки" тогда
			//Будет из ЗАпроса
			ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = текСумма;
			ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = текСуммаКуда;
		КонецЕсли;
	КонецЦикла;
	Если Валюты И Добавлена тогда
		СформироватьЭлементыСуммы();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура НазваниеКнопкиНажатие(Элемент, СтандартнаяОбработка)
	Сообщить("фывфыв");
КонецПроцедуры

&НаСервере
Функция ОпределениеУжеЗаданныхПарметров(ЗаголовокСДО,ТипЗначенияЭлемента,ТаблицЗначений)
	//Счетчик = 0;
	//Если НЕ ЗаголовокСДО="" тогда
		Для Каждого Строка из ТаблицЗначений Цикл
			//Счетчик = Счетчик +1;
			Если Строка.НаименованияКолонки = ЗаголовокСДО и Строка.ТипЗначения = ТипЗначенияЭлемента Тогда
			 Возврат Строка.НазваниеРеквизита;
			КонецЕсли;	
		КонецЦикла;
	//КонецЕсли;
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ДатаДвиженияПриИзменении(Элемент)
	Если Валюты тогда
		ОбновитьЗаголовокКурс(ТекущаяВалюта);
	КонецЕсли;
КонецПроцедуры
	
//Обработка валют

&НаСервере
Функция ВалютыДвижений()
	Результат=Новый Массив;
	КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(этаформа.КодКнопки);
	СЧПроводки = 0;
	Для Каждого СтрПроводка из КнопкаСсылка.Движения цикл
		СЧПроводки=СЧПроводки+1;
		текСтатья=ВернутьСтатью("СтатьяДвиженияОткуда"+Строка(СЧПроводки));
		//текВалюта=текСтатья.Валюта.Наименование;
		текВалюта=ВалютаСтатьи(текСтатья).Наименование;
		Если Результат.Найти(текВалюта)=Неопределено тогда
			Результат.Добавить(текВалюта);
		КонецЕсли;
		текСтатья=ВернутьСтатью("СтатьяДвиженияКуда"+Строка(СЧПроводки));
		//текВалюта=текСтатья.Валюта.Наименование;
		текВалюта=ВалютаСтатьи(текСтатья).Наименование;
		Если Результат.Найти(текВалюта)=Неопределено тогда
			Результат.Добавить(текВалюта);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции
			
&НаСервере
Процедура ВалютыСуммы(масВалюты)
	текСуммы=РеквизитФормыВЗначение("ВалютыСуммы",Тип("ТаблицаЗначений"));
	НовСуммы=текСуммы.СкопироватьКолонки("ВалютаИмя,ВалютаСсылка,ВалютаСумма,Основная");
	текИнд=0;
	Пока текИнд<масВалюты.Количество() Цикл
		текЭлем=масВалюты[текИнд];
		новВалюта=НовСуммы.Добавить();
		текВалюта=текСуммы.Найти(текЭлем,"ВалютаИмя");
		Если текВалюта=Неопределено тогда
			текВалюта=РаботаСВалютой.ПолучитьВалютуПоСимвКоду(текЭлем);
			новВалюта.ВалютаИмя=текЭлем;
			новВалюта.ВалютаСсылка=текВалюта;
			текКурс=РаботаСВалютой.ПолучитьКурс(ДатаДвижения,текВалюта);
			новВалюта.ВалютаСумма=Окр(СуммаРуб/текКурс.Курс*текКурс.Кратность,2);
		Иначе
			новВалюта.ВалютаИмя=текВалюта.ВалютаИмя;
			новВалюта.ВалютаСсылка=текВалюта.ВалютаСсылка;
			новВалюта.ВалютаСумма=текВалюта.ВалютаСумма;
		КонецЕсли;
		НовВалюта.Основная=(текИнд=0);
		текИнд=текИнд+1;
	КонецЦикла;
	ЗначениеВРеквизитФормы(НовСуммы,"ВалютыСуммы");
КонецПроцедуры
			
&НаСервере
Процедура СформироватьЭлементыСуммы()
	Удаляемые = Новый Массив;
	УдаляемыеРеквизиты = Новый Массив;
	Для Каждого текЭлемент из Элементы.ГруппаСуммыВалюты.ПодчиненныеЭлементы Цикл
		УдаляемыеРеквизиты.Добавить(текЭлемент.ПутьКДанным);
		Удаляемые.Добавить(текЭлемент);
	КонецЦикла;
	Для каждого текЭлемент из Удаляемые Цикл
		Элементы.Удалить(текЭлемент);
	КонецЦикла;
	ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	Для Каждого текВалюта из ВалютыСуммы Цикл
		Если текВалюта.Основная тогда
			Элементы.Сумма.Заголовок="Сумма, "+текВалюта.ВалютаИмя;
			Сумма=текВалюта.ВалютаСумма;
		Иначе
			ДобавляемыеРеквизиты = Новый Массив;
			МассивТипов = новый Массив;
			МассивТипов.Добавить(Тип("Число"));
			Реквизит = Новый РеквизитФормы("Сумма"+текВалюта.ВалютаИмя,новый ОписаниеТипов(МассивТипов),, "Сумма, "+текВалюта.ВалютаИмя, Истина);
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			ЭлементФормы = ЭтаФорма.Элементы.Добавить("Сумма"+текВалюта.ВалютаИмя, Тип("ПолеФормы"), Элементы.ГруппаСуммыВалюты);
			ЭлементФормы.ПутьКДанным = "Сумма"+текВалюта.ВалютаИмя; 
			ЭлементФормы.Вид         = ВидПоляФормы.ПолеВвода;
			ЭлементФормы.Заголовок	 = "Сумма, "+текВалюта.ВалютаИмя;
			ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
			ЭлементФормы.УстановитьДействие("ПриИзменении","ПриИзмененииСуммыВалюты");
			ЭтаФорма[ЭлементФормы.ПутьКДанным]=текВалюта.ВалютаСумма;
		КонецЕсли;
	КонецЦикла;                                                            
КонецПроцедуры
	
&НаКлиенте
Процедура ПриИзмененииСуммыВалюты(Элемент)
	Если Валюты тогда
		ПриИзмененииСуммыВалютыНаСервере(Элемент.Имя);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСуммыВалютыНаСервере(текЭлементИмя)
	текЭлемент=Элементы[текЭлементИмя];
	текВалюта=РаботаСВалютой.ПолучитьВалютуПоСимвКоду(Прав(текЭлемент.Заголовок,3));
	текСумма=ЭтаФорма[текЭлемент.ПутьКДанным];
	ОбновитьСуммуВалюты(текСумма,текВалюта.Наименование);
	ОбновитьСуммыДвижений(текСумма,текВалюта);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСуммыДвижений(текСумма,текВалютаСсылка)
	КнопкаСсылка = Справочники.Шаблоны.НайтиПоКоду(КодКнопки);
	СЧПроводки = 0;
	Для Каждого СтрПроводка из КнопкаСсылка.Движения цикл
		СЧПроводки = СЧПроводки+1;
		текСтатья=этаформа[(ЭтаФорма.Элементы["СтатьяДвиженияОткуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
		текВалюта=ВалютаСтатьи(текСтатья);
		текСтатьяКуда=этаформа[(ЭтаФорма.Элементы["СтатьяДвиженияКуда"+Строка(СЧПроводки)]["ПутьКДанным"])];
		текВалютаКуда=ВалютаСтатьи(текСтатьяКуда);
		Если текВалюта=текВалютаСсылка тогда
			Если СтрПроводка.ВидДвижения = "Из проводки" тогда 
				ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = текСумма;
			ИначеЕсли СтрПроводка.ВидДвижения = "Процентом" тогда
				ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = (текСумма * СтрПроводка.ЗначениеДвижения)/100;
			ИначеЕсли СтрПроводка.ВидДвижения = "Из проводки" тогда
				//Будет из ЗАпроса
				ЭтотОбъект["СуммаДвижения"+Строка(СЧПроводки)] = текСумма;
			КонецЕсли;
		КонецЕсли;
		Если текВалютаКуда=текВалютаСсылка тогда
			Если СтрПроводка.ВидДвижения = "Из проводки" тогда 
				ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = текСумма;
			ИначеЕсли СтрПроводка.ВидДвижения = "Процентом" тогда
				ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = (текСумма * СтрПроводка.ЗначениеДвижения)/100;
			ИначеЕсли СтрПроводка.ВидДвижения = "Из проводки" тогда
				//Будет из ЗАпроса
				ЭтотОбъект["СуммаДвижКуда"+Строка(СЧПроводки)] = текСумма;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСуммуВалюты(текСумма,текВалюта,Основная=Ложь)
	текСуммы=РеквизитФормыВЗначение("ВалютыСуммы",Тип("ТаблицаЗначений"));
	Если Основная тогда
		текСуммы.ЗаполнитьЗначения(Ложь, "Основная");
	КонецЕсли;
	Если ТипЗнч(текВалюта)=Тип("СправочникСсылка.Валюты") тогда
		текВалютаИмя=текВалюта.Наименование;
	Иначе
		текВалютаИмя=текВалюта;
	КонецЕсли;
	новВалюта=текСуммы.Найти(текВалютаИмя,"ВалютаИмя");
	Если новВалюта=Неопределено тогда
		новВалюта=текСуммы.Добавить();
		текВалюта=РаботаСВалютой.ПолучитьВалютуПоСимвКоду(текВалютаИмя);
		новВалюта.ВалютаИмя=текВалютаИмя;
		новВалюта.ВалютаСсылка=текВалюта;
		новВалюта.ВалютаСумма=текСумма;
	ИначеЕсли текСумма>новВалюта.ВалютаСумма тогда
		новВалюта.ВалютаСумма=текСумма;
	КонецЕсли;
	НовВалюта.Основная=Основная;
	ЗначениеВРеквизитФормы(текСуммы,"ВалютыСуммы");
КонецПроцедуры
			
&НаСервере
Функция ПолучитьСуммуВалюты(текВалюта)
	текСуммы=РеквизитФормыВЗначение("ВалютыСуммы",Тип("ТаблицаЗначений"));
	новВалюта=текСуммы.Найти(текВалюта,"ВалютаСсылка");
	Если новВалюта=Неопределено тогда
		Возврат Неопределено;
	Иначе
		Возврат новВалюта.ВалютаСумма;
	КонецЕсли;
КонецФункции
			
&НаСервере
Функция ОбновитьСуммуВалюты(текСумма,текВалютаИмя)
	Результат=Ложь;
	текСуммы=РеквизитФормыВЗначение("ВалютыСуммы",Тип("ТаблицаЗначений"));
	новВалюта=текСуммы.Найти(текВалютаИмя,"ВалютаИмя");
	Если НЕ новВалюта=Неопределено тогда
		новВалюта.ВалютаСумма=текСумма;
		ЗначениеВРеквизитФормы(текСуммы,"ВалютыСуммы");
		Результат=Истина;
	КонецЕсли;
	Возврат Результат;
КонецФункции
			
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

