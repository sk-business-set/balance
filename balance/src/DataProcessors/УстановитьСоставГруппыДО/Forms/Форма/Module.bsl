&НаСервереБезКонтекста
Функция ЭтоГруппаОформления(текСсылка)
	Если ТипЗнч(текСсылка)=Тип("СправочникСсылка.ГруппыДоступаОформления") тогда
		Возврат текСсылка.ГруппаОформления;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьСписок()
	текСписок=ТаблицаСостав.Выгрузить(,"Значение");
	Возврат текСписок.ВыгрузитьКолонку("Значение");
КонецФункции

&НаКлиенте
Процедура УстановитьОтбор(текСписок)
	Если текСписок.Количество() тогда
		СписокОтбора=Новый СписокЗначений;
		СписокОтбора.ЗагрузитьЗначения(текСписок);
		ИсточникВыбора.Отбор.Элементы.Очистить();
		новОтбор=ИсточникВыбора.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		новОтбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСписке;
		новОтбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Ссылка");
		новОтбор.ПравоеЗначение=СписокОтбора;
		новОтбор.Использование=Истина;
	Иначе
		ИсточникВыбора.Отбор.Элементы.Очистить();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ГруппаДО") тогда
		Объект.ГруппаДО=Параметры.ГруппаДО;
		ГруппаОформления=Параметры.ГруппаДО.ГруппаОформления;
		ОбновитьСписки(ГруппаОформления);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ГруппаОформления тогда
		Элементы.ГруппаДО.Заголовок="Группа оформления";
	Иначе
		Элементы.ГруппаДО.Заголовок="Группа доступа";
	КонецЕсли;
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПриИзменении(Элемент)
	текГруппаОформления=ЭтоГруппаОформления(Объект.ГруппаДО);
	Если НЕ текГруппаОформления=ГруппаОформления тогда
		ГруппаОформления=текГруппаОформления;
		Если ГруппаОформления тогда
			Элементы.ГруппаДО.Заголовок="Группа оформления";
		Иначе
			Элементы.ГруппаДО.Заголовок="Группа доступа";
		КонецЕсли;
	КонецЕсли;
	ОбновитьСписки(ГруппаОформления);
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписки(текОформление)
	ТаблицаСостав.Очистить();
	текСписок=УправлениеДоступомОформлением.СоставГруппыДО(Объект.ГруппаДО);
	Для Каждого текЭлем из текСписок Цикл
		НовСтрока=ТаблицаСостав.Добавить();
		НовСтрока.Значение=текЭлем.Значение;
		НовСтрока.Родитель=текЭлем.Представление;
	КонецЦикла;
	Если текОформление тогда
		ИсточникВыбора.ОсновнаяТаблица="Справочник.Шаблоны";
	Иначе
		ИсточникВыбора.ОсновнаяТаблица="Справочник.Подразделения";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСписка(текЭлем)
	текСтроки=ТаблицаСостав.НайтиСтроки(Новый Структура("Значение",текЭлем.Значение));
	Если текСтроки.Количество()=0 тогда
		НовСтрока=ТаблицаСостав.Добавить();
		НовСтрока.Значение=текЭлем.Значение;
		НовСтрока.Родитель=текЭлем.Представление;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЭлементСписка(текЭлем)
	текСтроки=ТаблицаСостав.НайтиСтроки(Новый Структура("Значение",текЭлем.Значение));
	НомСтроки=текСтроки.Количество();
	Пока НомСтроки>0 Цикл
		НомСтроки=НомСтроки-1;
		ТаблицаСостав.Удалить(ТаблицаСостав.Индекс(текСтроки[НомСтроки]));
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИнициаторыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДобавляемыйСписок=СписокВыбранных(ВыбраннаяСтрока);
	Для Каждого текЭлем из ДобавляемыйСписок Цикл
		ДобавитьЭлементСписка(текЭлем);
	КонецЦикла;
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокВыбранных(текСтрока)
	Результат=Новый СписокЗначений;
	Запрос=Новый Запрос;
	Если ТипЗнч(текСтрока)=Тип("СправочникСсылка.Шаблоны") тогда
		Запрос.Текст="ВЫБРАТЬ
		             |	Шаблоны.Ссылка,
		             |	Шаблоны.Родитель.Наименование КАК Группа
		             |ИЗ
		             |	Справочник.Шаблоны КАК Шаблоны
		             |ГДЕ
		             |	Шаблоны.Ссылка В ИЕРАРХИИ(&Ссылка)
		             |	И Шаблоны.ЭтоГруппа = ЛОЖЬ
		             |	И Шаблоны.ПометкаУдаления = ЛОЖЬ";
	ИначеЕсли ТипЗнч(текСтрока)=Тип("СправочникСсылка.Подразделения") тогда
		Запрос.Текст="ВЫБРАТЬ
		             |	Подразделения.Ссылка,
		             |	Подразделения.Родитель.Наименование КАК Группа
		             |ИЗ
		             |	Справочник.Подразделения КАК Подразделения
		             |ГДЕ
		             |	Подразделения.Ссылка В ИЕРАРХИИ(&Ссылка)
		             |	И Подразделения.ПометкаУдаления = ЛОЖЬ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка",текСтрока);
	текСписок=Запрос.Выполнить().Выбрать();
	Пока текСписок.Следующий() Цикл
		Результат.Добавить(текСписок.Ссылка,текСписок.Группа);
	КонецЦикла;
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура ДобавитьВСписок(Команда)
	//Для каждого текСтрока из Элементы.ИсточникВыбора.ВыделенныеСтроки цикл
		текСтрока=Элементы.ИсточникВыбора.ТекущаяСтрока;
		ДобавляемыйСписок=СписокВыбранных(текСтрока);
		Для Каждого текЭлем из ДобавляемыйСписок Цикл
			ДобавитьЭлементСписка(текЭлем);
		КонецЦикла;
	//КонецЦикла;
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры


&НаКлиенте
Процедура ФильтрВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	УдаляемыйСписок=СписокВыбранных(Элемент.ТекущиеДанные.Значение);
	Для Каждого текЭлем из УдаляемыйСписок Цикл
		УдалитьЭлементСписка(текЭлем);
	КонецЦикла;
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры


&НаКлиенте
Процедура УбратьИзСписка(Команда)
	//Для каждого текСтрока из Элементы.СписокСостав.ВыделенныеСтроки цикл
		текСтрока=Элементы.СписокСостав.ТекущиеДанные.Значение;
		УдаляемыйСписок=СписокВыбранных(текСтрока);
		Для Каждого текЭлем из УдаляемыйСписок Цикл
			УдалитьЭлементСписка(текЭлем);
		КонецЦикла;
	//КонецЦикла;
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры


&НаКлиенте
Процедура Сохранить(Команда)
	УправлениеДоступомОформлением.СохранитьСоставГруппыДО(Объект.ГруппаДО,ПолучитьСписок());
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьСписок(Команда)
	ТаблицаСостав.Очистить();
	УстановитьОтбор(ПолучитьСписок());
КонецПроцедуры

