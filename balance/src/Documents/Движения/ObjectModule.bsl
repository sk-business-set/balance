
Процедура ОбработкаПроведения(Отказ, Режим)
	Валюты=Константы.МультивалютныйУчет.Получить();
	// регистр Движения Приход
	Движения.Движения.Записывать = Истина;
	Движение = Движения.Движения.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Подразделение = ПодразделениеКуда;
	Движение.СтатьяДвижения = СтатьяДвиженияКуда;
	Движение.ПодразделениеКудаОткуда = ПодразделениеОткуда;
	Движение.СтатьяДвиженияКудаОткуда = СтатьяДвиженияОткуда;
	Если Валюты тогда
		Движение.Сумма = ?(ЗначениеЗаполнено(СуммаРуб),СуммаРуб,Сумма);
	Иначе
		Движение.Сумма = Сумма;
	КонецЕсли;
	Движение.Комментарий = Комментарий;

	// регистр Движения Расход
	Движения.Движения.Записывать = Истина;
	Движение = Движения.Движения.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Подразделение = ПодразделениеОткуда;
	Движение.СтатьяДвижения = СтатьяДвиженияОткуда;
	Движение.ПодразделениеКудаОткуда = ПодразделениеКуда;
	Движение.СтатьяДвиженияКудаОткуда = СтатьяДвиженияКуда;
	Если Валюты тогда
		Движение.Сумма = ?(ЗначениеЗаполнено(СуммаРуб),СуммаРуб,Сумма);
	Иначе
		Движение.Сумма = Сумма;
	КонецЕсли;
	Движение.Комментарий = Комментарий;
	
	//// регистр Управленческий 
	//Движения.Управленческий.Записывать = Истина;
	//Движение = Движения.Управленческий.Добавить();
	//Движение.Период = Дата;
	//Движение.СчетДт = СтатьяДвиженияОткуда.СчетУчета;
	//Движение.СчетКт = СтатьяДвиженияКуда.СчетУчета;
	//Движение.Сумма = Сумма;
	//Движение.Содержание = Комментарий;
//Попытка	
//	ЗаписатьВБаланс();
//Исключение
//КонецПопытки;
	
КонецПроцедуры



&НаСервере
Процедура ЗаписатьВБаланс(Объект,НоваяПроводка)
	Если НоваяПроводка Тогда
			ВнешниеИсточникиДанных.BalanceDB.dbo_insert_Provodka(Номер,Дата,"",СтатьяДвиженияОткуда.кодБаланс,
			СтатьяДвиженияКуда.кодБаланс,Комментарий,Сумма,СуммаКуда,"Руб.",1);
	Иначе
		ВнешниеИсточникиДанных.BalanceDB.dbo_update_provodka(Номер,Дата,"",СтатьяДвиженияОткуда.КодБаланс,
			СтатьяДвиженияКуда.кодБаланс,Комментарий,Сумма,СуммаКуда,"Руб.",1);
	КонецЕсли;
КонецПроцедуры


Процедура ПересчитатьВВалюту(новВалюта,текВалюта) Экспорт
	Валюты=Константы.МультивалютныйУчет.Получить();
	Если Валюты тогда
		новКурс=РаботаСВалютой.ПолучитьКурс(Дата,новВалюта);
		текКурс=РаботаСВалютой.ПолучитьКурс(Дата,текВалюта);
		Если ЗначениеЗаполнено(СуммаРуб) тогда
			Сумма=Окр(СуммаРуб/новКурс.Курс*новКурс.Кратность,2);
		Иначе
			СуммаРуб=Окр(Сумма/текКурс.Кратность*текКурс.Курс,2);
			Сумма=Окр(СуммаРуб/новКурс.Курс*новКурс.Кратность,2);
		КонецЕсли;
		Курс=новКурс.Курс;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Попытка
		Если ЭтотОбъект.Ссылка.Пустая() Тогда
			ЗаписатьВБаланс(ЭтотОбъект,Истина)
		Иначе
	        ЗаписатьВБаланс(ЭтотОбъект,Ложь)
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	ВнешниеИсточникиДанных.BalanceDB.dbo_Delete_provodka(Номер);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ВнешниеИсточникиДанных.BalanceDB.dbo_Delete_provodka(Номер);
КонецПроцедуры
