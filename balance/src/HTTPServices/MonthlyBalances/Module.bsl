

// Описание
// 
// Параметры:
// 	Запрос - HTTPСервисЗапрос - запрашивает остатки денежных средств
// 	в разрезе месяцев по подразделениям и по статьям движения
// 	begin - начало запрашиваемого периода
// 	end - конец запрашиваемого периода
// 	movement -  статья движения 
// 	subdivision - подразделение
// Возвращаемое значение:
// 	HTTPСервисОтвет - возвращает суммы остатков и оборотов на конец месяца
Функция ПолучитьОстаткиПоМесяцамgetBalances(Запрос)
	
	НачалоПериода = Запрос.ПараметрыЗапроса.Получить("begin");
	Если НачалоПериода = Неопределено Тогда

	КонецЕсли;
	
	КонецПериода = Запрос.ПараметрыЗапроса.Получить("end");
	Если КонецПериода = Неопределено Тогда
		
	КонецЕсли;
	
	СтатьяДвижения = Запрос.ПараметрыЗапроса.Получить("movement");
	Если СтатьяДвижения = Неопределено Тогда
			СтрокаУсловияСтатья = "";
	Иначе
			СтрокаУсловияСтатья = "|И СтатьиДвижения.Ссылка = &СтатьяДвижения"
	КонецЕсли;
	
	Подразделение = Запрос.ПараметрыЗапроса.Получить("subdivision");
	Если Подразделение = Неопределено Тогда
		СтрокаУсловияПодразделение = ""
	Иначе
		СтрокаУсловияПодразделение = "|	И СпрПодразделение.Ссылка = &Подразделение"
	КонецЕсли;
	
	ЗапросОстатков = Новый Запрос();
	ТекстЗапроса  = СтрШаблон("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрПодразделение.Ссылка КАК Подразделение,
	|	СтатьиДвижения.Ссылка КАК СтатьяДвижения
	|ПОМЕСТИТЬ ТЗПодразделений
	|ИЗ
	|	Справочник.СтатьиДвижения КАК СтатьиДвижения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК СпрПодразделение
	|		ПО СтатьиДвижения.Подразделение = СпрПодразделение.Ссылка
	|ГДЕ
	|	НЕ СпрПодразделение.ПометкаУдаления
	|%1
	|%2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ), МЕСЯЦ, t.n) КАК Дата,
	|	ТЗПодразделений.Подразделение КАК Подразделение,
	|	ТЗПодразделений.СтатьяДвижения КАК СтатьяДвижения
	|ПОМЕСТИТЬ ТаблицаДата
	|ИЗ
	|	(ВЫБРАТЬ
	|		6 * (t1.a - 1) + t2.b - 1 КАК n
	|	ИЗ
	|		(ВЫБРАТЬ
	|			1 КАК a
	|
	|		ОБЪЕДИНИТЬ
	|
	|		ВЫБРАТЬ
	|			2
	|
	|		ОБЪЕДИНИТЬ
	|
	|		ВЫБРАТЬ
	|			3
	|
	|		ОБЪЕДИНИТЬ
	|
	|		ВЫБРАТЬ
	|			4
	|
	|		ОБЪЕДИНИТЬ
	|
	|		ВЫБРАТЬ
	|			5
	|
	|		ОБЪЕДИНИТЬ
	|
	|		ВЫБРАТЬ
	|			6) КАК t1
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				1 КАК b
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				2
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				3
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				4
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				5
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				6) КАК t2
	|			ПО ИСТИНА) КАК t,
	|	ТЗПодразделений КАК ТЗПодразделений
	|ГДЕ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ), МЕСЯЦ, t.n) <= &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.НачалоПериода КАК НачалоПериода,
	|	МАКСИМУМ(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	МАКСИМУМ(ВложенныйЗапрос.СуммаОборот) КАК СуммаОборот,
	|	ВложенныйЗапрос.СтатьяДвижения КАК СтатьяДвижения
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		&НачалоПериода КАК НачалоПериода,
	|		ДвиженияОстатки.Подразделение КАК Подразделение,
	|		ДвиженияОстатки.СуммаОстаток КАК Сумма,
	|		ДвиженияОстатки.СтатьяДвижения КАК СтатьяДвижения,
	|		0 КАК СуммаОборот
	|	ИЗ
	|		РегистрНакопления.Движения.Остатки(&НачалоПериода,) КАК ДвиженияОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ДвиженияОстаткиИОбороты.Период, ДЕНЬ),
	|		ДвиженияОстаткиИОбороты.Подразделение,
	|		ДвиженияОстаткиИОбороты.СуммаНачальныйОстаток,
	|		ДвиженияОстаткиИОбороты.СтатьяДвижения,
	|		ДвиженияОстаткиИОбороты.СуммаОборот
	|	ИЗ
	|		РегистрНакопления.Движения.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, День,,) КАК ДвиженияОстаткиИОбороты) КАК
	|		ВложенныйЗапрос
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.НачалоПериода,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.СтатьяДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	СтатьяДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.НачалоПериода КАК НачалоПериода,
	|	МИНИМУМ(ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ОстаткиКонец.НачалоПериода, ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1)), СЕКУНДА,
	|		-1)) КАК КонецПериода,
	|	Остатки.Подразделение КАК Подразделение,
	|	Остатки.Сумма КАК Сумма,
	|	Остатки.СтатьяДвижения КАК СтатьяДвижения,
	|	Остатки.СуммаОборот КАК СуммаОборот
	|ПОМЕСТИТЬ ОстаткиПериодами
	|ИЗ
	|	Остатки КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК ОстаткиКонец
	|		ПО Остатки.Подразделение = ОстаткиКонец.Подразделение
	|		И Остатки.СтатьяДвижения = ОстаткиКонец.СтатьяДвижения
	|		И Остатки.НачалоПериода < ОстаткиКонец.НачалоПериода
	|СГРУППИРОВАТЬ ПО
	|	Остатки.НачалоПериода,
	|	Остатки.Подразделение,
	|	Остатки.Сумма,
	|	Остатки.СтатьяДвижения,
	|	Остатки.СуммаОборот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ТаблицаДата.Дата, """") КАК Дата,
	|	ЕСТЬNULL(ТаблицаДата.Подразделение, """") КАК Подразделение,
	|	ЕСТЬNULL(ОстаткиПериодами.Сумма, 0) КАК Сумма,
	|	ОстаткиПериодами.СуммаОборот КАК СуммаОборот,
	|	ТаблицаДата.СтатьяДвижения КАК СтатьяДвижения
	|ИЗ
	|	ТаблицаДата КАК ТаблицаДата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПериодами КАК ОстаткиПериодами
	|		ПО ТаблицаДата.Дата МЕЖДУ ОстаткиПериодами.НачалоПериода И ОстаткиПериодами.КонецПериода
	|		И ТаблицаДата.Подразделение = ОстаткиПериодами.Подразделение
	|		И ТаблицаДата.СтатьяДвижения = ОстаткиПериодами.СтатьяДвижения
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|ИТОГИ
	|ПО
	|	Дата",СтрокаУсловияСтатья,СтрокаУсловияПодразделение);   
	ЗапросОстатков.Текст = ТекстЗапроса;  
	ЗапросОстатков.УстановитьПараметр("НачалоПериода",Дата(Запрос.ПараметрыЗапроса.Получить("begin")));
	ЗапросОстатков.УстановитьПараметр("КонецПериода",Дата(Запрос.ПараметрыЗапроса.Получить("end")));
	Если не СтатьяДвижения = Неопределено Тогда
	ЗапросОстатков.УстановитьПараметр("СтатьяДвижения",Справочники.СтатьиДвижения.ПолучитьСсылку(Запрос.ПараметрыЗапроса.Получить("movement")));	
	КонецЕсли;
	
	Если не Подразделение = Неопределено Тогда
	ЗапросОстатков.УстановитьПараметр("Подразделение",Справочники.подразделения.ПолучитьСсылку(Запрос.ПараметрыЗапроса.Получить("subdivision")));	
	КонецЕсли;
	
	
	Дерево = ЗапросОстатков.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Если  Дерево.Строки.Количество() > 0 Тогда
		ЗаписьJSON = Новый ЗаписьJSON;
		ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(,Символы.Таб);
		
		ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
		
			//МассивГруппировок 		= Новый Массив;
			//СтруктураГруппировки 	= Новый Структура;
		ЗаписьJSON.ЗаписатьНачалоМассива();	
			Для Каждого Строка из Дерево.Строки Цикл
				
				//МассивДетальныхЗаписей 		= Новый Массив;
				//СтруктураДетальныхЗаписей 	= Новый Структура;
				 ЗаписьJSON.ЗаписатьНачалоМассива();
				 ЗаписьJSON.ЗаписатьЗначение(Строка(Строка.Дата));
				 //
				 Для Каждого Запись из Строка.Строки Цикл
					    ЗаписьJSON.ЗаписатьНачалоОбъекта();
						 ЗаписьJSON.ЗаписатьИмяСвойства("Дата");
						 ЗаписьJSON.ЗаписатьЗначение(Строка(Запись.Дата));
						ЗаписьJSON.ЗаписатьКонецОбъекта();
						
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
						 ЗаписьJSON.ЗаписатьИмяСвойства("Подразделение");
						 ЗаписьJSON.ЗаписатьЗначение(Строка(Запись.Подразделение.УникальныйИдентификатор()));
						ЗаписьJSON.ЗаписатьКонецОбъекта();
						
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
						 ЗаписьJSON.ЗаписатьИмяСвойства("СтатьяДвижения");
						 ЗаписьJSON.ЗаписатьЗначение(Строка(Запись.СтатьиДвижения.УникальныйИдентификатор()));
						ЗаписьJSON.ЗаписатьКонецОбъекта();
						
						
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
						 ЗаписьJSON.ЗаписатьИмяСвойства("Сумма");
						 ЗаписьJSON.ЗаписатьЗначение(Запись.Сумма);
						ЗаписьJSON.ЗаписатьКонецОбъекта();
						
						ЗаписьJSON.ЗаписатьНачалоОбъекта();
						 ЗаписьJSON.ЗаписатьИмяСвойства("СуммаОборот");
						 ЗаписьJSON.ЗаписатьЗначение(Запись.СуммаОборот);
						ЗаписьJSON.ЗаписатьКонецОбъекта();
						
						//СтруктураДетальныхЗаписей.Вставить("Дата",			Запись.Дата);
						//СтруктураДетальныхЗаписей.Вставить("Подразделение",	Запись.Подразделение);
						//СтруктураДетальныхЗаписей.Вставить("Сумма",			Запись.Сумма);
						//МассивДетальныхЗаписей.Добавить(СтруктураДетальныхЗаписей);
					КонецЦикла;
				
				ЗаписьJSON.ЗаписатьКонецМассива();	
					
			   //СтруктураГруппировки.Вставить("Период",Строка.Дата);
			   //СтруктураГруппировки.Вставить("ДетальныеЗаписи",МассивДетальныхЗаписей);
			   //МассивГруппировок.Добавить(СтруктураГруппировки);
			КонецЦикла;	
	ЗаписьJSON.ЗаписатьКонецМассива();	
	//СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, МассивГруппировок);
	//ЗаписатьJSON(ЗаписьJSON, ,НастройкиСериализацииJSON);
	 
	 
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();
		
	Ответ = Новый HTTPСервисОтвет(200);	
	Ответ.Заголовки.Вставить("Content-type", "application/json;  charset=utf-8");
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	Иначе
	СтрокаОшибки = "нет результатов";
	Отказ = Истина;
	КонецЕсли;
	Возврат Ответ;
	
КонецФункции
