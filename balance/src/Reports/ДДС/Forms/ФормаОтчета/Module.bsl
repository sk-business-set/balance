&НаСервере
Функция ПолучитьРасшифровкуНаСервере(
	Расшифровка,
	МассивИменРасшифровки,
	ЭтоГруппа = Ложь)

	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ЭлементРасшифровки=Данные.Элементы.Получить(Расшифровка);
	Поля = ЭлементРасшифровки.ПолучитьПоля();
	Для Каждого ИмяРасшифровки Из МассивИменРасшифровки Цикл
		ПолеНоменкл = Поля.Найти(ИмяРасшифровки);
		Если Не ПолеНоменкл = Неопределено Тогда
			текРез = Новый Структура("Статья,СтатьяКудаОткуда,ДДС,ТипДвижения,ПериодМесяц");
			Если ИмяРасшифровки="СуммаПриход" тогда
				текРез.ТипДвижения="Приход";
			ИначеЕсли ИмяРасшифровки="СуммаРасход" тогда
				текРез.ТипДвижения="Расход";
			КонецЕсли;
			Родители=ЭлементРасшифровки.ПолучитьРодителей();
			Для Каждого текРодитель из Родители Цикл
				Если Типзнч(текРодитель) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
					ПоляРодители=текРодитель.ПолучитьПоля();
					текПоле=ПоляРодители.Найти("СтатьяДвиженияКудаОткуда");
					Если НЕ текПоле=Неопределено тогда
						текРез.СтатьяКудаОткуда=текПоле.Значение;
					КонецЕсли;
					
					текПоле=ПоляРодители.Найти("СтатьяДвижения");
					Если НЕ текПоле=Неопределено тогда
						текРез.Статья=текПоле.Значение;
					КонецЕсли;
					текПоле=ПоляРодители.Найти("КудаОткудаДДС");
					Если НЕ текПоле=Неопределено тогда
						текРез.ДДС=текПоле.Значение;
					КонецЕсли;
					текПоле=ПоляРодители.Найти("ПериодМесяц");
					Если НЕ текПоле=Неопределено тогда
						текРез.ПериодМесяц=текПоле.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			Если ЗначениеЗаполнено(текРез.Статья) тогда
				текРез.ДДС=текРез.Статья.РазделДДС;
			ИначеЕсли ЗначениеЗаполнено(текРез.ДДС) тогда
				текРез.Статья=Справочники.СтатьиДвижения.ПустаяСсылка();
	        КонецЕсли;
			Возврат текРез;	
			//ПолеРодитель = ЭлементРасшифровки.ПолучитьРодителей()[0];
			//Если Типзнч(ПолеРодитель) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			//    ЗначениеПоля = ПолеРодитель.ПолучитьПоля().Получить(0);
			//иначе
			//    ЗначениеПоля = ПолеРодитель.ПолучитьРодителей()[0].ПолучитьПоля().Получить(0);
			//КонецЕсли;
			//Если ТипЗнч(ЗначениеПоля.Значение)=Тип("СправочникСсылка.СтатьиДвижения") тогда
			//	Возврат Новый Структура("Статья,ДДС",ЗначениеПоля.Значение,ЗначениеПоля.Значение.РазделДДС);
			//ИначеЕсли ТипЗнч(ЗначениеПоля.Значение)=Тип("ПеречислениеСсылка.РазделыДДС") тогда
			//	Возврат Новый Структура("Статья,ДДС",Справочники.СтатьиДвижения.ПустаяСсылка(),ЗначениеПоля.Значение);
			//КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции


&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	//Здесь заполняем колонки, на которые должна реагировать расшифровка. 
	//В данном варианте отчета поля д.б. ссылками 

	МРасшифровываемых = Новый Массив();
	МРасшифровываемых.Добавить("СуммаПриход");
	МРасшифровываемых.Добавить("СуммаРасход");
	МРасшифровываемых.Добавить("СтатьяДвиженияКудаОткуда");
	МРасшифровываемых.Добавить("КудаОткудаДДС");
	МРасшифровываемых.Добавить("ПериодМесяц");
	МРасшифровываемых.Добавить("СуммаКонечныйОстаток");
	МРасшифровываемых.Добавить("СуммаНачальныйОстаток");

	//Полученное значение 

	РасшифрЗначение = ПолучитьРасшифровкуНаСервере(Расшифровка, МРасшифровываемых); 

	Если РасшифрЗначение = Неопределено Тогда 
		Возврат; 
	КонецЕсли;

	СтандартнаяОбработка = Ложь;

	// Прописываем доступные действия. Если какое то действие не указать, 
	//оно не будет доступно пользователю

	//ОбрРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки,
	//Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	//ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет;
	//ПараметрВыполненногоДействия = Неопределено;
	//ДоступДействия = Новый Массив;
	//ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	//ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Отфильтровать);
	//ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Оформить);
	//ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	//ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Сгруппировать);
	//ДоступДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);

	////Создаем собственные действия
	//ДопПункты = Новый СписокЗначений;
	//ОбщСтрока = "Открыть отчет Расчеты с поставщиками "	+ """" + Строка(ТипЗнч(РасшифрЗначение)) + " = " + РасшифрЗначение + """";
	//ДопПункты.Добавить( 1, ОбщСтрока + " за 1 мес.");
	//ДопПункты.Добавить( 3, ОбщСтрока + " за 3 мес.");
	//ДопПункты.Добавить( 6, ОбщСтрока + " за 6 мес.");
	//ДопПункты.Добавить(12, ОбщСтрока + " за 12 мес.");

	////Меню 
	//ОбрРасшифровки.ВыбратьДействие(Расшифровка,ВыпДействие,ПараметрВыполненногоДействия,ДоступДействия,ДопПункты);

	//ЕслиВыпДействие	= ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет Тогда
	//ИначеЕсли ВыпДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
	//	ОткрытьЗначение(ПараметрВыполненногоДействия);
	//ИначеЕсли ТипЗнч(ВыпДействие) = Тип("Число") Тогда 
	
	текНастройки = ПолучитьНастройкиОтчета();
	Для Каждого текЭлем из Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если текЭлем.ИдентификаторПользовательскойНастройки="" тогда
			УстановитьЗначение(текЭлем,текНастройки);
		Иначе
			текНастройка=Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(текЭлем.ИдентификаторПользовательскойНастройки);
			УстановитьЗначениеПараметра(текНастройки, Строка(текЭлем.Параметр), текНастройка.Значение, текНастройка.Использование);
		КонецЕсли;
	КонецЦикла;
	Для Каждого текЭлем из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если текЭлем.ИдентификаторПользовательскойНастройки="" тогда
			УстановитьЗначение(текЭлем,текНастройки);
		Иначе
			текНастройка=Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(текЭлем.ИдентификаторПользовательскойНастройки);
			УстановитьЗначениеОтбора(текНастройки, Строка(текЭлем.ЛевоеЗначение), текНастройка.ПравоеЗначение, текНастройка.ВидСравнения, текНастройка.Использование);
		КонецЕсли;
	КонецЦикла;
	//УстановитьЗначениеПараметра(текНастройки, "Период", текПериод);
	//Если Элементы.Подразделения.ВыделенныеСтроки.Количество() И НЕ Элементы.Подразделения.ТекущаяСтрока.Пустая() тогда
	//	УстановитьЗначениеОтбора(текНастройки, "ПодразделениеКудаОткуда", Элементы.Подразделения.ТекущаяСтрока, ВидСравненияКомпоновкиДанных.ВИерархии);
	//КонецЕсли;
	Если ЗначениеЗаполнено(РасшифрЗначение.Статья) тогда
		УстановитьЗначениеОтбора(текНастройки, "СтатьяДвижения",РасшифрЗначение.Статья,ВидСравненияКомпоновкиДанных.ВИерархии);
	КонецЕсли;
	Если ЗначениеЗаполнено(РасшифрЗначение.СтатьяКудаОткуда) тогда
		УстановитьЗначениеОтбора(текНастройки, "СтатьяДвиженияКудаОткуда",РасшифрЗначение.СтатьяКудаОткуда,ВидСравненияКомпоновкиДанных.ВИерархии);
	ИначеЕсли ЗначениеЗаполнено(РасшифрЗначение.ДДС) тогда
		УстановитьЗначениеОтбора(текНастройки, "ДДСКудаОткуда",РасшифрЗначение.ДДС, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	Если ЗначениеЗаполнено(РасшифрЗначение.ПериодМесяц) тогда
		УстановитьЗначениеОтбора(текНастройки, "ПериодМесяц",РасшифрЗначение.ПериодМесяц, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	Если РасшифрЗначение.ТипДвижения="Приход" тогда
		УстановитьЗначениеОтбора(текНастройки, "СуммаПриход", 0, ВидСравненияКомпоновкиДанных.Больше); 
	КонецЕсли;
	Если РасшифрЗначение.ТипДвижения="Расход" тогда
		УстановитьЗначениеОтбора(текНастройки, "СуммаРасход", 0, ВидСравненияКомпоновкиДанных.Больше); 
	КонецЕсли;
	ПараметрыОтчета = Новый Структура("СформироватьПриОткрытии", Истина);
	ФормаРасшифровка = ПолучитьФорму("Отчет.Расшифровка_движения.Форма", ПараметрыОтчета, ЭтаФорма,РасшифрЗначение);
	ФормаРасшифровка.Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(текНастройки);
	ФормаРасшифровка.СкомпоноватьРезультат();
	ФормаРасшифровка.Открыть();
	
	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьНастройкиОтчета()
	Возврат Отчеты.Расшифровка_движения.Создать().КомпоновщикНастроек.ПолучитьНастройки();
КонецФункции

&НаСервере 
Процедура УстановитьЗначениеОтбора(Настройки, Имя, Значение, ВидСравнения, текИспользование=Истина) 
   Для Каждого элемент Из Настройки.Отбор.Элементы Цикл
       Если элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Имя) Тогда
           элемент.ПравоеЗначение = Значение;
		   элемент.ВидСравнения=ВидСравнения;
           элемент.Использование = текИспользование;
       КонецЕсли;
   КонецЦикла;
КонецПроцедуры

&НаСервере 
Процедура УстановитьЗначениеПараметра(Настройки, Имя, Значение, текИспользование=Истина) 
   Для Каждого элемент Из Настройки.ПараметрыДанных.Элементы Цикл
       Если ТипЗнч(элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
           Если Строка(элемент.Параметр) = Имя Тогда
               элемент.Значение = Значение;
               элемент.Использование = текИспользование;
           КонецЕсли;
       КонецЕсли;
   КонецЦикла;
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьЗначение(текЭлем,НаборПриемник)
	Если ТипЗнч(текЭлем) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
		Для Каждого текПриемник из НаборПриемник.ПараметрыДанных.Элементы Цикл
			Если Строка(текПриемник.Параметр) = Строка(текЭлем.Параметр) Тогда
				текПриемник.Значение = текЭлем.Значение;
				текПриемник.Использование = текЭлем.Использование;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого текПриемник из НаборПриемник.Отбор.Элементы Цикл
			Если Строка(текПриемник.ЛевоеЗначение) = Строка(текЭлем.ЛевоеЗначение) Тогда
				текПриемник.ПравоеЗначение = текЭлем.ПравоеЗначение;
				текПриемник.ВидСравнения = текЭлем.ВидСравнения;
				текПриемник.Использование = текЭлем.Использование;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры



